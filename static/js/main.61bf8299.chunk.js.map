{"version":3,"sources":["context/WalletContext.js","context/NetworkContext.js","headerLogo.png","context/LedgerController.js","context/LedgerContext.js","vote/shared/SectionHeader.js","header/CustomNodeForm.js","header/HelpModal.js","header/Header.js","withRootTheme.js","context/FactomCliContext.js","context/WalletController.js","context/SeedContext.js","context/SeedController.js","context/FactomCliController.js","TestnetDisclaimer.js","context/NetworkController.js","Disclaimer.js","TestnetWarningBar.js","addWallet/ImportTypeForm.js","addWallet/ImportFctForm.js","addWallet/ImportEcForm.js","addWallet/NewSeedForm.js","walletManager/shared/BalanceFormatter.js","addWallet/GenerateAddressTable.js","addWallet/LedgerForm.js","addWallet/SeedForm.js","addWallet/ImportSeedForm.js","addWallet/AddWalletStepContent.js","addWallet/AddWalletStepper.js","addWallet/AddWalletModal.js","walletManager/Sidebar.js","walletManager/shared/AddressInfoHeader.js","walletManager/SendTransactionPreview.js","walletManager/SendFactoidForm.js","walletManager/ConvertTransactionPreview.js","walletManager/ConvertECForm.js","walletManager/ViewPrivateKeyForm.js","walletManager/AddressInfoForm.js","walletManager/TransactionList.js","walletManager/AddressInfoTab.js","walletManager/WalletTabContent.js","walletManager/WalletManager.js","addWallet/AddInitialWallet.js","vote/listing/VoteTable.js","vote/listing/VoteListing.js","vote/create/VOTE_CONSTANTS.js","vote/shared/VoteSummary.js","vote/shared/SignVote.js","vote/view/ViewVote.js","vote/create/EligibleVotersForm.js","vote/create/PreviewVote.js","vote/create/FinalStep.js","vote/create/CreateVoteController.js","vote/create/ConfigureForm.js","vote/create/CreateVoteStepper.js","AppRouter.js","App.js","registerServiceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","WalletContext","withWalletContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","React","createContext","BaseComponent","props","a","createElement","Consumer","walletController","Object","assign","NetworkContext","withNetwork","networkController","module","exports","p","BIP_32_COIN_TYPES","fct","ec","LedgerController","_this","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","getLedgerAddresses","_ref","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_David_Factom_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","startIndex","amount","type","result","bip32Account","coinType","transport","ledger","index","path","address_o","addressList","wrap","_context","prev","next","networkProps","TransportU2F","create","sent","Fct","getAddress","push","address","Promise","all","map","updateWalletBalance","close","abrupt","stop","_x","_x2","_x3","apply","arguments","signWithLedger","_ref3","_callee2","_ref2","fromAddr","toAddr","signedTX","unsignedTX","_context2","t0","Transaction","builder","t1","t2","getFactoshiFee","t3","t4","t5","t6","input","output","build","signTransaction","marshalBinarySig","toString","rcdSignature","Buffer","from","_x4","checkAddress","_ref4","_callee3","activeFctWallet","_context3","console","error","_x5","_x6","isLedgerConnected","_callee4","_context4","getAppConfiguration","log","state","react__WEBPACK_IMPORTED_MODULE_7___default","_LedgerContext__WEBPACK_IMPORTED_MODULE_9__","Provider","value","children","Component","enhancer","_flowRight","LedgerContext","withLedger","ledgerController","SectionHeader","react_default","Typography_default","gutterBottom","disableGutterBottom","variant","text","CustomNodeForm","event","target","which","preventDefault","_Yup$object$shape","classes","formik_esm","initialValues","host","port","onSubmit","values","actions","handleCustomNode","validationSchema","Yup","shape","defineProperty","required","render","isSubmitting","errors","touched","onKeyPress","handleKeyPress","shared_SectionHeader","id","CustomNodeForm_FormTextField","name","label","msg","className","errorText","Button_default","disabled","color","FormTextField","field","TextField_default","inputProps","spellCheck","maxLength","autoComplete","margin","fullWidth","multiline","withStyles","theme","fontSize","AddWalletModal","open","handleOpen","setState","handleClose","menuText","onClick","Modal_default","aria-labelledby","onClose","Paper_default","modalContent","rel","href","position","boxShadow","shadows","top","left","transform","minHeight","padding","maxWidth","ButtonAppBar","voteAnchorEl","networkAnchorEl","openCustomNodeForm","handleOpenCustomNodeForm","handleCloseCustomNodeForm","handleVoteClick","currentTarget","handleVoteClose","handleNetworkClick","handleNetworkClose","handleTestnet","handleNetworkChange","handleMainnet","handleWallet","readyToManageWallet","isWalletEmpty","setReadyToManageWallet","_this$props","_this$state","testnetActive","network","AppBar_default","root","Toolbar_default","toolbar","IconButton_default","menuButton","aria-label","Link","to","logo","src","alt","flex","testnetHeader","HelpModal","aria-owns","aria-haspopup","CloudDoneOutlined_default","titleAccess","style","ExpandMore_default","Menu_default","anchorEl","Boolean","MenuItem_default","aria-describedby","header_CustomNodeForm","flexGrow","marginBottom","width","marginTop","marginRight","borderStyle","borderWidth","subMenuText","spacing","unit","backgroundColor","palette","background","paper","createMuiTheme","withRootTheme","core_styles","CssBaseline_default","FactomCliContext","withFactomCli","factomCliController","FACTOSHI_MULTIPLIER","LOCAL_STORAGE_KEY","LOCAL_STORAGE_PROPERTY_WHITELIST","WalletController","classCallCheck","possibleConstructorReturn","getPrototypeOf","smartSetState","newState","afterSetState","length","undefined","_noop","resolve","_flow","saveStateToLocalStorage","filterArray","addressArray","filter","saveLocally","_pick","_this$state$addresses","objectSpread","addresses","mainnet","testnet","storageAddresses","localStorage","setItem","JSON","stringify","hydrateStateWithLocalStorage","asyncToGenerator","regenerator_default","localStorageAddresses","prepareArray","parse","getItem","_isNil","addr_o","balance","transactions","prevState","setDefaultIndex","updateBalances","force","isStateHydrated","changeNetwork","connectToServer","deleteAddress","activeAddressIndex_o","toConsumableArray","splice","addAddressTransaction","transactionID","updateAddress","nickname","_isEmpty","getFactoidAddresses","getEntryCreditAddresses","selectAddress","verifyKey","privateKey","_ref5","getPublicAddress","valueOf","err","addAddress","addAddresses","getNextIndex","_ref6","_callee5","_context5","concat","_x7","getActiveAddress","getAddresses","_ref7","_callee6","wallet","_context6","factomCli","getBalance","_x8","_callee7","_ref9","_ref9$force","_ref10","_ref11","factoidAddresses","ecAddresses","_args7","_context7","slicedToArray","getEntryCreditRate","_callee8","_context8","_callee9","ecRate","exampleAddress","fee","_context9","Number","MAX_SAFE_INTEGER","computeRequiredFees","rcdType","getFactoidFee","_callee10","factoshiFee","_context10","newStandardAddress","importType","newSeedAddress","newLedgerAddress","SeedContext","withSeed","seedController","keyToFctAddress","key","keyToPrivateFctAddress","keyToECAddress","keyToPrivateEcAddress","SeedController","getSeedAddresses","mnemonic","factombip44","FactomBIP44","generateFactoidPrivateKey","generateEntryCreditPrivateKey","signWithSeed","createFactoidTransaction","createEntryCreditPurchaseTransaction","verifySeed","getPrivateKey","getRandomMnemonic","randomMnemonic","FactomCliController","defaultConnectionParams","apiPort","debugPath","protocol","rejectUnauthorized","retry","retries","factor","minTimeout","maxTimeout","newFactomCli","connectionParams","FactomCli","defaultsDeep","_args","ConfirmationDialogRaw","handleAgree","handleChange","nextProps","other","objectWithoutProperties","Dialog_default","disableBackdropClick","disableEscapeKeyDown","DialogTitle_default","align","Warning_default","DialogContent_default","lessPad","DialogActions_default","ConfirmationDialog","_this2","TestnetDisclaimer_ConfirmationDialogRaw","paddingBottom","NetworkController","factoidAbbreviation","factoidAbbreviationFull","ecAbbreviation","ecAbbreviationFull","explorerURL","TestnetDisclaimer","Disclaimer_ConfirmationDialogRaw","appBar","bottom","paddingTop","marginLeft","warningIcon","toolbarSpace","height","Fragment","ImportTypeForm","handleNext","FormControl_default","_get","component","FormLabel_default","RadioGroup_default","onChange","e","updateImportType","getImportTypes","option","FormControlLabel_default","control","Radio_default","fctAddrPath","ImportFctForm","_this$props$walletCon","factoidAddress","fctAddress_o","get","trim","test","isValidFctPublicAddress","findIndex","ImportFctForm_FormTextField","handleBack","ImportEcForm","entryCreditAddress","ecAddress_o","isValidEcPublicAddress","ImportEcForm_FormTextField","helperText","NewSeedForm","step","nextStep","setMnemonic","oneOf","fontWeight","warningText","NewSeedForm_FormTextField","autoFocus","FormatFCTBalance","factoshiBalance","parseInt","toLocaleString","maximumFractionDigits","FormatECBalance","entryCreditBalance","GenerateAddressTable","loading","addGeneratedAddress","arrayHelpers","newAddress","replace","validateNickname","userAddressNicknames","userAddressList","indexOf","getNext","getNextFive","generatedAddressList","setFieldValue","userAddresses","title","Table_default","TableHead_default","TableRow_default","CustomCell","TableBody_default","checkboxPath","nicknamePath","duplicate","Tooltip_default","Checkbox_default","checked","labelPlacement","form","BalanceFormatter","find","validate","errorTextSmall","TableFooter_default","CircularProgress_default","thickness","head","paddingLeft","paddingRight","body","TableCell","overflowX","maxHeight","common","black","white","LedgerForm","retryConnection","ledgerStatus","ledgerConnected","hasAddressSelected","formValues","keys","startsWith","some","enableReinitialize","validAddresses","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","Symbol","iterator","done","return","finish","addWallet_GenerateAddressTable","getTitle","SeedForm","ImportSeedForm","validMnemonic","ImportSeedForm_FormTextField","placeholder","AddWalletStepContent","activeStep","addWallet_ImportTypeForm","addWallet_ImportFctForm","addWallet_ImportEcForm","addWallet_NewSeedForm","addWallet_ImportSeedForm","addWallet_LedgerForm","addWallet_SeedForm","getStandardSteps","getSeedAddressSteps","stepMap","importSeed","new","AddWalletStepper","initialState","getSteps","handleReset","handleCloseText","steps","sectionHeaderText","Stepper_default","stepper","Step_default","StepLabel_default","AddWalletStepper_TestnetFinalStep","AddWalletStepper_MainnetFinalStep","addWallet_AddWalletStepContent","MainnetFinalStep","TestnetFinalStep","testnetWarning","OpenInNew_default","minWidth","borderColor","display","center","button","addWallet_AddWalletStepper","Sidebar","listfactoidAddresses","expanded","nicknameStyle","ExpansionPanel_default","ExpansionPanelSummary_default","Grid_default","container","justify","item","break","listecAddresses","xs","noPadding","List_default","ListItem_default","walletListHeader","addressHeading","disableGutters","walletList","listAddrRoot","addWallet_AddWalletModal","wordWrap","overflow","borderRadius","textAlign","pointer","cursor","_props$walletControll","activeAddress_o","elevation","react_copy_to_clipboard_lib","SvgIcon_default","VerifiedUser_default","transferFactoidAmountText","transferFactoidUnitText","factoidAmountSmallText","detail","divider","opacity","border","factoidAmount","sendFactoidFee","totalFactoidAmount","totalFactoidAmountText","feeFactoidAmountText","recipientAddressPath","myFctWalletAnchorElPath","SendFactoidForm","seed","maxFactoids","maxAmount","getMaxFCT","sendFactoidAmount","recipientAddress","myFctWalletAnchorEl","transaction","seedTrans_o","_toAddr","_amount","_index","ledgerTrans_o","txId","Math","round","resetForm","sendTransaction","positive","max","when","is","then","otherwise","notRequired","shared_AddressInfoHeader","FactoidAddressMenu","walletManager_SendTransactionPreview","transactionError","transactionErrorText","CheckCircleOutlined_default","nativeColor","successIcon","sendButton","convertECAmountText","ecUnitText","factoidCostSmallText","ecAmount","totalFactoidCostText","ConvertECForm","sendFactoshiFee","maxEntryCredits","getMaxEC","entryCreditAmount","ECAddressMenu","walletManager_ConvertTransactionPreview","ViewPrivateKeyForm","ViewPrivateKeyForm_FormTextField","errorClass","Visibility_default","enableSpellCheck","AddressInfoForm","window","setTimeout","AddressInfoForm_FormTextField","size","deleteButton","deleteConfirmationText","TransactionList","overflowWrap","walletManager_AddressInfoForm","walletManager_TransactionList","WalletTabContent","tabValue","activeAddress","Tabs_default","indicatorColor","textColor","centered","Tab_default","TabContainer","walletManager_AddressInfoTab","walletManager_SendFactoidForm","walletManager_ConvertECForm","walletManager_ViewPrivateKeyForm","tabContainer","WalletManager","walletManager_Sidebar","walletManager_WalletTabContent","AddInitialWallet","withRouter","createData","voteID","adminID","status","commitPhase","revealPhase","rows","VoteTable","tableWrapper","expandColumn","ExpandLess_default","toggleExpand","expandIcon","TableCell_default","titleColumn","columnHeader","statusColumn","defaultValue","dateColumn","pollChainIDColumn","shortPollChainIDColumn","adminIDColumn","shortAdminIDColumn","row","hover","TablePagination_default","Grid","onChangePage","count","rowsPerPage","page","table","textOverflow","footerPagination","VoteListing","handleExpand","direction","topFilters","index_es","Switch_default","defaultChecked","FilterList_default","listing_VoteTable","BINARY_CONFIG","SINGLE_OPTION_CONFIG","APPROVAL_CONFIG","INSTANT_RUNOFF_CONFIG","hrefPath","optionsPath","weightedMinTurnoutPath","unweightedMinTurnoutPath","weightedMinSupportPath","unweightedMinSupportPath","voteTypes","VoteSummary","poll","hasMinTurnoutCritiera","hasMinSupportCriteria","smallGridColumn","InfoOutlined_default","pad","dense","LabelImportant_default","ListItemText_default","primary","disableRipple","flexBasis","optionList","SignVote","timer","success","handleButtonClick","clearTimeout","buttonClassname","classNames","buttonSuccess","wrapper","Check_default","Fingerprint_default","fabProgress","buttonProgress","alignItems","green","&:hover","zIndex","createVoterData","voterID","commit","reveal","role","vote","voterRows","ViewVote","pollJSON","proposal","externalRef","hash","algo","phasesBlockHeights","commitStart","commitEnd","revealStart","revealEnd","eligibleVotersChainId","config","options","allowAbstention","computeResultsAgainst","minOptions","maxOptions","acceptanceCriteria","minSupport","minTurnout","formFields","protocolVersion","pollAdminID","pollChainID","QS","location","search","expand","handleTabChange","shared_VoteSummary","ArrowBack_default","ArrowForward_default","chainIDColumn","Done_default","Close_default","selected","hidden","shared_SignVote","selectedListPath","SelectParticipants","scrollTo","eligibleVotersForm","updateParticipants","borders","weight","padLoadVoters","listContainer","list","voter","Person_default","secondary","remove","Clear_default","stepperButtons","borderRightStyle","borderRightColor","borderRightWidth","borderLeftStyle","borderLeftColor","borderLeftWidth","CreateVoteController","pollForm","winnerCriteria","voteTypeText","questionSource","workingHref","workingOption","checkedTurnout","checkedSupport","workingWeightMinTurnout","workingUnweightMinTurnout","workingWeightMinSupport","workingUnweightMinSupport","workingMinSupportOption","participantsJSON","selectedList","workingVoterID","workingWeight","updatePoll","VOTE_TYPE_VALUES","COMPUTE_AGAINST_VALUES","ABSTENTION_VALUES","abstentionPath","voteTypeTextPath","workingOptionPath","workingHrefPath","checkedTurnoutPath","ConfigureVoteForm","criteriaStyle","_omit","weighted","unweighted","winnerCritieria","*","handleBlur","ConfigureForm_FormTextField","ConfigureForm_FormSelectField","newValue","onBlur","raiseRadio","optionListItem","FormSelectField","InputLabel_default","htmlFor","Select_default","CreateVoteStepper","stepIndex","createVoteSnapshot","EligibleVotersForm","ConfigureForm","create_PreviewVote","CreateVoteController_CreateVoteController","create_FinalStep","getStepContent","AppRouter","HashRouter","Route","exact","walletManager_WalletManager","addWallet_AddInitialWallet","App","context_NetworkController","context_FactomCliController","Disclaimer","context_WalletController","Header","context_SeedController","src_AppRouter","src_TestnetWarningBar","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61bf8299.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst WalletContext = React.createContext();\r\n\r\nconst withWalletContext = (BaseComponent) => (props) => (\r\n\t<WalletContext.Consumer>\r\n\t\t{(walletController) => (\r\n\t\t\t<BaseComponent {...props} walletController={walletController} />\r\n\t\t)}\r\n\t</WalletContext.Consumer>\r\n);\r\n\r\nexport { WalletContext, withWalletContext };\r\n","import React from 'react';\r\n\r\nconst NetworkContext = React.createContext();\r\n\r\nconst withNetwork = (BaseComponent) => (props) => (\r\n\t<NetworkContext.Consumer>\r\n\t\t{(networkController) => (\r\n\t\t\t<BaseComponent {...props} networkController={networkController} />\r\n\t\t)}\r\n\t</NetworkContext.Consumer>\r\n);\r\n\r\nexport { NetworkContext, withNetwork };\r\n","module.exports = __webpack_public_path__ + \"static/media/headerLogo.e79a5c9c.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { LedgerContext } from './LedgerContext';\r\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\r\nimport Fct from '@factoid.org/hw-app-fct';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { Transaction } from 'factom/dist/factom';\r\n/**\r\n * Constants\r\n */\r\nconst BIP_32_COIN_TYPES = { fct: 131, ec: 132 };\r\n\r\nclass LedgerController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisLedgerConnected: this.isLedgerConnected,\r\n\t\t\tgetLedgerAddresses: this.getLedgerAddresses,\r\n\t\t\tsignWithLedger: this.signWithLedger,\r\n\t\t\tcheckAddress: this.checkAddress,\r\n\t\t};\r\n\t}\r\n\r\n\tgetLedgerAddresses = async (startIndex, amount, type) => {\r\n\t\tconst result = [];\r\n\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst coinType = BIP_32_COIN_TYPES[type];\r\n\r\n\t\tconst transport = await TransportU2F.create();\r\n\t\tconst ledger = new Fct(transport);\r\n\r\n\t\tfor (let index = startIndex; index < startIndex + amount; index++) {\r\n\t\t\tconst path = \"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + index;\r\n\t\t\tconst address_o = await ledger.getAddress(path);\r\n\r\n\t\t\tresult.push({ address: address_o.address, index });\r\n\t\t}\r\n\r\n\t\tconst addressList = await Promise.all(\r\n\t\t\tresult.map(this.props.walletController.updateWalletBalance)\r\n\t\t);\r\n\r\n\t\ttransport.close();\r\n\r\n\t\treturn addressList;\r\n\t};\r\n\r\n\tsignWithLedger = async ({ fromAddr, toAddr, amount, index }) => {\r\n\t\tlet signedTX = {};\r\n\t\tlet transport = await TransportU2F.create();\r\n\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst path = \"44'/131'/\" + bip32Account + \"'/0/\" + index;\r\n\r\n\t\tconst ledger = new Fct(transport);\r\n\r\n\t\tconst unsignedTX = Transaction.builder()\r\n\t\t\t.input(\r\n\t\t\t\tfromAddr,\r\n\t\t\t\tamount + (await this.props.walletController.getFactoshiFee())\r\n\t\t\t)\r\n\t\t\t.output(toAddr, amount)\r\n\t\t\t.build();\r\n\r\n\t\tconst result = await ledger.signTransaction(\r\n\t\t\tpath,\r\n\t\t\tunsignedTX.marshalBinarySig.toString('hex')\r\n\t\t);\r\n\r\n\t\tif (result) {\r\n\t\t\tsignedTX = Transaction.builder(unsignedTX)\r\n\t\t\t\t.rcdSignature(\r\n\t\t\t\t\tBuffer.from(result['r'], 'hex'),\r\n\t\t\t\t\tBuffer.from(result['s'], 'hex')\r\n\t\t\t\t)\r\n\t\t\t\t.build();\r\n\t\t}\r\n\t\ttransport.close();\r\n\t\treturn signedTX;\r\n\t};\r\n\r\n\tcheckAddress = async (activeFctWallet, type) => {\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst coinType = BIP_32_COIN_TYPES[type];\r\n\r\n\t\tconst path =\r\n\t\t\t\"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + activeFctWallet.index;\r\n\r\n\t\ttry {\r\n\t\t\tvar transport = await TransportU2F.create();\r\n\r\n\t\t\tconst ledger = new Fct(transport);\r\n\r\n\t\t\tawait ledger.getAddress(path, true);\r\n\r\n\t\t\ttransport.close();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Failed getFctAddr from Ledger Nano S :', err);\r\n\t\t}\r\n\t};\r\n\r\n\tisLedgerConnected = async () => {\r\n\t\tlet result = false;\r\n\t\ttry {\r\n\t\t\tlet transport = await TransportU2F.create();\r\n\t\t\tconst ledger = new Fct(transport);\r\n\t\t\tawait ledger.getAppConfiguration();\r\n\r\n\t\t\tresult = true;\r\n\r\n\t\t\ttransport.close();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('Transport Err:' + err);\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<LedgerContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</LedgerContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nLedgerController.propTypes = {\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nconst enhancer = _flowRight(withWalletContext, withNetwork);\r\n\r\nexport default enhancer(LedgerController);\r\n","import React from 'react';\r\n\r\nconst LedgerContext = React.createContext();\r\n\r\nconst withLedger = (BaseComponent) => (props) => (\r\n\t<LedgerContext.Consumer>\r\n\t\t{(ledgerController) => (\r\n\t\t\t<BaseComponent {...props} ledgerController={ledgerController} />\r\n\t\t)}\r\n\t</LedgerContext.Consumer>\r\n);\r\n\r\nexport { LedgerContext, withLedger };\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction SectionHeader(props) {\r\n\treturn (\r\n\t\t<Typography gutterBottom={!props.disableGutterBottom} variant=\"h6\">\r\n\t\t\t{props.text}\r\n\t\t</Typography>\r\n\t);\r\n}\r\n\r\nexport default SectionHeader;\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SectionHeader from '../vote/shared/SectionHeader.js';\r\n\r\nconst hostPath = 'host';\r\nconst portPath = 'port';\r\n\r\nclass CustomNodeForm extends React.Component {\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ host: '', port: '' }}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tconsole.log('Submitted');\r\n\t\t\t\t\tthis.props.handleCustomNode(values[hostPath], values[portPath]);\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[hostPath]: Yup.string().required('Required'),\r\n\t\t\t\t\t[portPath]: Yup.string().required('Required'),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t<SectionHeader text=\"Custom Node Form\" id=\"modal-title\" />\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={errors[hostPath] && touched[hostPath] ? true : false}\r\n\t\t\t\t\t\t\tname={hostPath}\r\n\t\t\t\t\t\t\tlabel=\"Host\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={hostPath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={errors[portPath] && touched[portPath] ? true : false}\r\n\t\t\t\t\t\t\tname={portPath}\r\n\t\t\t\t\t\t\tlabel=\"Port\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={portPath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nCustomNodeForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({ errorText: { color: 'red', fontSize: '12px' } });\r\nexport default withStyles(styles)(CustomNodeForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SectionHeader from '../vote/shared/SectionHeader.js';\r\n\r\nclass AddWalletModal extends React.Component {\r\n\tstate = {\r\n\t\topen: false,\r\n\t};\r\n\r\n\thandleOpen = () => {\r\n\t\tthis.setState({ open: true });\r\n\t};\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button className={classes.menuText} onClick={this.handleOpen}>\r\n\t\t\t\t\tHelp\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\taria-labelledby=\"modal-title\"\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Paper className={classes.modalContent}>\r\n\t\t\t\t\t\t<SectionHeader text=\"Help\" id=\"modal-title\" />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tPlease go to the #myfactomwallet channel on The Factoid\r\n\t\t\t\t\t\t\tAuthority's{' '}\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDiscord server\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t&nbsp;for support.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tLedger Nano S documentation can be found{' '}\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\thref={'http://help.myfactomwallet.com/'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\there\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tMyFactomWallet's Github repositories are{' '}\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\thref={'https://github.com/MyFactomWallet'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\there\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nAddWalletModal.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tmodalContent: {\r\n\t\tposition: 'absolute',\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\ttop: `50%`,\r\n\t\tleft: `50%`,\r\n\t\ttransform: `translate(-50%, -50%)`,\r\n\t\tminHeight: '138px',\r\n\t\tpadding: '30px',\r\n\t\tmaxWidth: '425px',\r\n\t},\r\n\tmenuText: {\r\n\t\tcolor: 'white',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(AddWalletModal);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport logo from '../headerLogo.png';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport CloudDone from '@material-ui/icons/CloudDoneOutlined';\r\nimport CustomNodeForm from './CustomNodeForm';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport HelpModal from './HelpModal';\r\n\r\n//import CloudOff from '@material-ui/icons/CloudOff';\r\n\r\nclass ButtonAppBar extends React.Component {\r\n\tstate = {\r\n\t\tvoteAnchorEl: null,\r\n\t\tnetworkAnchorEl: null,\r\n\t\topenCustomNodeForm: false,\r\n\t};\r\n\r\n\thandleOpenCustomNodeForm = () => {\r\n\t\tthis.setState({ openCustomNodeForm: true });\r\n\t};\r\n\r\n\thandleCloseCustomNodeForm = () => {\r\n\t\tthis.setState({ openCustomNodeForm: false });\r\n\t};\r\n\r\n\thandleVoteClick = (event) => {\r\n\t\tthis.setState({ voteAnchorEl: event.currentTarget });\r\n\t};\r\n\r\n\thandleVoteClose = () => {\r\n\t\tthis.setState({ voteAnchorEl: null });\r\n\t};\r\n\r\n\thandleNetworkClick = (event) => {\r\n\t\tthis.setState({ networkAnchorEl: event.currentTarget });\r\n\t};\r\n\r\n\thandleNetworkClose = () => {\r\n\t\tthis.setState({ networkAnchorEl: null });\r\n\t};\r\n\r\n\thandleTestnet = () => {\r\n\t\tthis.setState({\r\n\t\t\tnetworkAnchorEl: null,\r\n\t\t});\r\n\t\tthis.props.walletController.handleNetworkChange('testnet');\r\n\t};\r\n\r\n\thandleMainnet = () => {\r\n\t\tthis.setState({\r\n\t\t\tnetworkAnchorEl: null,\r\n\t\t});\r\n\t\tthis.props.walletController.handleNetworkChange('mainnet');\r\n\t};\r\n\r\n\thandleWallet = () => {\r\n\t\tif (\r\n\t\t\t!this.props.walletController.readyToManageWallet &&\r\n\t\t\t!this.props.walletController.isWalletEmpty()\r\n\t\t) {\r\n\t\t\tthis.props.walletController.setReadyToManageWallet(true);\r\n\t\t}\r\n\t};\r\n\r\n\thandleCustomNode = (host, port) => {\r\n\t\tconsole.log('Host: ' + host);\r\n\t\tconsole.log('Port: ' + port);\r\n\t\t/* this.setState({\r\n\t\t\tnetwork: host + ':' + port,\r\n\t\t}); */\r\n\t\tthis.handleCloseCustomNodeForm();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\t\tconst { voteAnchorEl, networkAnchorEl } = this.state;\r\n\r\n\t\tconst testnetActive = networkProps.network === 'testnet';\r\n\r\n\t\treturn (\r\n\t\t\t<AppBar position=\"static\" className={classes.root}>\r\n\t\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"Menu\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<img className={classes.logo} src={logo} alt=\"logo\" />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.flex}>\r\n\t\t\t\t\t\t<Link className={classes.menuText} to=\"/\">\r\n\t\t\t\t\t\t\tMyFactomWallet\r\n\t\t\t\t\t\t\t{testnetActive && (\r\n\t\t\t\t\t\t\t\t<span className={classes.testnetHeader}>\r\n\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;TESTNET\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{/* <div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\taria-owns={voteAnchorEl ? 'simple-vote-menu' : null}\r\n\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\tonClick={this.handleVoteClick}\r\n\t\t\t\t\t\t\tclassName={classes.menuText}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tVote\r\n\t\t\t\t\t\t\t<ExpandMore />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\tid=\"simple-vote-menu\"\r\n\t\t\t\t\t\t\tanchorEl={voteAnchorEl}\r\n\t\t\t\t\t\t\topen={Boolean(voteAnchorEl)}\r\n\t\t\t\t\t\t\tonClose={this.handleVoteClose}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\tonClick={this.handleVoteClose}\r\n\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\tto={'/vote'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tView Polls\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\tto={'/createVote'}\r\n\t\t\t\t\t\t\t\tonClick={this.handleVoteClose}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate Poll\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\thref=\"#/\"\r\n\t\t\t\t\t\tonClick={this.handleWallet}\r\n\t\t\t\t\t\tclassName={classes.menuText}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tWallet\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<HelpModal />\r\n\t\t\t\t\t<div className={classes.network}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\taria-owns={voteAnchorEl ? 'simple-vote-menu' : null}\r\n\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\tonClick={this.handleNetworkClick}\r\n\t\t\t\t\t\t\tclassName={classes.menuText}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNode: {networkProps.network}\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<CloudDone\r\n\t\t\t\t\t\t\t\ttitleAccess=\"Network Operational\"\r\n\t\t\t\t\t\t\t\tstyle={{ color: 'green' }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ExpandMore />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\tid=\"simple-vote-menu\"\r\n\t\t\t\t\t\t\tanchorEl={networkAnchorEl}\r\n\t\t\t\t\t\t\topen={Boolean(networkAnchorEl)}\r\n\t\t\t\t\t\t\tonClose={this.handleNetworkClose}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem onClick={this.handleMainnet} disabled={!testnetActive}>\r\n\t\t\t\t\t\t\t\tMainnet&nbsp;&nbsp; <CloudDone style={{ color: 'green' }} />\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t<MenuItem onClick={this.handleTestnet} disabled={testnetActive}>\r\n\t\t\t\t\t\t\t\tTestnet&nbsp;&nbsp; <CloudDone style={{ color: 'green' }} />\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t{/* <MenuItem\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.handleNetworkClose();\r\n\t\t\t\t\t\t\t\t\tthis.handleOpenCustomNodeForm();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCustom Node\r\n\t\t\t\t\t\t\t</MenuItem> */}\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\taria-labelledby=\"simple-modal-title\"\r\n\t\t\t\t\t\t\taria-describedby=\"simple-modal-description\"\r\n\t\t\t\t\t\t\topen={this.state.openCustomNodeForm}\r\n\t\t\t\t\t\t\tonClose={this.handleCloseCustomNodeForm}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={classes.modalContent}>\r\n\t\t\t\t\t\t\t\t<CustomNodeForm handleCustomNode={this.handleCustomNode} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t);\r\n\t}\r\n}\r\nButtonAppBar.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\tmarginBottom: '15px',\r\n\t},\r\n\ttoolbar: {\r\n\t\twidth: '90%',\r\n\t\tmargin: '0 auto',\r\n\t},\r\n\tflex: {\r\n\t\tflex: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginTop: 3,\r\n\t\tmarginRight: 10,\r\n\t},\r\n\tlogo: {\r\n\t\twidth: '39px',\r\n\t},\r\n\tmenuText: {\r\n\t\tcolor: 'white',\r\n\t},\r\n\tnetwork: {\r\n\t\tborderStyle: 'solid',\r\n\t\tborderWidth: '1px',\r\n\t\tcolor: 'green',\r\n\t},\r\n\tsubMenuText: {\r\n\t\tcolor: 'black',\r\n\t},\r\n\tmodalContent: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: theme.spacing.unit * 50,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing.unit * 4,\r\n\t\ttop: `50%`,\r\n\t\tleft: `50%`,\r\n\t\ttransform: `translate(-50%, -50%)`,\r\n\t},\r\n\ttestnetHeader: { color: '#ffa000' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\nexport default enhancer(ButtonAppBar);\r\n","import React from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {},\r\n});\r\n\r\nfunction withRootTheme(Component) {\r\n\tfunction WithRoot(props) {\r\n\t\t// MuiThemeProvider makes the theme available down the React tree\r\n\t\t// thanks to React context.\r\n\t\treturn (\r\n\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Component {...props} />\r\n\t\t\t</MuiThemeProvider>\r\n\t\t);\r\n\t}\r\n\r\n\treturn WithRoot;\r\n}\r\n\r\nexport default withRootTheme;\r\n","import React from 'react';\r\n\r\nconst FactomCliContext = React.createContext();\r\n\r\nconst withFactomCli = (BaseComponent) => (props) => (\r\n\t<FactomCliContext.Consumer>\r\n\t\t{(factomCliController) => (\r\n\t\t\t<BaseComponent {...props} factomCliController={factomCliController} />\r\n\t\t)}\r\n\t</FactomCliContext.Consumer>\r\n);\r\n\r\nexport { FactomCliContext, withFactomCli };\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _flow from 'lodash/flow';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _noop from 'lodash/noop';\r\nimport _isNil from 'lodash/isNil';\r\nimport _pick from 'lodash/pick';\r\nimport { WalletContext } from './WalletContext';\r\nimport { withFactomCli } from './FactomCliContext';\r\nimport { withNetwork } from './NetworkContext';\r\nimport { Transaction, getPublicAddress } from 'factom/dist/factom';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst FACTOSHI_MULTIPLIER = 0.00000001;\r\nconst LOCAL_STORAGE_KEY = 'storageAddresses';\r\nconst LOCAL_STORAGE_PROPERTY_WHITELIST = [\r\n\t'importType',\r\n\t'address',\r\n\t'nickname',\r\n\t'index',\r\n\t'saveLocally',\r\n];\r\n\r\nclass WalletController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\taddresses: {\r\n\t\t\t\tmainnet: {\r\n\t\t\t\t\tfct: [],\r\n\t\t\t\t\tec: [],\r\n\t\t\t\t},\r\n\t\t\t\ttestnet: {\r\n\t\t\t\t\tfct: [],\r\n\t\t\t\t\tec: [],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t//===================================================\r\n\t\t\tactiveAddressIndex_o: null,\r\n\t\t\tisStateHydrated: false,\r\n\t\t\treadyToManageWallet: false,\r\n\t\t\tsetReadyToManageWallet: this.setReadyToManageWallet,\r\n\t\t\tisWalletEmpty: this.isWalletEmpty,\r\n\t\t\thandleNetworkChange: this.handleNetworkChange,\r\n\t\t\tverifyKey: this.verifyKey,\r\n\t\t\tupdateAddress: this.updateAddress,\r\n\t\t\taddAddressTransaction: this.addAddressTransaction,\r\n\t\t\tdeleteAddress: this.deleteAddress,\r\n\t\t\tgetAddresses: this.getAddresses,\r\n\t\t\tgetFactoidAddresses: this.getFactoidAddresses,\r\n\t\t\tgetEntryCreditAddresses: this.getEntryCreditAddresses,\r\n\t\t\taddAddresses: this.addAddresses,\r\n\t\t\taddAddress: this.addAddress,\r\n\t\t\tselectAddress: this.selectAddress,\r\n\t\t\tgetActiveAddress: this.getActiveAddress,\r\n\t\t\tupdateWalletBalance: this.updateWalletBalance,\r\n\t\t\tupdateBalances: this.updateBalances,\r\n\t\t\tgetEntryCreditRate: this.getEntryCreditRate,\r\n\t\t\tgetFactoshiFee: this.getFactoshiFee,\r\n\t\t\tgetFactoidFee: this.getFactoidFee,\r\n\t\t\tnewStandardAddress: this.newStandardAddress,\r\n\t\t\tnewSeedAddress: this.newSeedAddress,\r\n\t\t\tnewLedgerAddress: this.newLedgerAddress,\r\n\t\t};\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\t//get from storage\r\n\t\tthis.hydrateStateWithLocalStorage();\r\n\t}\r\n\r\n\tsmartSetState = (newState, afterSetState = _noop) =>\r\n\t\tnew Promise((resolve) =>\r\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\r\n\t\t);\r\n\r\n\tsaveStateToLocalStorage = () => {\r\n\t\tconst filterArray = (addressArray) =>\r\n\t\t\taddressArray\r\n\t\t\t\t.filter((address) => address.saveLocally)\r\n\t\t\t\t.map((address) => _pick(address, LOCAL_STORAGE_PROPERTY_WHITELIST));\r\n\r\n\t\tconst { mainnet, testnet } = { ...this.state.addresses };\r\n\r\n\t\tconst storageAddresses = {\r\n\t\t\tmainnet: { fct: filterArray(mainnet.fct), ec: filterArray(mainnet.ec) },\r\n\t\t\ttestnet: { fct: filterArray(testnet.fct), ec: filterArray(testnet.ec) },\r\n\t\t};\r\n\r\n\t\tlocalStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storageAddresses));\r\n\t};\r\n\r\n\thydrateStateWithLocalStorage = async () => {\r\n\t\t// get local\r\n\t\tconst localStorageAddresses = JSON.parse(\r\n\t\t\tlocalStorage.getItem(LOCAL_STORAGE_KEY)\r\n\t\t);\r\n\r\n\t\tif (!_isNil(localStorageAddresses)) {\r\n\t\t\tconst prepareArray = (addressArray) =>\r\n\t\t\t\taddressArray.map((addr_o) => ({\r\n\t\t\t\t\t...addr_o,\r\n\t\t\t\t\tbalance: null,\r\n\t\t\t\t\ttransactions: [],\r\n\t\t\t\t}));\r\n\r\n\t\t\tconst { mainnet, testnet } = localStorageAddresses;\r\n\r\n\t\t\tconst storageAddresses = {\r\n\t\t\t\tmainnet: {\r\n\t\t\t\t\tfct: prepareArray(mainnet.fct),\r\n\t\t\t\t\tec: prepareArray(mainnet.ec),\r\n\t\t\t\t},\r\n\t\t\t\ttestnet: {\r\n\t\t\t\t\tfct: prepareArray(testnet.fct),\r\n\t\t\t\t\tec: prepareArray(testnet.ec),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tawait this.smartSetState((prevState) => ({\r\n\t\t\t\taddresses: storageAddresses,\r\n\t\t\t}));\r\n\r\n\t\t\tawait this.setDefaultIndex();\r\n\t\t\tawait this.updateBalances({ force: true });\r\n\t\t}\r\n\t\tawait this.smartSetState({ readyToManageWallet: !this.isWalletEmpty() });\r\n\t\tawait this.smartSetState({ isStateHydrated: true });\r\n\t};\r\n\r\n\tsetReadyToManageWallet = (value) => {\r\n\t\tthis.smartSetState({\r\n\t\t\treadyToManageWallet: value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleNetworkChange = async (network) => {\r\n\t\tawait this.smartSetState({ isStateHydrated: false });\r\n\t\tawait this.props.networkController.changeNetwork(network);\r\n\t\tawait this.props.factomCliController.connectToServer();\r\n\t\tthis.hydrateStateWithLocalStorage();\r\n\t};\r\n\r\n\tdeleteAddress = async (activeAddressIndex_o) => {\r\n\t\tconst type = activeAddressIndex_o.type;\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t// create copy of current addressList\r\n\t\tconst addressList = [...this.state.addresses[network][type]];\r\n\r\n\t\t//remove address\r\n\t\taddressList.splice(activeAddressIndex_o.index, 1);\r\n\r\n\t\t// overwrite addresses\r\n\t\tawait this.smartSetState((prevState) => ({\r\n\t\t\taddresses: {\r\n\t\t\t\t...prevState.addresses,\r\n\t\t\t\t[network]: {\r\n\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t[type]: [...addressList],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}));\r\n\r\n\t\tawait this.setDefaultIndex();\r\n\r\n\t\tthis.saveStateToLocalStorage();\r\n\t};\r\n\r\n\taddAddressTransaction = (activeAddressIndex_o, transactionID) => {\r\n\t\tconst type = activeAddressIndex_o.type;\r\n\t\tconst index = activeAddressIndex_o.index;\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t// get address transaction list to update\r\n\t\tconst addressList = [...this.state.addresses[network][type]];\r\n\t\tconst addr_o = addressList[index];\r\n\r\n\t\t// add transaction\r\n\t\taddr_o.transactions.push(transactionID);\r\n\r\n\t\t// replace address\r\n\t\taddressList[activeAddressIndex_o.index] = addr_o;\r\n\r\n\t\t// overwrite addresses\r\n\t\treturn this.smartSetState((prevState) => ({\r\n\t\t\taddresses: {\r\n\t\t\t\t...prevState.addresses,\r\n\t\t\t\t[network]: {\r\n\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t[type]: [...addressList],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}));\r\n\t};\r\n\r\n\tupdateAddress = async (activeAddressIndex_o, nickname, saveLocally) => {\r\n\t\tconst type = activeAddressIndex_o.type;\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t// create copy of current addressList\r\n\t\tconst addressList = [...this.state.addresses[network][type]];\r\n\r\n\t\t// create and update copy of current address\r\n\t\tconst addr_o = { ...addressList[activeAddressIndex_o.index] };\r\n\t\taddr_o.nickname = nickname;\r\n\t\taddr_o.saveLocally = saveLocally;\r\n\r\n\t\t// replace address\r\n\t\taddressList[activeAddressIndex_o.index] = addr_o;\r\n\r\n\t\t// overwrite addresses\r\n\t\tawait this.smartSetState((prevState) => ({\r\n\t\t\taddresses: {\r\n\t\t\t\t...prevState.addresses,\r\n\t\t\t\t[network]: {\r\n\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t[type]: [...addressList],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}));\r\n\r\n\t\tthis.saveStateToLocalStorage();\r\n\t};\r\n\r\n\tisWalletEmpty = () => {\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\treturn (\r\n\t\t\t_isEmpty(this.state.addresses[network].fct) &&\r\n\t\t\t_isEmpty(this.state.addresses[network].ec)\r\n\t\t);\r\n\t};\r\n\r\n\tsetDefaultIndex = () => {\r\n\t\tif (!_isEmpty(this.getFactoidAddresses())) {\r\n\t\t\treturn this.selectAddress(0, 'fct');\r\n\t\t} else if (!_isEmpty(this.getEntryCreditAddresses())) {\r\n\t\t\treturn this.selectAddress(0, 'ec');\r\n\t\t} else {\r\n\t\t\treturn this.smartSetState({\r\n\t\t\t\tactiveAddressIndex_o: null,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tverifyKey = (privateKey, { address }) => {\r\n\t\ttry {\r\n\t\t\t// for factom addresses\r\n\t\t\treturn getPublicAddress(privateKey).valueOf() === address.valueOf();\r\n\t\t} catch (err) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\taddAddress = (address_o, type) => {\r\n\t\tthis.addAddresses([address_o], type);\r\n\r\n\t\tthis.selectAddress(this.getNextIndex(type), type);\r\n\t};\r\n\r\n\taddAddresses = async (addressList, type) => {\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\tawait this.smartSetState((prevState) => ({\r\n\t\t\taddresses: {\r\n\t\t\t\t...prevState.addresses,\r\n\t\t\t\t[network]: {\r\n\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t[type]: [...prevState.addresses[network][type], ...addressList],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}));\r\n\t\tawait this.setDefaultIndex();\r\n\t\tawait this.updateBalances();\r\n\t};\r\n\r\n\tgetNextIndex = (type) => {\r\n\t\tlet index = 0;\r\n\t\tif (type === 'fct') {\r\n\t\t\tindex = this.getFactoidAddresses().length - 1;\r\n\t\t} else if (type === 'ec') {\r\n\t\t\tindex = this.getEntryCreditAddresses().length - 1;\r\n\t\t}\r\n\t\treturn index;\r\n\t};\r\n\r\n\tselectAddress = (index, type) => {\r\n\t\treturn this.smartSetState({\r\n\t\t\tactiveAddressIndex_o: { index, type },\r\n\t\t});\r\n\t};\r\n\r\n\tgetActiveAddress = () => {\r\n\t\tif (this.state.activeAddressIndex_o !== null) {\r\n\t\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t\treturn this.state.addresses[network][\r\n\t\t\t\tthis.state.activeAddressIndex_o.type\r\n\t\t\t][this.state.activeAddressIndex_o.index];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tgetFactoidAddresses = () => {\r\n\t\treturn this.getAddresses('fct');\r\n\t};\r\n\r\n\tgetEntryCreditAddresses = () => {\r\n\t\treturn this.getAddresses('ec');\r\n\t};\r\n\r\n\tgetAddresses = (type) => {\r\n\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\treturn this.state.addresses[network][type];\r\n\t};\r\n\r\n\tupdateWalletBalance = async (wallet) => {\r\n\t\tconst balance = await this.props.factomCliController.factomCli.getBalance(\r\n\t\t\twallet.address\r\n\t\t);\r\n\r\n\t\treturn { ...wallet, balance };\r\n\t};\r\n\r\n\tupdateBalances = async ({ force = false } = {}) => {\r\n\t\tif (this.state.isStateHydrated || force) {\r\n\t\t\tconst { network } = this.props.networkController.networkProps;\r\n\r\n\t\t\tconst [factoidAddresses, ecAddresses] = await Promise.all([\r\n\t\t\t\tPromise.all(\r\n\t\t\t\t\tthis.state.addresses[network].fct.map(this.updateWalletBalance)\r\n\t\t\t\t),\r\n\t\t\t\tPromise.all(\r\n\t\t\t\t\tthis.state.addresses[network].ec.map(this.updateWalletBalance)\r\n\t\t\t\t),\r\n\t\t\t]);\r\n\r\n\t\t\treturn this.smartSetState((prevState) => ({\r\n\t\t\t\taddresses: {\r\n\t\t\t\t\t...prevState.addresses,\r\n\t\t\t\t\t[network]: {\r\n\t\t\t\t\t\t...prevState.addresses[network],\r\n\t\t\t\t\t\tec: ecAddresses,\r\n\t\t\t\t\t\tfct: factoidAddresses,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tgetEntryCreditRate = async () => {\r\n\t\treturn await this.props.factomCliController.factomCli.getEntryCreditRate();\r\n\t};\r\n\r\n\tgetFactoshiFee = async () => {\r\n\t\tconst ecRate = await this.getEntryCreditRate();\r\n\r\n\t\tconst exampleAddress =\r\n\t\t\t'FA3E6enA33y9f5K9q9nrWfcDNrVR4zAp4xpniizNjQbV4RAmPjat';\r\n\r\n\t\tconst fee = Transaction.builder()\r\n\t\t\t.input(exampleAddress, Number.MAX_SAFE_INTEGER)\r\n\t\t\t.output(exampleAddress, Number.MAX_SAFE_INTEGER)\r\n\t\t\t.build()\r\n\t\t\t.computeRequiredFees(ecRate, { rcdType: 1 });\r\n\r\n\t\treturn fee;\r\n\t};\r\n\r\n\tgetFactoidFee = async () => {\r\n\t\tconst factoshiFee = await this.getFactoshiFee();\r\n\r\n\t\t//fix floating point decimal\r\n\t\treturn factoshiFee * FACTOSHI_MULTIPLIER;\r\n\t};\r\n\r\n\tnewStandardAddress = (address, nickname) => ({\r\n\t\timportType: 'standard',\r\n\t\taddress,\r\n\t\tnickname,\r\n\t\tbalance: null,\r\n\t\ttransactions: [],\r\n\t\tsaveLocally: false,\r\n\t});\r\n\r\n\tnewSeedAddress = (address, nickname, index) => ({\r\n\t\timportType: 'seed',\r\n\t\taddress,\r\n\t\tnickname,\r\n\t\tbalance: null,\r\n\t\ttransactions: [],\r\n\t\tindex,\r\n\t\tsaveLocally: false,\r\n\t});\r\n\r\n\tnewLedgerAddress = (address, nickname, index) => ({\r\n\t\timportType: 'ledger',\r\n\t\taddress,\r\n\t\tnickname,\r\n\t\tbalance: null,\r\n\t\ttransactions: [],\r\n\t\tindex,\r\n\t\tsaveLocally: false,\r\n\t});\r\n\r\n\trender() {\r\n\t\tif (this.state.isStateHydrated) {\r\n\t\t\treturn (\r\n\t\t\t\t<WalletContext.Provider value={this.state}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</WalletContext.Provider>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst enhancer = _flowRight(withNetwork, withFactomCli);\r\n\r\nexport default enhancer(WalletController);\r\n","import React from 'react';\r\n\r\nconst SeedContext = React.createContext();\r\n\r\nconst withSeed = (BaseComponent) => (props) => (\r\n\t<SeedContext.Consumer>\r\n\t\t{(seedController) => (\r\n\t\t\t<BaseComponent {...props} seedController={seedController} />\r\n\t\t)}\r\n\t</SeedContext.Consumer>\r\n);\r\n\r\nexport { SeedContext, withSeed };\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { SeedContext } from './SeedContext';\r\nimport { withFactomCli } from './FactomCliContext';\r\nimport { withNetwork } from './NetworkContext';\r\nimport { withWalletContext } from './WalletContext';\r\nimport {\r\n\tkeyToPrivateFctAddress,\r\n\tkeyToPrivateEcAddress,\r\n\tgetPublicAddress,\r\n} from 'factom/dist/factom';\r\nimport factombip44 from 'factombip44/dist/factombip44';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst keyToFctAddress = (key) => getPublicAddress(keyToPrivateFctAddress(key));\r\nconst keyToECAddress = (key) => getPublicAddress(keyToPrivateEcAddress(key));\r\n\r\nclass SeedController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tgetSeedAddresses: this.getSeedAddresses,\r\n\t\t\tsignWithSeed: this.signWithSeed,\r\n\t\t\tverifySeed: this.verifySeed,\r\n\t\t\tgetRandomMnemonic: this.getRandomMnemonic,\r\n\t\t\tgetPrivateKey: this.getPrivateKey,\r\n\t\t};\r\n\t}\r\n\r\n\tgetSeedAddresses = async (mnemonic, startIndex, amount, type) => {\r\n\t\tlet result = [];\r\n\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\r\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\r\n\r\n\t\tfor (let index = startIndex; index < startIndex + amount; index++) {\r\n\t\t\tlet key = null;\r\n\t\t\tlet address = null;\r\n\r\n\t\t\tif (type === 'fct') {\r\n\t\t\t\tkey = wallet.generateFactoidPrivateKey(bip32Account, 0, index);\r\n\t\t\t\taddress = keyToFctAddress(key);\r\n\t\t\t} else if (type === 'ec') {\r\n\t\t\t\tkey = wallet.generateEntryCreditPrivateKey(bip32Account, 0, index);\r\n\t\t\t\taddress = keyToECAddress(key);\r\n\t\t\t}\r\n\r\n\t\t\tresult.push({ address, index });\r\n\t\t}\r\n\r\n\t\tconst addressList = await Promise.all(\r\n\t\t\tresult.map(this.props.walletController.updateWalletBalance)\r\n\t\t);\r\n\r\n\t\treturn addressList;\r\n\t};\r\n\r\n\tsignWithSeed = async ({ mnemonic, index, toAddr, amount, type }) => {\r\n\t\tlet signedTX = {};\r\n\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\r\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\r\n\r\n\t\tconst privateKey = keyToPrivateFctAddress(\r\n\t\t\twallet.generateFactoidPrivateKey(bip32Account, 0, index)\r\n\t\t);\r\n\r\n\t\tif (type === 'sendFCT') {\r\n\t\t\tsignedTX = await this.props.factomCliController.factomCli.createFactoidTransaction(\r\n\t\t\t\tprivateKey,\r\n\t\t\t\ttoAddr,\r\n\t\t\t\tamount\r\n\t\t\t);\r\n\t\t} else if (type === 'convertFCT') {\r\n\t\t\tsignedTX = await this.props.factomCliController.factomCli.createEntryCreditPurchaseTransaction(\r\n\t\t\t\tprivateKey,\r\n\t\t\t\ttoAddr,\r\n\t\t\t\tamount\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn signedTX;\r\n\t};\r\n\r\n\tverifySeed = (mnemonic, { address, index }) => {\r\n\t\ttry {\r\n\t\t\t// for factom addresses\r\n\t\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\r\n\t\t\tconst bip32Account = this.props.networkController.networkProps\r\n\t\t\t\t.bip32Account;\r\n\r\n\t\t\tconst derivedAddress = keyToFctAddress(\r\n\t\t\t\twallet.generateFactoidPrivateKey(bip32Account, 0, index)\r\n\t\t\t);\r\n\r\n\t\t\treturn derivedAddress.valueOf() === address.valueOf(); // memoize\r\n\t\t} catch (err) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\tgetRandomMnemonic() {\r\n\t\treturn factombip44.randomMnemonic();\r\n\t}\r\n\r\n\tgetPrivateKey = (mnemonic, index) => {\r\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\r\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\r\n\t\tconst key = wallet.generateFactoidPrivateKey(bip32Account, 0, index);\r\n\t\tconst privateKey = keyToPrivateFctAddress(key);\r\n\r\n\t\treturn privateKey;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SeedContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</SeedContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst enhancer = _flowRight(withWalletContext, withNetwork, withFactomCli);\r\n\r\nexport default enhancer(SeedController);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FactomCliContext } from './FactomCliContext';\r\nimport { FactomCli } from 'factom/dist/factom';\r\nimport { withNetwork } from './NetworkContext';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport defaultsDeep from 'lodash/fp/defaultsDeep';\r\nimport _flow from 'lodash/flow';\r\nimport _noop from 'lodash/noop';\r\n\r\nclass FactomCliController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tfactomCli: this.newFactomCli(),\r\n\t\t\tconnectToServer: this.connectToServer,\r\n\t\t};\r\n\t}\r\n\r\n\tdefaultConnectionParams = {\r\n\t\thost: 'api.myfactomwallet.com',\r\n\t\tport: this.props.networkController.networkProps.apiPort,\r\n\t\tpath: '/v2',\r\n\t\tdebugPath: '/debug',\r\n\t\tprotocol: 'https',\r\n\t\trejectUnauthorized: true,\r\n\t\tretry: {\r\n\t\t\tretries: 4,\r\n\t\t\tfactor: 2,\r\n\t\t\tminTimeout: 500,\r\n\t\t\tmaxTimeout: 2000,\r\n\t\t},\r\n\t};\r\n\r\n\tnewFactomCli = (connectionParams = {}) =>\r\n\t\tnew FactomCli(defaultsDeep(this.defaultConnectionParams, connectionParams));\r\n\r\n\tconnectToServer = async (\r\n\t\tconnectionParams = {\r\n\t\t\tport: this.props.networkController.networkProps.apiPort,\r\n\t\t}\r\n\t) => {\r\n\t\tawait this.smartSetState({\r\n\t\t\tfactomCli: this.newFactomCli(connectionParams),\r\n\t\t});\r\n\t};\r\n\r\n\tsmartSetState = (newState, afterSetState = _noop) =>\r\n\t\tnew Promise((resolve) =>\r\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\r\n\t\t);\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<FactomCliContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</FactomCliContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nFactomCliController.propTypes = {\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nconst enhancer = _flowRight(withNetwork);\r\n\r\nexport default enhancer(FactomCliController);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Warning from '@material-ui/icons/Warning';\r\n\r\nclass ConfirmationDialogRaw extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.value,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.value !== this.props.value) {\r\n\t\t\tthis.setState({ value: nextProps.value });\r\n\t\t}\r\n\t}\r\n\r\n\thandleAgree = () => {\r\n\t\tthis.props.onClose(this.state.value);\r\n\t};\r\n\r\n\thandleChange = (event, value) => {\r\n\t\tthis.setState({ value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes, value, ...other } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Dialog\r\n\t\t\t\tdisableBackdropClick\r\n\t\t\t\tdisableEscapeKeyDown\r\n\t\t\t\taria-labelledby=\"confirmation-dialog-title\"\r\n\t\t\t\t{...other}\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle align=\"center\" style={{ backgroundColor: '#f50057' }}>\r\n\t\t\t\t\t<Warning fontSize=\"large\" />\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent className={classes.lessPad}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\tTestnet Warning\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\tBy using MyFactomWallet.com and/or by clicking 'accept' at the\r\n\t\t\t\t\t\tbottom, you agree to the following notices:\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\tNotices\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tNever send funds from a mainnet address to a testnet address and\r\n\t\t\t\t\t\t\t\tvice versa. Sending Factoids to the testnet will likely result\r\n\t\t\t\t\t\t\t\tin a loss of factoids. You acknowledge that testnet Testoids and\r\n\t\t\t\t\t\t\t\tTest Credits have no value. All other MyFactomWallet.com notices\r\n\t\t\t\t\t\t\t\tand tips apply.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={this.handleAgree} color=\"primary\">\r\n\t\t\t\t\t\tAccept\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n\tonClose: PropTypes.func,\r\n\tvalue: PropTypes.string,\r\n};\r\n\r\nclass ConfirmationDialog extends React.Component {\r\n\tstate = {\r\n\t\topen: true,\r\n\t\tvalue: 'Done',\r\n\t};\r\n\r\n\thandleClose = (value) => {\r\n\t\tthis.setState({ value, open: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ConfirmationDialogRaw\r\n\t\t\t\tclasses={this.props.classes}\r\n\t\t\t\topen={this.state.open}\r\n\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\tvalue={this.state.value}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\nconst styles = (theme) => ({\r\n\tlessPad: { paddingBottom: '0px' },\r\n});\r\n\r\nexport default withStyles(styles)(ConfirmationDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NetworkContext } from './NetworkContext';\r\nimport TestnetDisclaimer from '../TestnetDisclaimer';\r\nimport _flow from 'lodash/flow';\r\nimport _noop from 'lodash/noop';\r\n\r\nclass NetworkController extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tnetworkProps: this.networkProps['mainnet'],\r\n\t\t\tchangeNetwork: this.changeNetwork,\r\n\t\t};\r\n\t}\r\n\r\n\tnetworkProps = {\r\n\t\tmainnet: {\r\n\t\t\tnetwork: 'mainnet',\r\n\t\t\tbip32Account: 0,\r\n\t\t\tfactoidAbbreviation: 'FCT',\r\n\t\t\tfactoidAbbreviationFull: 'Factoid',\r\n\t\t\tecAbbreviation: 'EC',\r\n\t\t\tecAbbreviationFull: 'Entry Credit',\r\n\t\t\tapiPort: 8188,\r\n\t\t\texplorerURL: 'https://explorer.factoid.org',\r\n\t\t},\r\n\t\ttestnet: {\r\n\t\t\tnetwork: 'testnet',\r\n\t\t\tbip32Account: 2147483647,\r\n\t\t\tfactoidAbbreviation: 'TTS',\r\n\t\t\tfactoidAbbreviationFull: 'Testoid',\r\n\t\t\tecAbbreviation: 'TC',\r\n\t\t\tecAbbreviationFull: 'Test Credit',\r\n\t\t\tapiPort: 8288,\r\n\t\t\texplorerURL: 'https://testnet.factoid.org',\r\n\t\t},\r\n\t};\r\n\r\n\tchangeNetwork = async (network) => {\r\n\t\tawait this.smartSetState({ networkProps: this.networkProps[network] });\r\n\t};\r\n\r\n\tsmartSetState = (newState, afterSetState = _noop) =>\r\n\t\tnew Promise((resolve) =>\r\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\r\n\t\t);\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<NetworkContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t{this.state.networkProps.network === 'testnet' && <TestnetDisclaimer />}\r\n\t\t\t</NetworkContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nNetworkController.propTypes = {\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default NetworkController;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Warning from '@material-ui/icons/Warning';\r\n\r\nclass ConfirmationDialogRaw extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.value,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.value !== this.props.value) {\r\n\t\t\tthis.setState({ value: nextProps.value });\r\n\t\t}\r\n\t}\r\n\r\n\thandleAgree = () => {\r\n\t\tthis.props.onClose(this.state.value);\r\n\t};\r\n\r\n\thandleChange = (event, value) => {\r\n\t\tthis.setState({ value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes, value, ...other } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Dialog\r\n\t\t\t\tdisableBackdropClick\r\n\t\t\t\tdisableEscapeKeyDown\r\n\t\t\t\taria-labelledby=\"confirmation-dialog-title\"\r\n\t\t\t\t{...other}\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle align=\"center\" style={{ backgroundColor: '#f50057' }}>\r\n\t\t\t\t\t<Warning fontSize=\"large\" />\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\tImportant\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\tMyFactomWallet.com is a client-side interface wallet. We provide the\r\n\t\t\t\t\t\tuser with access to the Factom blockchain, but we do not store,\r\n\t\t\t\t\t\tcontrol or have access to ANY user wallet or blockchain information\r\n\t\t\t\t\t\tincluding keys or transaction data. Therefore,&nbsp;\r\n\t\t\t\t\t\t<b>we cannot reverse transactions or recover funds.</b>\r\n\t\t\t\t\t\t&nbsp; MyFactomWallet.com is not a bank or a custodian. Your assets\r\n\t\t\t\t\t\tand your security are entirely your own responsibility. By using\r\n\t\t\t\t\t\tMyFactomWallet.com and/or by clicking 'accept' at the bottom, you\r\n\t\t\t\t\t\tagree to the following notices:\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\tNotices\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tThis project is under active development; there is always the\r\n\t\t\t\t\t\t\t\tpossibility something unexpected happens that causes your funds\r\n\t\t\t\t\t\t\t\tto be lost, including but not limited to third party domain\r\n\t\t\t\t\t\t\t\tattacks. <b>We are not responsible for any loss.</b>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tNever send funds from a mainnet address to a testnet address and\r\n\t\t\t\t\t\t\t\tvice versa. Sending Factoids to the testnet will likely result\r\n\t\t\t\t\t\t\t\tin a loss of factoids. You acknowledge that testnet Testoids and\r\n\t\t\t\t\t\t\t\tTest Credits have no value.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWhen you create new Factoid or Entry Credit addresses on\r\n\t\t\t\t\t\t\t\tMyFactomWallet.com, a random 12-word cryptographic seed phrase\r\n\t\t\t\t\t\t\t\tis generated in the browser, and is used to generate new\r\n\t\t\t\t\t\t\t\taddresses and sign transactions.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tThe handling of your private keys or seed phrase is solely your\r\n\t\t\t\t\t\t\t\tresponsibility. It happens entirely on your computer, inside\r\n\t\t\t\t\t\t\t\tyour browser.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWe never transmit, receive or store your private keys or seeds.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWe do not charge a transaction fee (blockchain fees still\r\n\t\t\t\t\t\t\t\tapply).\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWe are not a custodian and have no information about or control\r\n\t\t\t\t\t\t\t\tover your Factoids or Entry Credits.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tYou are simply using our interface to interact directly with the\r\n\t\t\t\t\t\t\t\tblockchain.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tIf you provide your public key (address) to someone, they can\r\n\t\t\t\t\t\t\t\ttransfer Factoids to you.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tIf you provide your private key or seed phrase to a person or\r\n\t\t\t\t\t\t\t\tentity, then that person or entity has full control of your\r\n\t\t\t\t\t\t\t\taccount, and may withdraw your funds.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tWe are not a custodian. Your funds are stored on the blockchain\r\n\t\t\t\t\t\t\t\tand protected by your private key and/or seed phrase. As\r\n\t\t\t\t\t\t\t\texplained above, your private key is solely your responsibility\r\n\t\t\t\t\t\t\t\tand MyFactomWallet.com does not store or have access to any of\r\n\t\t\t\t\t\t\t\tyour keys.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tOffered under MIT License Copyright © 2015-2018: THE SOFTWARE IS\r\n\t\t\t\t\t\t\t\tPROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\t\t\t\t\t\t\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n\t\t\t\t\t\t\t\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n\t\t\t\t\t\t\t\tNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n\t\t\t\t\t\t\t\tHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n\t\t\t\t\t\t\t\tWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n\t\t\t\t\t\t\t\tFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n\t\t\t\t\t\t\t\tOTHER DEALINGS IN THE SOFTWARE. The above copyright notice and\r\n\t\t\t\t\t\t\t\tthis permission notice shall be included in all copies or\r\n\t\t\t\t\t\t\t\tsubstantial portions of the Software.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\t\t\t\tImportant Tips\r\n\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tNever hand-type your public or private address.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tAlways send a small amount of Factoids first to ensure that the\r\n\t\t\t\t\t\t\t\ttransaction is processed correctly and the Factoids end up in\r\n\t\t\t\t\t\t\t\tthe correct address. After verifying this, you may send the full\r\n\t\t\t\t\t\t\t\tamount of Factoids.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tIf you generated a new Factoid or Entry Credit address in\r\n\t\t\t\t\t\t\t\tMyFactomWallet.com; save and back up the associated seed BEFORE\r\n\t\t\t\t\t\t\t\tyou send any funds to it.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tDo not post your private key or seed on any social media,\r\n\t\t\t\t\t\t\t\tchat-platforms, email/sms it, or store it in any cloud storage\r\n\t\t\t\t\t\t\t\tservice (Google Drive, Dropbox etc).\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tUse a hardware wallet for added protection (Ledger Nano S\r\n\t\t\t\t\t\t\t\tsupported at this time).\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tRegularly monitor the security of your computer operating system\r\n\t\t\t\t\t\t\t\tto ensure that it is not compromised by malicious software\r\n\t\t\t\t\t\t\t\twhereby unauthorized third parties may obtain your private key\r\n\t\t\t\t\t\t\t\tor seed.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tEnsure that you are not on a phishing site, but have landed on\r\n\t\t\t\t\t\t\t\tthe correct page (verify that you are on\r\n\t\t\t\t\t\t\t\thttps://www.myfactomwallet.com in the browser, and also check\r\n\t\t\t\t\t\t\t\tthat the “lock” symbol is displayed in the Chrome address bar).\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\tThe user must understand that MyFactomWallet.com CANNOT:\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\tAccess your wallet or send your funds for you\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\tRecover or change your private key or seed\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\tReverse, cancel, or refund any transactions\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Typography>Freeze FCT or Entry Credit addresses</Typography>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={this.handleAgree} color=\"primary\">\r\n\t\t\t\t\t\tAccept\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n\tonClose: PropTypes.func,\r\n\tvalue: PropTypes.string,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nclass ConfirmationDialog extends React.Component {\r\n\tstate = {\r\n\t\topen: true,\r\n\t\tvalue: 'Done',\r\n\t};\r\n\r\n\thandleClose = (value) => {\r\n\t\tthis.setState({ value, open: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ConfirmationDialogRaw\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ConfirmationDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { withNetwork } from './context/NetworkContext';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TestnetWarningBar(props) {\r\n\tconst {\r\n\t\tclasses,\r\n\t\tnetworkController: { networkProps },\r\n\t} = props;\r\n\r\n\tif (networkProps.network === 'testnet') {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<div className={classes.toolbarSpace} />\r\n\t\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\r\n\t\t\t\t\t\t<Typography variant=\"h3\">\r\n\t\t\t\t\t\t\tYou are connected to the Factom <b>Testnet</b>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nTestnetWarningBar.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tappBar: {\r\n\t\ttop: 'auto',\r\n\t\tbottom: 0,\r\n\t\tminHeight: 78,\r\n\t\tpaddingTop: 9,\r\n\t\tbackgroundColor: '#ffa000',\r\n\t},\r\n\ttoolbar: {\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t},\r\n\twarningIcon: {\r\n\t\tfontSize: 52,\r\n\t},\r\n\ttoolbarSpace: {\r\n\t\theight: 85,\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\r\nexport default enhancer(TestnetWarningBar);\r\n","import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst getImportTypes = (networkProps) => {\r\n\treturn [\r\n\t\t{\r\n\t\t\tvalue: 'fct',\r\n\t\t\tlabel: 'Import ' + networkProps.factoidAbbreviationFull + ' Address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'ec',\r\n\t\t\tlabel: 'Import ' + networkProps.ecAbbreviationFull + ' Address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'new',\r\n\t\t\tlabel: 'Generate new 12-word seed',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'importSeed',\r\n\t\t\tlabel: 'Import addresses from mnemonic seed phrase',\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'ledger',\r\n\t\t\tlabel: 'Import addresses from Ledger Nano S',\r\n\t\t},\r\n\t];\r\n};\r\n\r\n/**\r\n * Constants\r\n */\r\nconst importTypePath = 'importType';\r\n\r\nclass ImportTypeForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\timportType,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ [importTypePath]: importType }}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[importTypePath]: Yup.string().required('Required'),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ values, handleChange, isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t_get(errors, importTypePath) && _get(touched, importTypePath)\r\n\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcomponent=\"fieldset\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FormLabel component=\"legend\">\r\n\t\t\t\t\t\t\t\tHow would you like to add a new address?\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={importTypePath}\r\n\t\t\t\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>&nbsp;*</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormLabel>\r\n\r\n\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\taria-label=\"Import Type\"\r\n\t\t\t\t\t\t\t\tname={importTypePath}\r\n\t\t\t\t\t\t\t\tvalue={_get(values, importTypePath)}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tthis.props.updateImportType(e.target.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{getImportTypes(networkProps).map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tvalue={option.value}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\tlabel={option.label}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={option.disabled}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button disabled={true}>Back</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nImportTypeForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\r\nexport default enhancer(ImportTypeForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { isValidFctPublicAddress } from 'factom/dist/factom';\r\nimport get from 'lodash/get';\r\nimport findIndex from 'lodash/findIndex';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst FCT_ADDRESS_LENGTH = 52;\r\nconst NICKNAME_MAX_LENGTH = 25;\r\nconst fctAddrPath = 'factoidAddress';\r\nconst nicknamePath = 'nickname';\r\n\r\nclass ImportFctForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: { getFactoidAddresses, newStandardAddress, addAddress },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst factoidAddresses = getFactoidAddresses();\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ factoidAddress: '', nickname: '' }}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tconst fctAddress_o = newStandardAddress(\r\n\t\t\t\t\t\tget(values, fctAddrPath),\r\n\t\t\t\t\t\tget(values, nicknamePath).trim()\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\taddAddress(fctAddress_o, 'fct');\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[fctAddrPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(fctAddrPath, 'Invalid Address', isValidFctPublicAddress)\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tfctAddrPath,\r\n\t\t\t\t\t\t\t'Enter unique address',\r\n\t\t\t\t\t\t\t(value) => findIndex(factoidAddresses, ['address', value]) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[nicknamePath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tnicknamePath,\r\n\t\t\t\t\t\t\t'Enter unique nickname',\r\n\t\t\t\t\t\t\t(value) =>\r\n\t\t\t\t\t\t\t\tfindIndex(factoidAddresses, [nicknamePath, value]) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\terrors.factoidAddress && touched.factoidAddress ? true : false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tname={fctAddrPath}\r\n\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t'Public ' + networkProps.factoidAbbreviationFull + ' Address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmaxLength={FCT_ADDRESS_LENGTH}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={fctAddrPath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\tlabel=\"Nickname\"\r\n\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nImportFctForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(ImportFctForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { isValidEcPublicAddress } from 'factom/dist/factom';\r\nimport _get from 'lodash/get';\r\nimport findIndex from 'lodash/findIndex';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst EC_ADDRESS_LENGTH = 52;\r\nconst NICKNAME_MAX_LENGTH = 25;\r\nconst ecAddrNamePath = 'entryCreditAddress';\r\nconst nicknamePath = 'nickname';\r\n\r\nclass ImportEcForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: {\r\n\t\t\t\tgetEntryCreditAddresses,\r\n\t\t\t\tnewStandardAddress,\r\n\t\t\t\taddAddress,\r\n\t\t\t},\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst ecAddresses = getEntryCreditAddresses();\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ entryCreditAddress: '', nickname: '' }}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tconst ecAddress_o = newStandardAddress(\r\n\t\t\t\t\t\t_get(values, ecAddrNamePath),\r\n\t\t\t\t\t\t_get(values, nicknamePath).trim()\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\taddAddress(ecAddress_o, 'ec');\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[ecAddrNamePath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(ecAddrNamePath, 'Invalid Address', isValidEcPublicAddress)\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tecAddrNamePath,\r\n\t\t\t\t\t\t\t'Enter unique address',\r\n\t\t\t\t\t\t\t(value) => findIndex(ecAddresses, ['address', value]) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[nicknamePath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tnicknamePath,\r\n\t\t\t\t\t\t\t'Enter unique nickname',\r\n\t\t\t\t\t\t\t(value) => findIndex(ecAddresses, [nicknamePath, value]) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\terrors.entryCreditAddress && touched.entryCreditAddress\r\n\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tname={ecAddrNamePath}\r\n\t\t\t\t\t\t\tlabel={'Public ' + networkProps.ecAbbreviationFull + ' Address'}\r\n\t\t\t\t\t\t\thelperText=\"test\"\r\n\t\t\t\t\t\t\tmaxLength={EC_ADDRESS_LENGTH}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={ecAddrNamePath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\tlabel=\"Nickname\"\r\n\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nImportEcForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(ImportEcForm);\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport _get from 'lodash/get';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst mnemonicPath = 'mnemonic';\r\n\r\nclass NewSeedForm extends React.Component {\r\n\tstate = {\r\n\t\tstep: 1,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.setMnemonic(this.props.seedController.getRandomMnemonic());\r\n\t}\r\n\r\n\tnextStep = () => {\r\n\t\tthis.setState({ step: 2 });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[mnemonicPath]: '',\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[mnemonicPath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.oneOf([this.props.mnemonic], 'Seed does not match'),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tstyle={{ width: '500px' }}\r\n\t\t\t\t\t\tautoComplete=\"nope\"\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.step === 1 && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.warningText}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tWrite down your seed carefully on a piece of paper. This seed\r\n\t\t\t\t\t\t\t\t\tprovides access to all the derived addresses. If you lose this\r\n\t\t\t\t\t\t\t\t\tseed, you will lose access to your addresses forever!\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 500 }}>\r\n\t\t\t\t\t\t\t\t\tSeed Phrase:\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography>{this.props.mnemonic}</Typography>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{this.state.step === 2 && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t_get(errors, mnemonicPath) && _get(touched, mnemonicPath)\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tname={mnemonicPath}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Verify Seed Phrase\"\r\n\t\t\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={mnemonicPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.props.setMnemonic(null);\r\n\t\t\t\t\t\t\t\t\tthis.props.handleBack();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t{this.state.step === 1 && (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={this.nextStep}\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tVerify Seed\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{this.state.step === 2 && (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t\tautoFocus={props.autoFocus}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nNewSeedForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\twarningText: { color: 'red', fontSize: '15px' },\r\n\terrorText: { color: 'red' },\r\n});\r\n\r\nconst enhancer = _flowRight(withSeed, withStyles(styles));\r\n\r\nexport default enhancer(NewSeedForm);\r\n","import React from 'react';\r\nimport { withNetwork } from '../../context/NetworkContext';\r\nimport _flowRight from 'lodash/flowRight';\r\n/**\r\n * Constants\r\n */\r\nconst FACTOSHI_MULTIPLIER = 0.00000001;\r\n\r\nconst FormatBalance = (props) => {\r\n\tconst {\r\n\t\tbalance,\r\n\t\ttype,\r\n\t\tnetworkController: { networkProps },\r\n\t} = props;\r\n\r\n\tif (type === 'fct') {\r\n\t\treturn <FormatFCTBalance balance={balance} networkProps={networkProps} />;\r\n\t} else if (type === 'ec') {\r\n\t\treturn <FormatECBalance balance={balance} networkProps={networkProps} />;\r\n\t}\r\n};\r\n\r\nconst FormatFCTBalance = (props) => {\r\n\tlet result = '';\r\n\tconst factoshiBalance = props.balance;\r\n\r\n\tconst factoidBalance = parseInt(factoshiBalance, 10) * FACTOSHI_MULTIPLIER;\r\n\r\n\tresult =\r\n\t\tfactoidBalance.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tprops.networkProps.factoidAbbreviation;\r\n\r\n\treturn result;\r\n};\r\n\r\nconst FormatECBalance = (props) => {\r\n\tlet result = '';\r\n\tconst entryCreditBalance = props.balance;\r\n\r\n\tresult =\r\n\t\tparseInt(entryCreditBalance, 10) + ' ' + props.networkProps.ecAbbreviation;\r\n\r\n\treturn result;\r\n};\r\n\r\nconst enhancer = _flowRight(withNetwork);\r\nexport default enhancer(FormatBalance);\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Field, ErrorMessage, FieldArray } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _get from 'lodash/get';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormatBalance from '../walletManager/shared/BalanceFormatter.js';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst addressesPath = 'addresses';\r\nconst NICKNAME_MAX_LENGTH = 25;\r\n\r\nclass GenerateAddressTable extends React.Component {\r\n\tstate = { loading: false };\r\n\r\n\taddGeneratedAddress = (nickname, address_o, arrayHelpers) => {\r\n\t\tif (nickname) {\r\n\t\t\tconst addr_o = this.props.newAddress(\r\n\t\t\t\taddress_o.address,\r\n\t\t\t\tnickname.trim(),\r\n\t\t\t\taddress_o.index\r\n\t\t\t);\r\n\t\t\tarrayHelpers.replace(address_o.index, addr_o);\r\n\t\t} else {\r\n\t\t\tarrayHelpers.replace(address_o.index, null);\r\n\t\t}\r\n\t};\r\n\r\n\tvalidateNickname = (value) => {\r\n\t\tconst { userAddressList } = this.props;\r\n\t\tconst userAddressNicknames = userAddressList.map(\r\n\t\t\t(addr_o) => addr_o.nickname\r\n\t\t);\r\n\r\n\t\tlet error;\r\n\t\tif (!value) {\r\n\t\t\terror = 'Required';\r\n\t\t} else if (userAddressNicknames.indexOf(value.trim()) !== -1) {\r\n\t\t\terror = 'Enter unique nickname';\r\n\t\t}\r\n\t\treturn error;\r\n\t};\r\n\r\n\tgetNext = async () => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tawait this.props.getNextFive();\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tgeneratedAddressList,\r\n\t\t\tuserAddressList, // existing addresses\r\n\t\t\tvalues,\r\n\t\t\terrors,\r\n\t\t\ttouched,\r\n\t\t\tsetFieldValue,\r\n\t\t\thandleChange,\r\n\t\t} = this.props;\r\n\r\n\t\tconst userAddresses = userAddressList.map((addr_o) => addr_o.address);\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Typography variant=\"h6\">{this.props.title}</Typography>\r\n\t\t\t\t<ErrorMessage\r\n\t\t\t\t\tname={addressesPath}\r\n\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t<span className={classes.errorText}>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{msg}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Paper className={classes.root}>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<CustomCell />\r\n\t\t\t\t\t\t\t\t<CustomCell>Address</CustomCell>\r\n\t\t\t\t\t\t\t\t<CustomCell>Balance</CustomCell>\r\n\t\t\t\t\t\t\t\t<CustomCell>Nickname</CustomCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{!_isEmpty(generatedAddressList) &&\r\n\t\t\t\t\t\t\t\tgeneratedAddressList.map((address_o) => {\r\n\t\t\t\t\t\t\t\t\tconst checkboxPath = 'checkbox_' + address_o.index;\r\n\t\t\t\t\t\t\t\t\tconst nicknamePath = 'nickname_' + address_o.index;\r\n\t\t\t\t\t\t\t\t\tconst duplicate =\r\n\t\t\t\t\t\t\t\t\t\tuserAddresses.indexOf(address_o.address) === -1\r\n\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t: true;\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow key={address_o.index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FieldArray\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={addressesPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{duplicate ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Address already added\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={address_o.index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.replace(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress_o.index,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(nicknamePath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={address_o.index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>{address_o.address}</CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormatBalance\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance={address_o.balance}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{duplicate ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserAddressList.find((addr_o) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn addr_o.address === address_o.address;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}).nickname\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, checkboxPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateNickname}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{({ field }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.addGeneratedAddress(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress_o,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors[nicknamePath] &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched[nicknamePath]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: NICKNAME_MAX_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorTextSmall}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{msg}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t<TableFooter />\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={this.getNext}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tdisabled={this.state.loading}\r\n\t\t\t\t>\r\n\t\t\t\t\tLoad Five More\r\n\t\t\t\t\t{(this.state.loading || _isEmpty(generatedAddressList)) && (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<CircularProgress thickness={7} />\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Button>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nconst CustomCell = withStyles((theme) => ({\r\n\thead: {\r\n\t\tcolor: 'black',\r\n\t\tfontSize: '13px',\r\n\t\tpaddingLeft: 5,\r\n\t\tpaddingRight: 5,\r\n\t},\r\n\tbody: {\r\n\t\tpaddingLeft: 5,\r\n\t\tpaddingRight: 5,\r\n\t},\r\n}))(TableCell);\r\n\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\twidth: '800px',\r\n\t\tmarginTop: 12,\r\n\t\toverflowX: 'auto',\r\n\t\tmaxHeight: 405,\r\n\t},\r\n\thead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\terrorText: {\r\n\t\tcolor: 'red',\r\n\t\tfontSize: '20px',\r\n\t},\r\n\terrorTextSmall: {\r\n\t\tcolor: 'red',\r\n\t\tfontSize: '12px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(GenerateAddressTable);\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withLedger } from '../context/LedgerContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport GenerateAddressTable from './GenerateAddressTable';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst addressesPath = 'addresses';\r\n\r\nconst getTitle = (networkProps) => {\r\n\treturn {\r\n\t\tfct: 'Ledger Nano S ' + networkProps.factoidAbbreviationFull + ' Addresses',\r\n\t\tec: 'Ledger Nano S ' + networkProps.ecAbbreviationFull + ' Addresses',\r\n\t};\r\n};\r\n\r\nclass LedgerForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tgeneratedAddressList: [],\r\n\t\t\tledgerConnected: false,\r\n\t\t\tledgerStatus: null,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getNextFive(0);\r\n\t}\r\n\r\n\tretryConnection = () => {\r\n\t\tthis.setState({\r\n\t\t\tledgerStatus: null,\r\n\t\t});\r\n\t\tthis.getNextFive(0);\r\n\t};\r\n\r\n\tgetNextFive = async (startIndex) => {\r\n\t\ttry {\r\n\t\t\tconst generatedAddressList = await this.props.ledgerController.getLedgerAddresses(\r\n\t\t\t\tthis.state.generatedAddressList.length,\r\n\t\t\t\t5,\r\n\t\t\t\tthis.props.type\r\n\t\t\t);\r\n\r\n\t\t\tthis.setState((prevState) => ({\r\n\t\t\t\tgeneratedAddressList: [\r\n\t\t\t\t\t...prevState.generatedAddressList,\r\n\t\t\t\t\t...generatedAddressList,\r\n\t\t\t\t],\r\n\t\t\t\tledgerConnected: true,\r\n\t\t\t}));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({\r\n\t\t\t\tledgerStatus: 'Ledger Nano S not found. Troubleshooting tips:',\r\n\t\t\t\tledgerConnected: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\thasAddressSelected = (formValues) =>\r\n\t\tObject.keys(formValues)\r\n\t\t\t.filter((key) => key.startsWith('checkbox'))\r\n\t\t\t.some((key) => formValues[key]);\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\ttype,\r\n\t\t\twalletController: { getAddresses, addAddresses, newLedgerAddress },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tlet userAddressList = getAddresses(type);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\taddresses: [],\r\n\t\t\t\t\tledgerConnected: this.state.ledgerConnected,\r\n\t\t\t\t\tledgerStatus: this.state.ledgerStatus,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tlet validAddresses = [];\r\n\t\t\t\t\tfor (let value of _get(values, addressesPath)) {\r\n\t\t\t\t\t\tif (!_isNil(value)) {\r\n\t\t\t\t\t\t\tvalidAddresses.push(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// add addresses\r\n\t\t\t\t\taddAddresses(validAddresses, this.props.type);\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t/* \t[addressesPath]: Yup.array()\r\n\t\t\t\t\t\t.compact()\r\n\t\t\t\t\t\t.required('* You must add an Address'), */\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t{values.ledgerConnected ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<GenerateAddressTable\r\n\t\t\t\t\t\t\t\t\ttitle={getTitle(networkProps)[type]}\r\n\t\t\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\t\t\tgeneratedAddressList={this.state.generatedAddressList}\r\n\t\t\t\t\t\t\t\t\tuserAddressList={userAddressList}\r\n\t\t\t\t\t\t\t\t\tgetNextFive={this.getNextFive}\r\n\t\t\t\t\t\t\t\t\tnewAddress={newLedgerAddress}\r\n\t\t\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\t\t\terrors={errors}\r\n\t\t\t\t\t\t\t\t\ttouched={touched}\r\n\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t{!_isNil(values.ledgerStatus) ? (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Typography>{values.ledgerStatus}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you using a Ledger Nano S device?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tIs the Factom app launched on your device?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tIs your device running the latest version?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tHave you closed the Ledger Live Manager?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you using&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://www.google.com/chrome/'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tChrome\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>Are you running any adblockers?</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tHave you tried restarting your device?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSupport is available in the #ledger-nano-s channel on\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tour&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDiscord server\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.retryConnection}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tRetry\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Connecting to Ledger Nano S</b>\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t<b>Note:</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tThe Ledger Nano S hardware wallet can be ordered\r\n\t\t\t\t\t\t\t\t\t\t\t\tfrom&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://www.ledger.com/?r=1b0be6fa98ba'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLedger's website\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t(affiliate link).\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTo function properly, the Factom application needs to be\r\n\t\t\t\t\t\t\t\t\t\t\t\tlaunched on the Ledger Nano S. You can install the\r\n\t\t\t\t\t\t\t\t\t\t\t\tapplication from the Ledger Live Manager.\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting || !this.state.ledgerConnected}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{this.hasAddressSelected(values) ? 'Add and Continue' : 'Skip'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nLedgerForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithLedger,\r\n\twithWalletContext,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(LedgerForm);\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport _isNil from 'lodash/isNil';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport GenerateAddressTable from './GenerateAddressTable';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst addressesPath = 'addresses';\r\n\r\nconst getTitle = (networkProps) => {\r\n\treturn {\r\n\t\tfct: networkProps.factoidAbbreviationFull + ' Addresses',\r\n\t\tec: networkProps.ecAbbreviationFull + ' Addresses',\r\n\t};\r\n};\r\n\r\nclass SeedForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tgeneratedAddressList: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getNextFive(0);\r\n\t}\r\n\r\n\tgetNextFive = async () => {\r\n\t\tconst generatedAddressList = await this.props.seedController.getSeedAddresses(\r\n\t\t\tthis.props.mnemonic,\r\n\t\t\tthis.state.generatedAddressList.length,\r\n\t\t\t5,\r\n\t\t\tthis.props.type\r\n\t\t);\r\n\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tgeneratedAddressList: [\r\n\t\t\t\t...prevState.generatedAddressList,\r\n\t\t\t\t...generatedAddressList,\r\n\t\t\t],\r\n\t\t}));\r\n\t};\r\n\r\n\thasAddressSelected = (formValues) =>\r\n\t\tObject.keys(formValues)\r\n\t\t\t.filter((key) => key.startsWith('checkbox'))\r\n\t\t\t.some((key) => formValues[key]);\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\ttype,\r\n\t\t\twalletController: { getAddresses, addAddresses, newSeedAddress },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tlet userAddressList = getAddresses(type);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[addressesPath]: [],\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tlet validAddresses = [];\r\n\t\t\t\t\tfor (let value of _get(values, addressesPath)) {\r\n\t\t\t\t\t\tif (!_isNil(value)) {\r\n\t\t\t\t\t\t\tvalidAddresses.push(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// add addresses\r\n\t\t\t\t\taddAddresses(validAddresses, this.props.type);\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<GenerateAddressTable\r\n\t\t\t\t\t\t\ttitle={getTitle(networkProps)[type]}\r\n\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\tgeneratedAddressList={this.state.generatedAddressList}\r\n\t\t\t\t\t\t\tuserAddressList={userAddressList}\r\n\t\t\t\t\t\t\tgetNextFive={this.getNextFive}\r\n\t\t\t\t\t\t\tnewAddress={newSeedAddress}\r\n\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\terrors={errors}\r\n\t\t\t\t\t\t\ttouched={touched}\r\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{this.props.handleBack && (\r\n\t\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{this.hasAddressSelected(values) ? 'Add and Continue' : 'Skip'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSeedForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n});\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithSeed,\r\n\twithWalletContext,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(SeedForm);\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport _get from 'lodash/get';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport factombip44 from 'factombip44/dist/factombip44';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst mnemonicPath = 'mnemonic';\r\n\r\nclass ImportSeedForm extends React.Component {\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[mnemonicPath]: '',\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tthis.props.setMnemonic(_get(values, mnemonicPath).trim());\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[mnemonicPath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tmnemonicPath,\r\n\t\t\t\t\t\t\t'Invalid Seed Phrase',\r\n\t\t\t\t\t\t\tfactombip44.validMnemonic\r\n\t\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tstyle={{ width: '500px' }}\r\n\t\t\t\t\t\tautoComplete=\"nope\"\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t_get(errors, mnemonicPath) && _get(touched, mnemonicPath)\r\n\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tname={mnemonicPath}\r\n\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\r\n\t\t\t\t\t\t\t\tplaceholder={'Enter Seed Phrase'}\r\n\t\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\tname={mnemonicPath}\r\n\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.props.setMnemonic(null);\r\n\t\t\t\t\t\t\t\t\tthis.props.handleBack();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t\tautoFocus={props.autoFocus}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nImportSeedForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\twarningText: { color: 'red', fontSize: '15px' },\r\n\terrorText: { color: 'red' },\r\n});\r\n\r\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(ImportSeedForm);\r\n","import React from 'react';\r\nimport ImportTypeForm from './ImportTypeForm';\r\nimport ImportFctForm from './ImportFctForm';\r\nimport ImportEcForm from './ImportEcForm';\r\nimport NewSeedForm from './NewSeedForm';\r\nimport LedgerForm from './LedgerForm';\r\nimport SeedForm from './SeedForm';\r\nimport ImportSeedForm from './ImportSeedForm';\r\n\r\nclass AddWalletStepContent extends React.Component {\r\n\tstate = { mnemonic: null };\r\n\r\n\tsetMnemonic = (mnemonic) => {\r\n\t\tthis.setState({ mnemonic });\r\n\t};\r\n\r\n\trender() {\r\n\t\tswitch (this.props.activeStep) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ImportTypeForm\r\n\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\timportType={this.props.importType}\r\n\t\t\t\t\t\tupdateImportType={this.props.updateImportType}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 1:\r\n\t\t\t\tif (this.props.importType === 'fct') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ImportFctForm\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.props.importType === 'ec') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ImportEcForm\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.props.importType === 'new') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<NewSeedForm\r\n\t\t\t\t\t\t\tsetMnemonic={this.setMnemonic}\r\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.props.importType === 'importSeed') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ImportSeedForm\r\n\t\t\t\t\t\t\tsetMnemonic={this.setMnemonic}\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.props.importType === 'ledger') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<LedgerForm\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t\ttype=\"fct\"\r\n\t\t\t\t\t\t\tkey=\"fctLedgerForm\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.props.importType === 'new' ||\r\n\t\t\t\t\tthis.props.importType === 'importSeed'\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<SeedForm\r\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\ttype=\"fct\"\r\n\t\t\t\t\t\t\tkey=\"fctSeedForm\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} /* else if (this.props.importType === 'ledger') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<LedgerForm\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t\ttype=\"ec\"\r\n\t\t\t\t\t\t\tkey=\"ecLedgerForm\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t} */\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.props.importType === 'new' ||\r\n\t\t\t\t\tthis.props.importType === 'importSeed'\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<SeedForm\r\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\r\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\r\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\r\n\t\t\t\t\t\t\ttype=\"ec\"\r\n\t\t\t\t\t\t\tkey=\"ecSeedForm\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Unknown step';\r\n\t\t}\r\n\t}\r\n}\r\nexport default AddWalletStepContent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddWalletStepContent from './AddWalletStepContent';\r\nimport SectionHeader from '../vote/shared/SectionHeader.js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withWalletContext } from '../context/WalletContext';\r\n\r\nconst getStandardSteps = () => {\r\n\treturn ['Import Method', 'Address details'];\r\n};\r\n\r\nconst getLedgerAddressSteps = (networkProps) => {\r\n\treturn [\r\n\t\t'Import Method',\r\n\t\tnetworkProps.factoidAbbreviationFull,\r\n\t\t//\tnetworkProps.ecAbbreviationFull,\r\n\t];\r\n};\r\n//this.props.networkController.networkProps.factoidAbbreviation\r\nconst getSeedAddressSteps = (networkProps) => {\r\n\treturn [\r\n\t\t'Import Method',\r\n\t\t'Seed Value',\r\n\t\tnetworkProps.factoidAbbreviationFull,\r\n\t\tnetworkProps.ecAbbreviationFull,\r\n\t];\r\n};\r\n\r\nconst stepMap = {\r\n\timportSeed: getSeedAddressSteps,\r\n\tnew: getSeedAddressSteps,\r\n\tledger: getLedgerAddressSteps,\r\n\tfct: getStandardSteps,\r\n\tec: getStandardSteps,\r\n};\r\n\r\nclass AddWalletStepper extends React.Component {\r\n\tinitialState = {\r\n\t\tactiveStep: 0,\r\n\t\timportType: 'fct',\r\n\t\tgetSteps: getStandardSteps,\r\n\t};\r\n\r\n\tstate = this.initialState;\r\n\r\n\tupdateImportType = (importType) => {\r\n\t\tthis.setState({\r\n\t\t\timportType: importType,\r\n\t\t\tgetSteps: stepMap[importType],\r\n\t\t});\r\n\t};\r\n\r\n\thandleNext = () => {\r\n\t\tthis.setState((state) => ({\r\n\t\t\tactiveStep: state.activeStep + 1,\r\n\t\t}));\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tthis.setState((state) => ({\r\n\t\t\tactiveStep: state.activeStep - 1,\r\n\t\t}));\r\n\t};\r\n\r\n\thandleReset = () => {\r\n\t\tthis.setState(this.initialState);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\thandleCloseText,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\twalletController: { isWalletEmpty },\r\n\t\t} = this.props;\r\n\r\n\t\tconst { activeStep } = this.state;\r\n\r\n\t\tconst steps = this.state.getSteps(networkProps);\r\n\t\tconst sectionHeaderText =\r\n\t\t\tnetworkProps.network === 'testnet'\r\n\t\t\t\t? 'Add Testnet Address'\r\n\t\t\t\t: 'Add Address';\r\n\r\n\t\treturn (\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<SectionHeader text={sectionHeaderText} id=\"modal-title\" />\r\n\t\t\t\t<Stepper activeStep={activeStep} className={classes.stepper}>\r\n\t\t\t\t\t{steps.map((label, index) => {\r\n\t\t\t\t\t\tconst props = {};\r\n\t\t\t\t\t\tconst labelProps = {};\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Step key={label} {...props}>\r\n\t\t\t\t\t\t\t\t<StepLabel {...labelProps}>{label}</StepLabel>\r\n\t\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Stepper>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t{activeStep === steps.length ? (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{networkProps.network === 'testnet' ? (\r\n\t\t\t\t\t\t\t\t<TestnetFinalStep\r\n\t\t\t\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\t\t\t\tisWalletEmpty={isWalletEmpty()}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<MainnetFinalStep\r\n\t\t\t\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\t\t\t\tisWalletEmpty={isWalletEmpty()}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{!isWalletEmpty() ? (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.handleReset}>Add Another</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.handleClose}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{handleCloseText}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={this.handleReset}>\r\n\t\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<AddWalletStepContent\r\n\t\t\t\t\t\t\t\tactiveStep={activeStep}\r\n\t\t\t\t\t\t\t\tupdateImportType={this.updateImportType}\r\n\t\t\t\t\t\t\t\thandleNext={this.handleNext}\r\n\t\t\t\t\t\t\t\thandleBack={this.handleBack}\r\n\t\t\t\t\t\t\t\timportType={this.state.importType}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</Paper>\r\n\t\t);\r\n\t}\r\n}\r\nAddWalletStepper.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst MainnetFinalStep = ({ classes, isWalletEmpty }) => {\r\n\tif (isWalletEmpty) {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\tNo Addresses have been added.\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\tYou have finished adding an address.\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst TestnetFinalStep = ({ classes, isWalletEmpty }) => {\r\n\tif (isWalletEmpty) {\r\n\t\treturn (\r\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\tNo Addresses have been added.\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\t\tYou have finished adding a Testnet address.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Paper className={classes.testnetWarning}>\r\n\t\t\t\t\t<Typography className={classes.warningText}>\r\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\r\n\t\t\t\t\t\t&nbsp;&nbsp;Use these addresses for Testnet ONLY. Do not send real\r\n\t\t\t\t\t\tFactoids to these addresses, or you run the risk of losing them.\r\n\t\t\t\t\t\tPlease read all notices.\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tYou can use the{' '}\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\thref={'https://faucet.factoid.org/'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFactom Testnet Faucet{' '}\r\n\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t</a>{' '}\r\n\t\t\t\t\t\tto receive Testoids.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tstepper: {\r\n\t\tbackgroundColor: '#eeeeee',\r\n\t},\r\n\tpaper: {\r\n\t\tminWidth: 565,\r\n\t\tpadding: theme.spacing.unit * 4,\r\n\t\tminHeight: 300,\r\n\t},\r\n\ttestnetWarning: {\r\n\t\tborderColor: '#ffa000',\r\n\t\tborderStyle: 'solid',\r\n\t\tpadding: 5,\r\n\t\twidth: 415,\r\n\t},\r\n\twarningIcon: {\r\n\t\tcolor: '#ffa000',\r\n\t\tdisplay: 'inline',\r\n\t\tposition: 'relative',\r\n\t\ttop: '6px',\r\n\t},\r\n\twarningText: {\r\n\t\tdisplay: 'inline',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(AddWalletStepper);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddWalletStepper from './AddWalletStepper';\r\n\r\nclass AddWalletModal extends React.Component {\r\n\tstate = {\r\n\t\topen: false,\r\n\t};\r\n\r\n\thandleOpen = () => {\r\n\t\tthis.setState({ open: true });\r\n\t};\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.center}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={this.handleOpen}\r\n\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd Address\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\taria-labelledby=\"modal-title\"\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.modalContent}>\r\n\t\t\t\t\t\t<AddWalletStepper\r\n\t\t\t\t\t\t\thandleClose={this.handleClose}\r\n\t\t\t\t\t\t\thandleCloseText=\"Exit\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nAddWalletModal.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tmodalContent: {\r\n\t\tposition: 'absolute',\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\ttop: `50%`,\r\n\t\tleft: `50%`,\r\n\t\ttransform: `translate(-50%, -50%)`,\r\n\t\tminWidth: '490px',\r\n\t},\r\n\tbutton: {\r\n\t\twidth: '275px;',\r\n\t\theight: '50px',\r\n\t\tmarginBottom: '15px',\r\n\t},\r\n\tcenter: {\r\n\t\tmargin: '0 auto',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(AddWalletModal);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AddWalletModal from '../addWallet/AddWalletModal.js';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormatBalance from './shared/BalanceFormatter.js';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport _isEmpty from 'lodash/isEmpty';\r\n\r\nclass Sidebar extends Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: {\r\n\t\t\t\tgetEntryCreditAddresses,\r\n\t\t\t\tgetFactoidAddresses,\r\n\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\tselectAddress,\r\n\t\t\t\tupdateBalances,\r\n\t\t\t},\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst ecAddresses = getEntryCreditAddresses();\r\n\t\tconst factoidAddresses = getFactoidAddresses();\r\n\r\n\t\tconst listfactoidAddresses = factoidAddresses.map(function(wallet, index) {\r\n\t\t\tconst expanded =\r\n\t\t\t\tactiveAddressIndex_o.index === index &&\r\n\t\t\t\tactiveAddressIndex_o.type === 'fct';\r\n\t\t\tconst nicknameStyle = expanded ? { fontWeight: 500 } : {};\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<ExpansionPanel\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\tawait selectAddress(index, 'fct');\r\n\t\t\t\t\t\tupdateBalances();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={expanded ? classes.expanded : ''}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ExpansionPanelSummary>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.break} style={nicknameStyle}>\r\n\t\t\t\t\t\t\t\t\t{wallet.nickname}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!_isNil(wallet.balance) && (\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.break}>\r\n\t\t\t\t\t\t\t\t\t\t<FormatBalance balance={wallet.balance} type=\"fct\" />\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t</ExpansionPanel>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tconst listecAddresses = ecAddresses.map(function(wallet, index) {\r\n\t\t\tconst expanded =\r\n\t\t\t\tactiveAddressIndex_o.index === index &&\r\n\t\t\t\tactiveAddressIndex_o.type === 'ec';\r\n\r\n\t\t\tconst nicknameStyle = expanded ? { fontWeight: 500 } : {};\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<ExpansionPanel\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\tawait selectAddress(index, 'ec');\r\n\t\t\t\t\t\tupdateBalances();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={expanded ? classes.expanded : ''}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ExpansionPanelSummary>\r\n\t\t\t\t\t\t<Grid container item xs={12} justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.break} style={nicknameStyle}>\r\n\t\t\t\t\t\t\t\t\t{wallet.nickname}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!_isNil(wallet.balance) && (\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.break}>\r\n\t\t\t\t\t\t\t\t\t\t<FormatBalance balance={wallet.balance} type=\"ec\" />\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t</ExpansionPanel>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{!_isEmpty(factoidAddresses) && (\r\n\t\t\t\t\t<Paper className={classes.noPadding}>\r\n\t\t\t\t\t\t<List className={classes.addressList}>\r\n\t\t\t\t\t\t\t<ListItem className={classes.walletListHeader}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tclassName={classes.addressHeading}\r\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{networkProps.factoidAbbreviationFull + ' Addresses'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t<ListItem disableGutters className={classes.walletList}>\r\n\t\t\t\t\t\t\t\t<div className={classes.listAddrRoot}>\r\n\t\t\t\t\t\t\t\t\t{listfactoidAddresses}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t)}\r\n\t\t\t\t{!_isEmpty(ecAddresses) && (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t{!_isEmpty(factoidAddresses) && <br />}\r\n\t\t\t\t\t\t<Paper className={classes.noPadding}>\r\n\t\t\t\t\t\t\t<List className={classes.addressList}>\r\n\t\t\t\t\t\t\t\t<ListItem className={classes.walletListHeader}>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.addressHeading}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{networkProps.ecAbbreviationFull + ' Addresses'}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<ListItem disableGutters className={classes.walletList}>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.listAddrRoot}>{listecAddresses}</div>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t\t<br />\r\n\t\t\t\t<div className={classes.flex}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<AddWalletModal />\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nSidebar.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tnoPadding: {\r\n\t\tpadding: '0px',\r\n\t},\r\n\r\n\tbreak: {\r\n\t\twordWrap: 'break-word',\r\n\t},\r\n\texpanded: {\r\n\t\tbackgroundColor: 'aliceblue',\r\n\t},\r\n\tlistAddrRoot: {\r\n\t\twidth: '100%',\r\n\t\tposition: 'relative',\r\n\t\toverflow: 'auto',\r\n\t\tmaxHeight: 270,\r\n\t},\r\n\r\n\taddressHeading: {\r\n\t\tfontWeight: 500,\r\n\t},\r\n\tflex: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\twalletList: {\r\n\t\tpadding: '6px',\r\n\t},\r\n\twalletListHeader: {\r\n\t\tpaddingTop: '5px',\r\n\t\tpaddingBottom: '5px',\r\n\t},\r\n\taddressList: {\r\n\t\tpaddingBottom: '0px',\r\n\t\tbackgroundColor: '#ddd',\r\n\t\tborderRadius: '4px',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(Sidebar);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport FormatBalance from './BalanceFormatter.js';\r\nimport { withWalletContext } from '../../context/WalletContext';\r\nimport { withLedger } from '../../context/LedgerContext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst AddressInfoHeader = (props) => {\r\n\tconst {\r\n\t\tclasses,\r\n\t\twalletController: { getActiveAddress, activeAddressIndex_o },\r\n\t\tledgerController: { checkAddress },\r\n\t} = props;\r\n\r\n\tconst activeAddress_o = getActiveAddress();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Paper elevation={2} className={classes.paper}>\r\n\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t<i>Nickname:</i>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t{activeAddress_o.nickname}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t<i>Address:</i>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t{activeAddress_o.address}\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<CopyToClipboard text={activeAddress_o.address}>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Copy\" className={classes.pointer}>\r\n\t\t\t\t\t\t\t\t\t<SvgIcon fontSize=\"inherit\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t<path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\r\n\t\t\t\t\t\t\t\t\t</SvgIcon>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{activeAddress_o.importType === 'ledger' && (\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Ledger Nano S\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{activeAddress_o.importType === 'seed' && (\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Seed Phrase\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{activeAddress_o.importType === 'standard' && (\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Public Address\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{!_isNil(activeAddress_o.balance) && (\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t<i>Balance:</i>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<FormatBalance\r\n\t\t\t\t\t\t\t\t\tbalance={activeAddress_o.balance}\r\n\t\t\t\t\t\t\t\t\ttype={activeAddressIndex_o.type}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{activeAddress_o.importType === 'ledger' && (\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\ttitle=\"Verify Ledger Nano S Address\"\r\n\t\t\t\t\t\t\t\tclassName={classes.pointer}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<VerifiedUser\r\n\t\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\tawait checkAddress(\r\n\t\t\t\t\t\t\t\t\t\t\tactiveAddress_o,\r\n\t\t\t\t\t\t\t\t\t\t\tactiveAddressIndex_o.type\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst styles = (theme) => ({\r\n\troot: { textAlign: 'left' },\r\n\tpaper: { backgroundColor: 'aliceblue', padding: '16px', marginBottom: '3px' },\r\n\tpointer: {\r\n\t\tcursor: 'pointer',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withWalletContext, withLedger, withStyles(styles));\r\n\r\nexport default enhancer(AddressInfoHeader);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SendTransactionPreview = (props) => {\r\n\tconst { factoidAmount, classes, networkProps, sendFactoidFee } = props;\r\n\r\n\t// total send amount\r\n\tconst totalFactoidAmount = factoidAmount + sendFactoidFee;\r\n\r\n\t// format output\r\n\tconst transferFactoidAmountText = factoidAmount.toLocaleString(undefined, {\r\n\t\tmaximumFractionDigits: 8,\r\n\t});\r\n\r\n\tconst totalFactoidAmountText =\r\n\t\ttotalFactoidAmount.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tnetworkProps.factoidAbbreviation;\r\n\r\n\tconst feeFactoidAmountText =\r\n\t\tsendFactoidFee.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tnetworkProps.factoidAbbreviation;\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.root} elevation={2}>\r\n\t\t\t<div>Transaction Preview</div>\r\n\t\t\t<br />\r\n\t\t\t<span className={classes.transferFactoidAmountText}>\r\n\t\t\t\t{transferFactoidAmountText}\r\n\t\t\t</span>\r\n\t\t\t<span className={classes.transferFactoidUnitText}>\r\n\t\t\t\t{' ' + networkProps.factoidAbbreviation}\r\n\t\t\t</span>\r\n\t\t\t<hr className={classes.divider} />\r\n\t\t\t<div className={classes.detail}>\r\n\t\t\t\t<div>Total Amount:</div>\r\n\t\t\t\t<div className={classes.factoidAmountSmallText}>\r\n\t\t\t\t\t{totalFactoidAmountText}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.detail}>\r\n\t\t\t\t<div>Network Fee:</div>\r\n\t\t\t\t<div className={classes.factoidAmountSmallText}>\r\n\t\t\t\t\t{feeFactoidAmountText}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n};\r\nSendTransactionPreview.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\nconst styles = {\r\n\troot: {\r\n\t\twidth: '75%',\r\n\t\tmargin: '0 auto',\r\n\t\tpaddingTop: '26px',\r\n\t\tmarginTop: '39px',\r\n\t\theight: '194px',\r\n\t\tborderRadius: '10px',\r\n\t\tbackgroundColor: '#eef1f4',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\ttransferFactoidAmountText: {\r\n\t\tfontSize: '50px',\r\n\t\tcolor: '#007eff',\r\n\t},\r\n\ttransferFactoidUnitText: {\r\n\t\twidth: '55px',\r\n\t\theight: '24px',\r\n\t\tfontSize: '20px',\r\n\t\tcolor: '#007eff',\r\n\t},\r\n\tfactoidAmountSmallText: {\r\n\t\tcolor: '#001830',\r\n\t\tpaddingTop: '7px',\r\n\t},\r\n\tdetail: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tpaddingLeft: '65px',\r\n\t\tpaddingRight: '65px',\r\n\t},\r\n\tdivider: {\r\n\t\twidth: '50%',\r\n\t\topacity: 0.15,\r\n\t\tborder: 'solid 1px #103152',\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(withStyles(styles));\r\n\r\nexport default enhancer(SendTransactionPreview);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport _get from 'lodash/get';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withFactomCli } from '../context/FactomCliContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\r\nimport AddressInfoHeader from './shared/AddressInfoHeader';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { withLedger } from '../context/LedgerContext';\r\nimport { isValidFctPublicAddress } from 'factom/dist/factom';\r\nimport SendTransactionPreview from './SendTransactionPreview';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst sendFactoidAmountPath = 'sendFactoidAmount';\r\nconst recipientAddressPath = 'recipientAddress';\r\nconst myFctWalletAnchorElPath = 'myFctWalletAnchorEl';\r\nconst privateKeyPath = 'privateKey';\r\nconst seedPath = 'seed';\r\nconst walletImportTypePath = 'walletImportType';\r\n\r\nconst FACTOSHI_MULTIPLIER = 0.00000001;\r\nconst FACTOID_MULTIPLIER = 100000000;\r\nconst FCT_ADDRESS_LENGTH = 52;\r\n\r\nclass SendFactoidForm extends Component {\r\n\tstate = { sendFactoidFee: null };\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst sendFactoidFee = await this.props.walletController.getFactoidFee();\r\n\t\tthis.setState({ sendFactoidFee });\r\n\t}\r\n\r\n\tgetMaxFCT(balance, fee) {\r\n\t\tconst maxFactoids = balance * FACTOSHI_MULTIPLIER - fee;\r\n\t\tif (maxFactoids < 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn maxFactoids;\r\n\t}\r\n\r\n\tverifyKey = (privateKey) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.walletController.verifyKey(privateKey, activeAddress_o);\r\n\t};\r\n\r\n\tverifySeed = (seed) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\tfactomCliController: { factomCli },\r\n\t\t\twalletController: {\r\n\t\t\t\tgetFactoidAddresses,\r\n\t\t\t\tgetActiveAddress,\r\n\t\t\t\tupdateBalances,\r\n\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\taddAddressTransaction,\r\n\t\t\t},\r\n\t\t\tledgerController: { signWithLedger },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tseedController: { signWithSeed },\r\n\t\t} = this.props;\r\n\r\n\t\tconst factoidAddresses = getFactoidAddresses();\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\r\n\t\tconst maxAmount = this.getMaxFCT(\r\n\t\t\tactiveAddress_o.balance,\r\n\t\t\tthis.state.sendFactoidFee\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tsendFactoidAmount: '',\r\n\t\t\t\t\trecipientAddress: '',\r\n\t\t\t\t\tmyFctWalletAnchorEl: null,\r\n\t\t\t\t\t[privateKeyPath]: '',\r\n\t\t\t\t\t[seedPath]: '',\r\n\t\t\t\t\t[walletImportTypePath]: activeAddress_o.importType,\r\n\t\t\t\t\ttransactionID: null,\r\n\t\t\t\t\tledgerStatus: null,\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tsendFactoidAmount,\r\n\t\t\t\t\t\trecipientAddress,\r\n\t\t\t\t\t\tprivateKey,\r\n\t\t\t\t\t\tseed,\r\n\t\t\t\t\t} = values;\r\n\t\t\t\t\tlet transaction = {};\r\n\t\t\t\t\tconst importType = _get(values, walletImportTypePath);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (importType === 'standard') {\r\n\t\t\t\t\t\t\ttransaction = await factomCli.createFactoidTransaction(\r\n\t\t\t\t\t\t\t\tprivateKey,\r\n\t\t\t\t\t\t\t\trecipientAddress,\r\n\t\t\t\t\t\t\t\tMath.round(FACTOID_MULTIPLIER * sendFactoidAmount)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else if (importType === 'seed') {\r\n\t\t\t\t\t\t\tconst mnemonic = seed.trim();\r\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\r\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\r\n\t\t\t\t\t\t\tconst amount = Math.round(sendFactoidAmount * FACTOID_MULTIPLIER);\r\n\t\t\t\t\t\t\tconst type = 'sendFCT';\r\n\r\n\t\t\t\t\t\t\tconst seedTrans_o = {\r\n\t\t\t\t\t\t\t\tmnemonic,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\ttoAddr,\r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\ttransaction = await signWithSeed(seedTrans_o);\r\n\t\t\t\t\t\t} else if (importType === 'ledger') {\r\n\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t'ledgerStatus',\r\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\r\n\r\n\t\t\t\t\t\t\tif (ledgerConnected) {\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t'ledgerStatus',\r\n\t\t\t\t\t\t\t\t\t'Waiting 30s for Confirmation'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t'transactionError',\r\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst fromAddr = activeAddress_o.address;\r\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\r\n\t\t\t\t\t\t\tconst amount = Math.round(sendFactoidAmount * FACTOID_MULTIPLIER);\r\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\r\n\r\n\t\t\t\t\t\t\tconst ledgerTrans_o = {\r\n\t\t\t\t\t\t\t\tfromAddr,\r\n\t\t\t\t\t\t\t\ttoAddr,\r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\ttransaction = await signWithLedger(ledgerTrans_o);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst txId = await factomCli.sendTransaction(transaction);\r\n\t\t\t\t\t\tawait addAddressTransaction(activeAddressIndex_o, txId);\r\n\r\n\t\t\t\t\t\tactions.setFieldValue('transactionID', txId);\r\n\t\t\t\t\t\tupdateBalances();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\tactions.resetForm();\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t'transactionError',\r\n\t\t\t\t\t\t\t'An error occured. Please try again.'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[recipientAddressPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\trecipientAddressPath,\r\n\t\t\t\t\t\t\t'Invalid Address',\r\n\t\t\t\t\t\t\tisValidFctPublicAddress\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[sendFactoidAmountPath]: Yup.number()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.positive('Must be a positive number')\r\n\t\t\t\t\t\t.max(maxAmount, 'Insufficient Funds'),\r\n\t\t\t\t\t[walletImportTypePath]: Yup.string(),\r\n\t\t\t\t\t[privateKeyPath]: Yup.string().when(walletImportTypePath, {\r\n\t\t\t\t\t\tis: 'standard',\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(privateKeyPath, 'Invalid Key', this.verifyKey),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[seedPath]: Yup.string().when(walletImportTypePath, {\r\n\t\t\t\t\t\tis: 'seed',\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleReset,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form autoComplete=\"nope\" autoComplete=\"off\">\r\n\t\t\t\t\t\t<AddressInfoHeader />\r\n\t\t\t\t\t\t<Field name={recipientAddressPath}>\r\n\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[recipientAddressPath] &&\r\n\t\t\t\t\t\t\t\t\t\ttouched[recipientAddressPath]\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t'Recipient ' + networkProps.factoidAbbreviation + ' address'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t'Enter ' + networkProps.factoidAbbreviationFull + ' Address'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\t\t\t\t\tmaxLength: FCT_ADDRESS_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={recipientAddressPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<FactoidAddressMenu\r\n\t\t\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\tfactoidAddresses={factoidAddresses}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\r\n\t\t\t\t\t\t\t\t\taria-owns={\r\n\t\t\t\t\t\t\t\t\t\tvalues[myFctWalletAnchorElPath] ? 'simple-menu' : null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\tmyFctWalletAnchorElPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\tevent.currentTarget\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSend to one of my addresses\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Field name={sendFactoidAmountPath}>\r\n\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[sendFactoidAmountPath] &&\r\n\t\t\t\t\t\t\t\t\t\ttouched[sendFactoidAmountPath]\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t'Enter Amount (' + networkProps.factoidAbbreviation + ')'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Amount\"\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={sendFactoidAmountPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(sendFactoidAmountPath, maxAmount);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUse Max\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'standard' && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Field name={privateKeyPath}>\r\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\terrors[privateKeyPath] && touched[privateKeyPath]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Private Key for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Private Key\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: FCT_ADDRESS_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={privateKeyPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'seed' && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Field name={seedPath}>\r\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, seedPath) && _get(touched, seedPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={seedPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{values.sendFactoidAmount ? (\r\n\t\t\t\t\t\t\t<SendTransactionPreview\r\n\t\t\t\t\t\t\t\tnetworkProps={networkProps}\r\n\t\t\t\t\t\t\t\tfactoidAmount={values.sendFactoidAmount}\r\n\t\t\t\t\t\t\t\tsendFactoidFee={this.state.sendFactoidFee}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{!_isNil(values.transactionError) && (\r\n\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\r\n\t\t\t\t\t\t\t\t{values.transactionError}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{isSubmitting ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{values.transactionID !== null ? (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\r\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Transaction ID:</b> {values.transactionID}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tThis transaction will be visible{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues.transactionID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\there{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\tin 10-15 minutes, after being included in the next\r\n\t\t\t\t\t\t\t\t\t\t\t\tFactom block currently being processed by the\r\n\t\t\t\t\t\t\t\t\t\t\t\tblockchain. Funds are available for use immediately.\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"outline\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tNew Transaction\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\r\n\t\t\t\t\t\t\t\t\t\t{values.ledgerStatus}\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{'Send ' + networkProps.factoidAbbreviationFull + 's'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tPlease verify all details are correct before hitting send.\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tNobody can reverse mistaken transactions.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction FactoidAddressMenu(props) {\r\n\tconst { values, setFieldValue, factoidAddresses } = props;\r\n\r\n\tconst addressList = factoidAddresses.map((address_o, index) => (\r\n\t\t<MenuItem\r\n\t\t\tkey={index}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\r\n\t\t\t\tsetFieldValue(recipientAddressPath, address_o.address);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{address_o.nickname}\r\n\t\t</MenuItem>\r\n\t));\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tid=\"simple-menu\"\r\n\t\t\tanchorEl={values[myFctWalletAnchorElPath]}\r\n\t\t\topen={Boolean(values[myFctWalletAnchorElPath])}\r\n\t\t\tonClose={() => {\r\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{addressList}\r\n\t\t</Menu>\r\n\t);\r\n}\r\n\r\nSendFactoidForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n\tsendButton: {\r\n\t\twidth: '50%',\r\n\t\theight: '24px',\r\n\t},\r\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\r\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\r\n\tpointer: {\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\ttransaction: {\r\n\t\tborderColor: '#6fbf73',\r\n\t\tborderStyle: 'solid',\r\n\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 8,\r\n\t},\r\n\tsuccessIcon: {\r\n\t\tposition: 'relative',\r\n\t\ttop: '5px',\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithLedger,\r\n\twithSeed,\r\n\twithWalletContext,\r\n\twithFactomCli,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(SendFactoidForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ConvertTransactionPreview = (props) => {\r\n\tconst {\r\n\t\tecAmount,\r\n\t\tfactoidAmount,\r\n\t\tclasses,\r\n\t\tnetworkProps,\r\n\t\tsendFactoidFee,\r\n\t} = props;\r\n\r\n\t// total send amount\r\n\tconst totalFactoidAmount = factoidAmount + sendFactoidFee;\r\n\r\n\t// format output\r\n\tconst convertECAmountText = ecAmount.toLocaleString(undefined, {\r\n\t\tmaximumFractionDigits: 8,\r\n\t});\r\n\r\n\tconst totalFactoidCostText =\r\n\t\ttotalFactoidAmount.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tnetworkProps.factoidAbbreviation;\r\n\r\n\tconst feeFactoidAmountText =\r\n\t\tsendFactoidFee.toLocaleString(undefined, {\r\n\t\t\tmaximumFractionDigits: 8,\r\n\t\t}) +\r\n\t\t' ' +\r\n\t\tnetworkProps.factoidAbbreviation;\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.root} elevation={2}>\r\n\t\t\t<div>Transaction Preview</div>\r\n\t\t\t<br />\r\n\t\t\t<span className={classes.convertECAmountText}>{convertECAmountText}</span>\r\n\t\t\t<span className={classes.ecUnitText}>\r\n\t\t\t\t{' ' + networkProps.ecAbbreviation}\r\n\t\t\t</span>\r\n\t\t\t<hr className={classes.divider} />\r\n\t\t\t<div className={classes.detail}>\r\n\t\t\t\t<div>Total Cost:</div>\r\n\t\t\t\t<div className={classes.factoidCostSmallText}>\r\n\t\t\t\t\t{totalFactoidCostText}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.detail}>\r\n\t\t\t\t<div>Network Fee:</div>\r\n\t\t\t\t<div className={classes.factoidCostSmallText}>\r\n\t\t\t\t\t{feeFactoidAmountText}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n};\r\nConvertTransactionPreview.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\nconst styles = {\r\n\troot: {\r\n\t\twidth: '75%',\r\n\t\tmargin: '0 auto',\r\n\t\tpaddingTop: '26px',\r\n\t\tmarginTop: '39px',\r\n\t\theight: '194px',\r\n\t\tborderRadius: '10px',\r\n\t\tbackgroundColor: '#eef1f4',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tconvertECAmountText: {\r\n\t\tfontSize: '50px',\r\n\t\tcolor: '#007eff',\r\n\t},\r\n\tecUnitText: {\r\n\t\twidth: '55px',\r\n\t\theight: '24px',\r\n\t\tfontSize: '20px',\r\n\t\tcolor: '#007eff',\r\n\t},\r\n\tfactoidCostSmallText: {\r\n\t\tcolor: '#001830',\r\n\t\tpaddingTop: '7px',\r\n\t},\r\n\tdetail: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tpaddingLeft: '65px',\r\n\t\tpaddingRight: '65px',\r\n\t},\r\n\tdivider: {\r\n\t\twidth: '50%',\r\n\t\topacity: 0.15,\r\n\t\tborder: 'solid 1px #103152',\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(withStyles(styles));\r\n\r\nexport default enhancer(ConvertTransactionPreview);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport _get from 'lodash/get';\r\nimport _isNil from 'lodash/isNil';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withFactomCli } from '../context/FactomCliContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddressInfoHeader from './shared/AddressInfoHeader';\r\nimport { withLedger } from '../context/LedgerContext';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { isValidEcPublicAddress } from 'factom/dist/factom';\r\nimport ConvertTransactionPreview from './ConvertTransactionPreview';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst entryCreditAmountPath = 'entryCreditAmount';\r\nconst recipientAddressPath = 'recipientAddress';\r\nconst myFctWalletAnchorElPath = 'myFctWalletAnchorEl';\r\nconst privateKeyPath = 'privateKey';\r\nconst walletImportTypePath = 'walletImportType';\r\nconst seedPath = 'seed';\r\n\r\nconst FACTOSHI_MULTIPLIER = 0.00000001;\r\nconst EC_ADDRESS_LENGTH = 52;\r\n\r\nclass ConvertECForm extends Component {\r\n\tstate = { sendFactoshiFee: null, ecRate: null };\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst sendFactoshiFee = await this.props.walletController.getFactoshiFee();\r\n\t\tconst ecRate = await this.props.walletController.getEntryCreditRate();\r\n\t\tthis.setState({ sendFactoshiFee, ecRate });\r\n\t}\r\n\r\n\tgetMaxEC(balance, fee) {\r\n\t\tconst maxFactoshis = balance - fee;\r\n\t\tlet maxEntryCredits = maxFactoshis / this.state.ecRate;\r\n\t\tif (maxEntryCredits < 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn maxEntryCredits;\r\n\t}\r\n\r\n\tverifyKey = (privateKey) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.walletController.verifyKey(privateKey, activeAddress_o);\r\n\t};\r\n\r\n\tverifySeed = (seed) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: {\r\n\t\t\t\tupdateBalances,\r\n\t\t\t\tgetEntryCreditAddresses,\r\n\t\t\t\tgetActiveAddress,\r\n\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\taddAddressTransaction,\r\n\t\t\t},\r\n\t\t\tledgerController: { signWithLedger },\r\n\t\t\tfactomCliController: { factomCli },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t\tseedController: { signWithSeed },\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\t\tconst ecAddresses = getEntryCreditAddresses();\r\n\r\n\t\tconst maxAmount = this.getMaxEC(\r\n\t\t\tactiveAddress_o.balance,\r\n\t\t\tthis.state.sendFactoshiFee\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tentryCreditAmount: '',\r\n\t\t\t\t\trecipientAddress: '',\r\n\t\t\t\t\t[myFctWalletAnchorElPath]: null,\r\n\t\t\t\t\tprivateKey: '',\r\n\t\t\t\t\t[seedPath]: '',\r\n\t\t\t\t\t[walletImportTypePath]: activeAddress_o.importType,\r\n\t\t\t\t\ttransactionID: null,\r\n\t\t\t\t\tledgerStatus: null,\r\n\t\t\t\t\ttransactionError: null,\r\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tentryCreditAmount,\r\n\t\t\t\t\t\trecipientAddress,\r\n\t\t\t\t\t\tprivateKey,\r\n\t\t\t\t\t\tseed,\r\n\t\t\t\t\t} = values;\r\n\t\t\t\t\tlet transaction = {};\r\n\t\t\t\t\tconst importType = _get(values, walletImportTypePath);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (importType === 'standard') {\r\n\t\t\t\t\t\t\ttransaction = await factomCli.createEntryCreditPurchaseTransaction(\r\n\t\t\t\t\t\t\t\tprivateKey,\r\n\t\t\t\t\t\t\t\trecipientAddress,\r\n\t\t\t\t\t\t\t\tentryCreditAmount\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else if (importType === 'seed') {\r\n\t\t\t\t\t\t\tconst mnemonic = seed.trim();\r\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\r\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\r\n\t\t\t\t\t\t\tconst amount = entryCreditAmount;\r\n\t\t\t\t\t\t\tconst type = 'convertFCT';\r\n\r\n\t\t\t\t\t\t\tconst seedTrans_o = {\r\n\t\t\t\t\t\t\t\tmnemonic,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\ttoAddr,\r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\ttransaction = await signWithSeed(seedTrans_o);\r\n\t\t\t\t\t\t} else if (importType === 'ledger') {\r\n\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t'ledgerStatus',\r\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\r\n\r\n\t\t\t\t\t\t\tif (ledgerConnected) {\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t'ledgerStatus',\r\n\t\t\t\t\t\t\t\t\t'Waiting 30s for Confirmation'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t'transactionError',\r\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst fromAddr = activeAddress_o.address;\r\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\r\n\t\t\t\t\t\t\tconst amount = Math.round(this.state.ecRate * entryCreditAmount);\r\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\r\n\r\n\t\t\t\t\t\t\tconst ledgerTrans_o = {\r\n\t\t\t\t\t\t\t\tfromAddr,\r\n\t\t\t\t\t\t\t\ttoAddr,\r\n\t\t\t\t\t\t\t\tamount,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\ttransaction = await signWithLedger(ledgerTrans_o);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst txId = await factomCli.sendTransaction(transaction);\r\n\t\t\t\t\t\tawait addAddressTransaction(activeAddressIndex_o, txId);\r\n\r\n\t\t\t\t\t\tactions.setFieldValue('transactionID', txId);\r\n\t\t\t\t\t\tupdateBalances();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\tactions.resetForm();\r\n\r\n\t\t\t\t\t\tactions.setFieldValue(\r\n\t\t\t\t\t\t\t'transactionError',\r\n\t\t\t\t\t\t\t'An error occured. Please try again.'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[recipientAddressPath]: Yup.string()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\trecipientAddressPath,\r\n\t\t\t\t\t\t\t'Invalid Address',\r\n\t\t\t\t\t\t\tisValidEcPublicAddress\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[entryCreditAmountPath]: Yup.number()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.positive('Must be a positive number')\r\n\t\t\t\t\t\t.max(maxAmount, 'Insufficient Funds'),\r\n\t\t\t\t\t[walletImportTypePath]: Yup.string(),\r\n\t\t\t\t\t[privateKeyPath]: Yup.string().when(walletImportTypePath, {\r\n\t\t\t\t\t\tis: 'standard',\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(privateKeyPath, 'Invalid Key', this.verifyKey),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t[seedPath]: Yup.string().when(walletImportTypePath, {\r\n\t\t\t\t\t\tis: 'seed',\r\n\t\t\t\t\t\tthen: Yup.string()\r\n\t\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\r\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\r\n\t\t\t\t\t}),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleReset,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form autoComplete=\"nope\" autoComplete=\"off\">\r\n\t\t\t\t\t\t<AddressInfoHeader />\r\n\t\t\t\t\t\t<Field name={recipientAddressPath}>\r\n\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[recipientAddressPath] &&\r\n\t\t\t\t\t\t\t\t\t\ttouched[recipientAddressPath]\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t'Recipient ' + networkProps.ecAbbreviation + ' address'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t'Enter ' + networkProps.ecAbbreviationFull + ' address'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\t\t\t\t\tmaxLength: EC_ADDRESS_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={recipientAddressPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{!_isEmpty(ecAddresses) && (\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<ECAddressMenu\r\n\t\t\t\t\t\t\t\t\t\tvalues={values}\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\t\t\t\tecAddresses={ecAddresses}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"caption\"\r\n\t\t\t\t\t\t\t\t\t\taria-owns={\r\n\t\t\t\t\t\t\t\t\t\t\tvalues[myFctWalletAnchorElPath] ? 'simple-menu' : null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyFctWalletAnchorElPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tevent.currentTarget\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSend to one of my addresses\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Field name={entryCreditAmountPath}>\r\n\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[entryCreditAmountPath] &&\r\n\t\t\t\t\t\t\t\t\t\ttouched[entryCreditAmountPath]\r\n\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t'Enter Amount (' + networkProps.ecAbbreviation + ')'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Amount\"\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={entryCreditAmountPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'standard' && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Field name={privateKeyPath}>\r\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\terrors[privateKeyPath] && touched[privateKeyPath]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Private Key for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Private Key\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: EC_ADDRESS_LENGTH,\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={privateKeyPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'seed' && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Field name={seedPath}>\r\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, seedPath) && _get(touched, seedPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={seedPath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{_get(values, entryCreditAmountPath) ? (\r\n\t\t\t\t\t\t\t<ConvertTransactionPreview\r\n\t\t\t\t\t\t\t\tnetworkProps={networkProps}\r\n\t\t\t\t\t\t\t\tecAmount={_get(values, entryCreditAmountPath)}\r\n\t\t\t\t\t\t\t\tfactoidAmount={\r\n\t\t\t\t\t\t\t\t\tthis.state.ecRate *\r\n\t\t\t\t\t\t\t\t\t_get(values, entryCreditAmountPath) *\r\n\t\t\t\t\t\t\t\t\tFACTOSHI_MULTIPLIER\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tsendFactoidFee={\r\n\t\t\t\t\t\t\t\t\tthis.state.sendFactoshiFee * FACTOSHI_MULTIPLIER\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{!_isNil(values.transactionError) && (\r\n\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\r\n\t\t\t\t\t\t\t\t{values.transactionError}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t{isSubmitting ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{values.transactionID !== null ? (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\r\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Transaction ID:</b> {values.transactionID}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\tThis transaction will be visible{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues.transactionID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\there{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\tin 10-15 minutes, after being included in the next\r\n\t\t\t\t\t\t\t\t\t\t\t\tFactom block currently being processed by the\r\n\t\t\t\t\t\t\t\t\t\t\t\tblockchain. Funds are available for use immediately.\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"outline\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tNew Transaction\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\r\n\t\t\t\t\t\t\t\t\t\t{values.ledgerStatus}\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{'Convert ' +\r\n\t\t\t\t\t\t\t\t\tnetworkProps.factoidAbbreviation +\r\n\t\t\t\t\t\t\t\t\t' to ' +\r\n\t\t\t\t\t\t\t\t\tnetworkProps.ecAbbreviation}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tPlease verify all details are correct before hitting send.\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tNobody can reverse mistaken transactions.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction ECAddressMenu(props) {\r\n\tconst { values, setFieldValue, ecAddresses } = props;\r\n\r\n\tconst addressList = ecAddresses.map((address_o, index) => (\r\n\t\t<MenuItem\r\n\t\t\tkey={index}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\r\n\t\t\t\tsetFieldValue(recipientAddressPath, address_o.address);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{address_o.nickname}\r\n\t\t</MenuItem>\r\n\t));\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tid=\"simple-menu\"\r\n\t\t\tanchorEl={values[myFctWalletAnchorElPath]}\r\n\t\t\topen={Boolean(values[myFctWalletAnchorElPath])}\r\n\t\t\tonClose={() => {\r\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{addressList}\r\n\t\t</Menu>\r\n\t);\r\n}\r\n\r\nConvertECForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n\tsendButton: {\r\n\t\twidth: '50%',\r\n\t\theight: '24px',\r\n\t},\r\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\r\n\tpointer: {\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\r\n\ttransaction: {\r\n\t\tborderColor: '#6fbf73',\r\n\t\tborderStyle: 'solid',\r\n\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 8,\r\n\t},\r\n\tsuccessIcon: {\r\n\t\tposition: 'relative',\r\n\t\ttop: '5px',\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(\r\n\twithNetwork,\r\n\twithLedger,\r\n\twithSeed,\r\n\twithWalletContext,\r\n\twithFactomCli,\r\n\twithStyles(styles)\r\n);\r\n\r\nexport default enhancer(ConvertECForm);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withSeed } from '../context/SeedContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport AddressInfoHeader from './shared/AddressInfoHeader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst privateKeyPath = 'privateKey';\r\nconst showPasswordPath = 'showPassword;';\r\nconst seedPath = 'seed';\r\n\r\nclass ViewPrivateKeyForm extends Component {\r\n\tverifySeed = (seed) => {\r\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\r\n\r\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: { getActiveAddress },\r\n\t\t\tseedController: { getPrivateKey },\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[privateKeyPath]: '',\r\n\t\t\t\t\t[seedPath]: '',\r\n\t\t\t\t\t[showPasswordPath]: false,\r\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\t\tconst { seed } = values;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst mnemonic = seed.trim();\r\n\t\t\t\t\t\tconst privateKey = getPrivateKey(mnemonic, activeAddress_o.index);\r\n\t\t\t\t\t\tactions.setFieldValue(privateKeyPath, privateKey);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[seedPath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({ isSubmitting, errors, touched, values, setFieldValue }) => (\r\n\t\t\t\t\t<Form autoComplete=\"nope\" autoComplete=\"off\">\r\n\t\t\t\t\t\t<AddressInfoHeader />\r\n\t\t\t\t\t\t{_isEmpty(_get(values, privateKeyPath)) && (\r\n\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\tname={seedPath}\r\n\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\terror={_get(errors, seedPath) && _get(touched, seedPath)}\r\n\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{!_isEmpty(_get(values, privateKeyPath)) && (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" style={{ fontSize: 15 }}>\r\n\t\t\t\t\t\t\t\t\tPrivate Key:&nbsp;\r\n\t\t\t\t\t\t\t\t\t{_get(values, privateKeyPath) && (\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, showPasswordPath) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(values, privateKeyPath)\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Display Private Key\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(showPasswordPath, true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 35 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t{isSubmitting ? (\r\n\t\t\t\t\t\t\t<React.Fragment />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Field name={props.name}>\r\n\t\t\t\t{({ field }) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tstyle={{ width: props.width }}\r\n\t\t\t\t\t\trequired={props.required}\r\n\t\t\t\t\t\tdisabled={props.disabled}\r\n\t\t\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\ttype={props.type}\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tspellCheck: props.enableSpellCheck,\r\n\t\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terror={props.error}\r\n\t\t\t\t\t\tlabel={props.label}\r\n\t\t\t\t\t\tfullWidth={props.fullWidth}\r\n\t\t\t\t\t\tmultiline={props.multiline}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Field>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname={props.name}\r\n\t\t\t\trender={(msg) => <div className={props.errorClass}>{msg}</div>}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nViewPrivateKeyForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n\tsendButton: {\r\n\t\twidth: '50%',\r\n\t\theight: '24px',\r\n\t},\r\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\r\n};\r\n\r\nconst enhancer = _flowRight(withSeed, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(ViewPrivateKeyForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _get from 'lodash/get';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst NICKNAME_MAX_LENGTH = 25;\r\nconst nicknamePath = 'nickname';\r\nconst saveLocallyPath = 'saveLocally';\r\nconst deleteAnchorElPath = 'deleteAnchorEl';\r\n\r\nclass AddressInfoForm extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: {\r\n\t\t\t\tgetActiveAddress,\r\n\t\t\t\tgetFactoidAddresses,\r\n\t\t\t\tgetEntryCreditAddresses,\r\n\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\tupdateAddress,\r\n\t\t\t\tdeleteAddress,\r\n\t\t\t},\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\r\n\t\tlet userAddressList = [];\r\n\t\tif (activeAddressIndex_o.type === 'fct') {\r\n\t\t\tuserAddressList = getFactoidAddresses();\r\n\t\t} else if (activeAddressIndex_o.type === 'ec') {\r\n\t\t\tuserAddressList = getEntryCreditAddresses();\r\n\t\t}\r\n\r\n\t\tconst userAddressNicknames = userAddressList\r\n\t\t\t.filter((addr_o) => addr_o.address !== activeAddress_o.address)\r\n\t\t\t.map((addr_o) => addr_o.nickname);\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\t[saveLocallyPath]: activeAddress_o.saveLocally,\r\n\t\t\t\t\t[nicknamePath]: activeAddress_o.nickname,\r\n\t\t\t\t\t[deleteAnchorElPath]: null,\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\twindow.setTimeout(() => {\r\n\t\t\t\t\t\tupdateAddress(\r\n\t\t\t\t\t\t\tactiveAddressIndex_o,\r\n\t\t\t\t\t\t\t_get(values, nicknamePath).trim(),\r\n\t\t\t\t\t\t\t_get(values, saveLocallyPath)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t[nicknamePath]: Yup.string()\r\n\t\t\t\t\t\t.trim()\r\n\t\t\t\t\t\t.required('Required')\r\n\t\t\t\t\t\t.test(\r\n\t\t\t\t\t\t\tnicknamePath,\r\n\t\t\t\t\t\t\t'Enter unique nickname',\r\n\t\t\t\t\t\t\t(value) => userAddressNicknames.indexOf(value) === -1\r\n\t\t\t\t\t\t),\r\n\t\t\t\t})}\r\n\t\t\t\trender={({\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">Edit Address</Typography>\r\n\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Nickname\"\r\n\t\t\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname={nicknamePath}\r\n\t\t\t\t\t\t\t\t\trender={(msg) => (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\tname={saveLocallyPath}\r\n\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={saveLocallyPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={field.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Save to local browser storage\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSubmit{' '}\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<CircularProgress size={20} />\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\taria-owns={values[deleteAnchorElPath] ? 'simple-menu' : null}\r\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.deleteButton}\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, event.currentTarget);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\t\tid=\"simple-menu\"\r\n\t\t\t\t\t\t\t\t\tanchorEl={values[deleteAnchorElPath]}\r\n\t\t\t\t\t\t\t\t\topen={Boolean(values[deleteAnchorElPath])}\r\n\t\t\t\t\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, null);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteAddress(activeAddressIndex_o);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, null);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.deleteConfirmationText}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tConfirm Delete\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<Field name={props.name}>\r\n\t\t\t{({ field }) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tspellCheck: false,\r\n\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...field}\r\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\terror={props.error}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Field>\r\n\t);\r\n};\r\n\r\nAddressInfoForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\terrorText: { color: 'red', fontSize: '12px' },\r\n\tdeleteButton: { marginLeft: 15 },\r\n\tdeleteConfirmationText: { color: 'red' },\r\n});\r\n\r\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(AddressInfoForm);\r\n","import React from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass TransactionList extends React.Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\twalletController: { getActiveAddress },\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress_o = getActiveAddress();\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{!_isEmpty(activeAddress_o.transactions) && (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">Recent Transactions</Typography>\r\n\t\t\t\t\t\t{activeAddress_o.transactions.map(function(transaction, index) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\tclassName={classes.transaction}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<b>Tx ID:</b> {transaction}{' '}\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\r\n\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\r\n\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\r\n\t\t\t\t\t\t\t\t\t\t\t\ttransaction\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTransactionList.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\ttransaction: { overflowWrap: 'break-word' },\r\n});\r\n\r\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\r\n\r\nexport default enhancer(TransactionList);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddressInfoHeader from './shared/AddressInfoHeader';\r\nimport AddressInfoForm from './AddressInfoForm';\r\nimport TransactionList from './TransactionList';\r\n\r\nconst AddressInfoTab = (props) => {\r\n\treturn (\r\n\t\t<div className={props.classes.root}>\r\n\t\t\t<AddressInfoHeader />\r\n\t\t\t<br />\r\n\t\t\t<Grid container spacing={8}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<AddressInfoForm />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<TransactionList />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nAddressInfoTab.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\troot: { textAlign: 'left' },\r\n});\r\n\r\nexport default withStyles(styles)(AddressInfoTab);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SendFactoidForm from './SendFactoidForm';\r\nimport ConvertECForm from './ConvertECForm';\r\nimport ViewPrivateKeyForm from './ViewPrivateKeyForm';\r\nimport AddressInfoTab from './AddressInfoTab';\r\nimport { withNetwork } from '../context/NetworkContext';\r\n\r\nclass WalletTabContent extends React.Component {\r\n\tstate = {\r\n\t\ttabValue: 0,\r\n\t};\r\n\r\n\thandleChange = (event, tabValue) => {\r\n\t\tthis.setState({ tabValue });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tclasses,\r\n\t\t\ttype,\r\n\t\t\tactiveAddress,\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tlet tabValue = this.state.tabValue;\r\n\r\n\t\tif (tabValue === 3 && activeAddress.importType !== 'seed') {\r\n\t\t\t//only seeds have tab 3\r\n\t\t\ttabValue = 0;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t{type === 'fct' && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\tvalue={tabValue}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab label=\"Address Info\" />\r\n\t\t\t\t\t\t\t<Tab label={'Send ' + networkProps.factoidAbbreviationFull} />\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t'Convert ' +\r\n\t\t\t\t\t\t\t\t\tnetworkProps.factoidAbbreviation +\r\n\t\t\t\t\t\t\t\t\t' to ' +\r\n\t\t\t\t\t\t\t\t\tnetworkProps.ecAbbreviation\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{activeAddress.importType === 'seed' && (\r\n\t\t\t\t\t\t\t\t<Tab label=\"View Private Key\" />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t{tabValue === 0 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<AddressInfoTab />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{tabValue === 1 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<SendFactoidForm />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{tabValue === 2 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<ConvertECForm />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{tabValue === 3 && (\r\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t\t<ViewPrivateKeyForm />\r\n\t\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{type === 'ec' && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\tvalue={0}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab label=\"Address Info\" />\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t<TabContainer classes={classes}>\r\n\t\t\t\t\t\t\t<AddressInfoTab />\r\n\t\t\t\t\t\t</TabContainer>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nWalletTabContent.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction TabContainer(props) {\r\n\treturn (\r\n\t\t<Typography component=\"div\" className={props.classes.tabContainer}>\r\n\t\t\t{props.children}\r\n\t\t</Typography>\r\n\t);\r\n}\r\nTabContainer.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = {\r\n\troot: { textAlign: 'center' },\r\n\ttabContainer: {\r\n\t\tpaddingLeft: 55,\r\n\t\tpaddingRight: 55,\r\n\t\tpaddingTop: 18,\r\n\t\tpaddingBottom: 10,\r\n\t},\r\n};\r\n\r\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\r\nexport default enhancer(WalletTabContent);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport _isNil from 'lodash/isNil';\r\nimport Sidebar from './Sidebar.js';\r\nimport WalletTabContent from './WalletTabContent.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withWalletContext } from '../context/WalletContext';\r\n\r\nclass WalletManager extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.walletController.updateBalances();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\twalletController: { getActiveAddress, activeAddressIndex_o },\r\n\t\t} = this.props;\r\n\r\n\t\tconst activeAddress = getActiveAddress();\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{!_isNil(activeAddress) && (\r\n\t\t\t\t\t<Grid container spacing={24} item xs={12}>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Sidebar />\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t\t\t<WalletTabContent\r\n\t\t\t\t\t\t\t\t\ttype={activeAddressIndex_o.type}\r\n\t\t\t\t\t\t\t\t\tactiveAddress={activeAddress}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nWalletManager.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\r\nexport default enhancer(WalletManager);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withWalletContext } from '../context/WalletContext';\r\nimport { withNetwork } from '../context/NetworkContext';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AddWalletStepper from './AddWalletStepper';\r\n\r\nclass AddInitialWallet extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.setReadyToManageWallet(false);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tnetworkController: { networkProps },\r\n\t\t} = this.props;\r\n\r\n\t\tconst handleCloseText =\r\n\t\t\tnetworkProps.network === 'testnet'\r\n\t\t\t\t? 'Manage Testnet Wallet'\r\n\t\t\t\t: 'Manage Wallet';\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={12} justify=\"center\">\r\n\t\t\t\t<AddWalletStepper\r\n\t\t\t\t\thandleClose={() => this.props.setReadyToManageWallet(true)}\r\n\t\t\t\t\thandleCloseText={handleCloseText}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\nAddInitialWallet.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({});\r\n\r\nconst enhancer = _flowRight(\r\n\twithRouter,\r\n\twithNetwork,\r\n\twithWalletContext,\r\n\twithStyles(styles)\r\n);\r\nexport default enhancer(AddInitialWallet);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nlet id = 0;\r\nconst createData = (\r\n\tvoteID,\r\n\tadminID,\r\n\ttitle,\r\n\tstatus,\r\n\tcommitPhase,\r\n\trevealPhase\r\n) => {\r\n\tid += 1;\r\n\treturn { id, voteID, adminID, title, status, commitPhase, revealPhase };\r\n};\r\n\r\nconst rows = [\r\n\tcreateData(\r\n\t\t'e62aeaad853809e0a6901faa7698d305b5927fe9aeffff9fa233f3367629f098',\r\n\t\t'9F86D081884C7D659A2FEAA0C55AD015A3BF4F1B2B0B822CD15D6C15B0F00A08',\r\n\r\n\t\t'Discussion Phase Example',\r\n\t\t'Discussion Phase',\r\n\t\t<span>\r\n\t\t\tStart: 08/22/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 08/30/2018\r\n\t\t</span>,\r\n\t\t<span>\r\n\t\t\tStart: 09/01/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 09/15/2018\r\n\t\t</span>\r\n\t),\r\n\r\n\tcreateData(\r\n\t\t'c12941cbe6be9ae67caa3a34e2298bdf1b2feebe67a7144a40064aef908686b4',\r\n\t\t'60303AE22B998861BCE3B28F33EEC1BE758A213C86C93C076DBE9F558C11C752',\r\n\t\t'Commit Phase Example',\r\n\t\t'Commit Phase',\r\n\t\t<span>\r\n\t\t\tStart: 08/22/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 08/30/2018\r\n\t\t</span>,\r\n\t\t<span>\r\n\t\t\tStart: 09/01/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 09/15/2018\r\n\t\t</span>\r\n\t),\r\n\tcreateData(\r\n\t\t'872963d936f10cfefffae3d478d98730e1c2c731c703af2ea58710dfc5c9f45c',\r\n\t\t'60303AE22B998861BCE3B28F33EEC1BE758A213C86C93C076DBE9F558C11C752',\r\n\r\n\t\t'Reveal Phase Example',\r\n\t\t'Reveal Phase',\r\n\t\t<span>\r\n\t\t\tStart: 08/22/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 08/30/2018\r\n\t\t</span>,\r\n\t\t<span>\r\n\t\t\tStart: 09/01/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 09/15/2018\r\n\t\t</span>\r\n\t),\r\n\tcreateData(\r\n\t\t'71a7fc2f9e956515b2f2d43d6df67d2213fd5fe4cd37e477f8b9d6344120508f',\r\n\t\t'2F110B81263414DFA03211351D7D2D3FFBCB7E1C4D699B3626ED520C6CD9738B',\r\n\r\n\t\t'Completed Example',\r\n\t\t'Completed',\r\n\r\n\t\t<span>\r\n\t\t\tStart: 08/22/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 08/30/2018\r\n\t\t</span>,\r\n\t\t<span>\r\n\t\t\tStart: 09/01/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 09/15/2018\r\n\t\t</span>\r\n\t),\r\n\tcreateData(\r\n\t\t'dc1da9c406f1fa6a382840c1e268e25f083e66897dc8645aa337e2fc2e6f5424',\r\n\t\t'DB90FFB7EAFF3C3DF027777F4B2C0D426000FDCBAA7097712408E1DBD955067A',\r\n\t\t'Invalidated Example',\r\n\t\t'Invalidated',\r\n\t\t<span>\r\n\t\t\tStart: 08/22/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 08/30/2018\r\n\t\t</span>,\r\n\t\t<span>\r\n\t\t\tStart: 09/01/2018\r\n\t\t\t<br />\r\n\t\t\tEnd: 09/15/2018\r\n\t\t</span>\r\n\t),\r\n];\r\n\r\nclass VoteTable extends React.Component {\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst expanded = this.props.expanded;\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Grid item xs={12} className={classes.tableWrapper}>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<th className={classes.expandColumn}>\r\n\t\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t\t<ExpandLess\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Collapse\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Collapse Row\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.expandIcon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<ExpandMore\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Expand\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Expand Row\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.expandIcon}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`${classes.titleColumn} ${classes.columnHeader}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tTitle\r\n\t\t\t\t\t\t\t\t\t{expanded && (\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`${classes.statusColumn} ${classes.columnHeader}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tStatus\r\n\t\t\t\t\t\t\t\t\t{expanded && (\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option defaultValue value=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Discussion Phase</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Commit Phase</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Reveal Phase</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Complete</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Invalidated</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`${classes.dateColumn} ${classes.columnHeader}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCommit Phase\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={`${classes.dateColumn} ${classes.columnHeader}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tReveal Phase\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.pollChainIDColumn} ${\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPoll Chain ID\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.shortPollChainIDColumn} ${\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPoll Chain ID\r\n\t\t\t\t\t\t\t\t\t\t{/* <br />\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" /> */}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.adminIDColumn} ${\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPoll Admin ID\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.shortAdminIDColumn} ${\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPoll Admin ID\r\n\t\t\t\t\t\t\t\t\t\t{/* <br />\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" /> */}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{rows.map((row) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<TableRow key={row.id} hover={true}>\r\n\t\t\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.titleColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={'/viewVote?id=' + row.voteID}>{row.title}</Link>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.statusColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t{row.status}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.dateColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ width: '104px' }}>{row.commitPhase}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.dateColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ width: '104px' }}>{row.revealPhase}</div>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.pollChainIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.voteID}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.shortPollChainIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.voteID}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t{expanded ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.adminIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.adminID}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.shortAdminIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.adminID}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\tcomponent={Grid}\r\n\t\t\t\t\t\tonChangePage={() => {}}\r\n\t\t\t\t\t\tcount={rows.length}\r\n\t\t\t\t\t\trowsPerPage={25}\r\n\t\t\t\t\t\tpage={0}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nVoteTable.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\ttableWrapper: {\r\n\t\t//width: '100%',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\ttable: {\r\n\t\t//minWidth: 750,\r\n\t},\r\n\ttitleColumn: {\r\n\t\tminWidth: '252',\r\n\t\tpaddingRight: '1px',\r\n\t},\r\n\tadminIDColumn: {\r\n\t\tpaddingRight: '0px',\r\n\t},\r\n\tshortAdminIDColumn: {\r\n\t\tmaxWidth: '207px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t\tpaddingRight: '0px',\r\n\t},\r\n\tshortPollChainIDColumn: {\r\n\t\tmaxWidth: '207px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t\tpaddingRight: '0px',\r\n\t},\r\n\tpollChainIDColumn: {\r\n\t\tpaddingRight: '0px',\r\n\t},\r\n\tstatusColumn: {\r\n\t\tmaxWidth: '165px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t},\r\n\tdateColumn: {\r\n\t\tmaxWidth: '129px',\r\n\t\tpaddingRight: '1px',\r\n\t},\r\n\texpandIcon: {\r\n\t\tmargin: '-5px',\r\n\t},\r\n\texpandColumn: {\r\n\t\tmaxWidth: '3px',\r\n\t},\r\n\tfooterPagination: {\r\n\t\tmaxWidth: '345px',\r\n\t},\r\n\tcolumnHeader: {\r\n\t\tfontSize: '13px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(VoteTable);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport VotesTable from './VoteTable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass VoteListing extends Component {\r\n\tstate = { expanded: false };\r\n\r\n\ttoggleExpand = () => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\texpanded: !prevState.expanded,\r\n\t\t}));\r\n\t};\r\n\r\n\thandleExpand = () => {\r\n\t\tthis.setState({\r\n\t\t\texpanded: true,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.body}>\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<Grid container direction=\"row\">\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.topFilters}>\r\n\t\t\t\t\t\t\t<Typography style={{ textAlign: 'left' }}>\r\n\t\t\t\t\t\t\t\tVoter ID: <input type=\"text\" />\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography style={{ textAlign: 'left' }}>\r\n\t\t\t\t\t\t\t\tProtocol Polls Only:\r\n\t\t\t\t\t\t\t\t<Switch defaultChecked value=\"checkedF\" color=\"primary\" />\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\t\t\t\tWelcome to Factom's On-Chain Voting\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={2} />\r\n\t\t\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t\t\t<Grid style={{ paddingTop: '20px' }} item xs={2}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={this.handleExpand}\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<FilterList /> Filter\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<VotesTable\r\n\t\t\t\t\t\texpanded={this.state.expanded}\r\n\t\t\t\t\t\ttoggleExpand={this.toggleExpand}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nVoteListing.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tbody: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: '0 auto',\r\n\t\tmarginTop: '20px',\r\n\t},\r\n\tform: {\r\n\t\ttextAlign: 'left',\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: '15px',\r\n\t},\r\n\ttopFilters: {\r\n\t\ttop: '14px',\r\n\t\tposition: 'relative',\r\n\t\tleft: '8px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(VoteListing);\r\n","export const BINARY_CONFIG = { name: 'Binary Voting', type: 0, numOptions: 1 };\r\nexport const SINGLE_OPTION_CONFIG = {\r\n\tname: 'Single Option Voting',\r\n\ttype: 1,\r\n\tnumOptions: 1,\r\n};\r\nexport const APPROVAL_CONFIG = { name: 'Approval Voting', type: 1 };\r\nexport const INSTANT_RUNOFF_CONFIG = {\r\n\tname: 'Instant Runoff Voting',\r\n\ttype: 2,\r\n};\r\n\r\nexport const ALL_ELIGIBLE_VOTERS = 'All Eligible Voters';\r\nexport const PARTICIPANTS_ONLY = 'Participants Only';\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Info from '@material-ui/icons/InfoOutlined';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LabelImportant from '@material-ui/icons/LabelImportant';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport get from 'lodash/get';\r\nimport SectionHeader from '../shared/SectionHeader';\r\n\r\nimport {\r\n\tAPPROVAL_CONFIG,\r\n\tINSTANT_RUNOFF_CONFIG,\r\n} from '../create/VOTE_CONSTANTS';\r\n\r\n//duplicates\r\nconst titlePath = 'pollJSON.proposal.title';\r\nconst commitStartPath = 'pollJSON.vote.phasesBlockHeights.commitStart';\r\nconst commitEndPath = 'pollJSON.vote.phasesBlockHeights.commitEnd';\r\nconst revealStartPath = 'pollJSON.vote.phasesBlockHeights.revealStart';\r\nconst revealEndPath = 'pollJSON.vote.phasesBlockHeights.revealEnd';\r\nconst hrefPath = 'pollJSON.proposal.externalRef.href';\r\nconst textPath = 'pollJSON.proposal.text';\r\nconst optionsPath = 'pollJSON.vote.config.options';\r\nconst voteTypePath = 'pollJSON.vote.type';\r\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\r\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\r\n\r\nconst weightedMinTurnoutPath =\r\n\t'pollJSON.vote.config.acceptanceCriteria.weightedMinTurnout';\r\nconst unweightedMinTurnoutPath =\r\n\t'pollJSON.vote.config.acceptanceCriteria.unweightedMinTurnout';\r\nconst weightedMinSupportPath =\r\n\t'pollJSON.vote.config.acceptanceCriteria.weightedMinSupport';\r\nconst unweightedMinSupportPath =\r\n\t'pollJSON.vote.config.acceptanceCriteria.unweightedMinSupport';\r\n\r\n//unique so far\r\nconst hashValuePath = 'pollJSON.proposal.externalRef.hash.value';\r\nconst hashAlgoPath = 'pollJSON.proposal.externalRef.hash.algo';\r\nconst protocolVersionPath = 'formFields.protocolVersion';\r\nconst pollAdminIDPath = 'formFields.pollAdminID';\r\nconst pollChainIDPath = 'formFields.pollChainID';\r\nconst voteTypes = [\r\n\t'Single Option Voting',\r\n\t'Approval Voting',\r\n\t'Instant Run-Off Voting',\r\n];\r\n\r\nclass VoteSummary extends React.Component {\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst poll = this.props.poll;\r\n\r\n\t\tconst hasMinTurnoutCritiera =\r\n\t\t\tget(poll, weightedMinTurnoutPath) || get(poll, unweightedMinTurnoutPath);\r\n\r\n\t\tconst hasMinSupportCriteria =\r\n\t\t\tget(poll, weightedMinSupportPath) || get(poll, unweightedMinSupportPath);\r\n\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<SectionHeader text=\"Configuration\" />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item container xs={12}>\r\n\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t<Typography gutterBottom>Title:</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t<Typography>{get(poll, titlePath)}</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t<Typography gutterBottom>Commit Start Block:</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t{get(poll, commitStartPath)}\r\n\r\n\t\t\t\t\t\t\t{/*{new Date(get(poll, commitStartPath)).toLocaleDateString()}*/}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t<Typography gutterBottom>Commit End Block:</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t<Typography>{get(poll, commitEndPath)}</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t<Typography gutterBottom>Reveal Start Block:</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t<Typography>{get(poll, revealStartPath)}</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t<Typography gutterBottom>Reveal End Block:</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t<Typography>{get(poll, revealEndPath)}</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{get(poll, pollChainIDPath) && (\r\n\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>Poll Chain ID:</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t{get(poll, pollChainIDPath)}\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t'https://explorer.factom.com/eblocks/0e5570917c25c6b35dbf67c802958d802e43fd9f48dd0c35a01feec1235de267'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{get(poll, pollAdminIDPath) && (\r\n\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>Poll Admin ID:</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t{get(poll, pollAdminIDPath)}\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t\t'https://explorer.factom.com/eblocks/0e5570917c25c6b35dbf67c802958d802e43fd9f48dd0c35a01feec1235de267'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{get(poll, protocolVersionPath) && (\r\n\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>Protocol Version:</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<Typography>{get(poll, protocolVersionPath)}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<SectionHeader text=\"Question\" />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{get(poll, hrefPath) && (\r\n\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>URL Link:</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<a href={get(poll, hrefPath)}>\r\n\t\t\t\t\t\t\t\t<Typography>{get(poll, hrefPath)}</Typography>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\tProposal Hash:&nbsp;\r\n\t\t\t\t\t\t\t\t<Tooltip title={'Hash Type: ' + get(poll, hashAlgoPath)}>\r\n\t\t\t\t\t\t\t\t\t<Info style={{ fontSize: '15px' }} />\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<Typography>{get(poll, hashValuePath)}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{get(poll, textPath) && (\r\n\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>Question:</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<Typography>{get(poll, textPath)}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<SectionHeader text=\"Answers\" />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={2} className={classes.smallGridColumn}>\r\n\t\t\t\t\t<Typography gutterBottom>Type:</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t<Typography>{voteTypes[get(poll, voteTypePath)]}</Typography>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t<Typography gutterBottom>Allow Abstain:</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t<input defaultChecked type=\"checkbox\" />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/**\r\n\t\t\t\t *Fix\r\n\t\t\t\t */}\r\n\t\t\t\t{(get(poll, voteTypePath) === APPROVAL_CONFIG.type ||\r\n\t\t\t\t\tget(poll, voteTypePath) === INSTANT_RUNOFF_CONFIG.type) && (\r\n\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\tMinimum Options Allowed:&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t{get(poll, minOptionsPath)}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\tMaximum Options Allowed:&nbsp;\r\n\t\t\t\t\t\t\t\t{get(poll, maxOptionsPath)}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t{get(poll, voteTypePath) && (\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper elevation={1} className={classes.pad}>\r\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Options</Typography>\r\n\t\t\t\t\t\t\t<List dense>\r\n\t\t\t\t\t\t\t\t{get(poll, optionsPath) &&\r\n\t\t\t\t\t\t\t\t\tget(poll, optionsPath).map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\tdivider={index < get(poll, optionsPath).length - 1}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<LabelImportant style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={option} />\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<SectionHeader text=\"Acceptance Criteria\" />\r\n\t\t\t\t\t{hasMinTurnoutCritiera || hasMinSupportCriteria ? (\r\n\t\t\t\t\t\t<List dense>\r\n\t\t\t\t\t\t\t{hasMinTurnoutCritiera && (\r\n\t\t\t\t\t\t\t\t<ListItem divider>\r\n\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={hasMinTurnoutCritiera}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Turnout\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{get(poll, weightedMinTurnoutPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!get(poll, unweightedMinTurnoutPath) && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWeighted Ratio:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{get(poll, weightedMinTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{get(poll, unweightedMinTurnoutPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!get(poll, weightedMinTurnoutPath) && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnweighted Ratio:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{get(poll, unweightedMinTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{hasMinSupportCriteria && (\r\n\t\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={hasMinSupportCriteria}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Support\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{get(poll, weightedMinSupportPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!get(poll, unweightedMinSupportPath) && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWeighted Ratio:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{get(poll, weightedMinSupportPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{get(poll, unweightedMinSupportPath) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!get(poll, weightedMinSupportPath) && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnweighted Ratio:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{get(poll, unweightedMinSupportPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography>None</Typography>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nVoteSummary.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: 15,\r\n\t},\r\n\tsmallGridColumn: {\r\n\t\tflexBasis: '19%',\r\n\t},\r\n\toptionList: {\r\n\t\twidth: '350px',\r\n\t\toverflow: 'auto',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(VoteSummary);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport green from '@material-ui/core/colors/green';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Fingerprint from '@material-ui/icons/Fingerprint';\r\n\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\twrapper: {\r\n\t\tmargin: theme.spacing.unit,\r\n\t\tposition: 'relative',\r\n\t},\r\n\tbuttonSuccess: {\r\n\t\tbackgroundColor: green[500],\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: green[700],\r\n\t\t},\r\n\t},\r\n\tfabProgress: {\r\n\t\tcolor: green[500],\r\n\t\tposition: 'absolute',\r\n\t\ttop: -6,\r\n\t\tleft: -6,\r\n\t\tzIndex: 1,\r\n\t},\r\n\tbuttonProgress: {\r\n\t\tcolor: green[500],\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tmarginTop: -12,\r\n\t\tmarginLeft: -12,\r\n\t},\r\n});\r\n\r\nclass SignVote extends React.Component {\r\n\ttimer = null;\r\n\r\n\tstate = {\r\n\t\tloading: false,\r\n\t\tsuccess: false,\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearTimeout(this.timer);\r\n\t}\r\n\r\n\thandleButtonClick = () => {\r\n\t\tif (!this.state.loading) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t\tloading: true,\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { loading, success } = this.state;\r\n\t\tconst { classes } = this.props;\r\n\t\tconst buttonClassname = classNames({\r\n\t\t\t[classes.buttonSuccess]: success,\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"fab\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tclassName={buttonClassname}\r\n\t\t\t\t\t\tonClick={this.handleButtonClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{success ? <CheckIcon /> : <Fingerprint />}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{loading && (\r\n\t\t\t\t\t\t<CircularProgress size={68} className={classes.fabProgress} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tclassName={buttonClassname}\r\n\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\tonClick={this.handleButtonClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{success ? 'Verified' : 'Verify Signature'}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{loading && (\r\n\t\t\t\t\t\t<CircularProgress size={24} className={classes.buttonProgress} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSignVote.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignVote);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Done from '@material-ui/icons/Done';\r\nimport Close from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport QS from 'qs';\r\nimport ArrowForward from '@material-ui/icons/ArrowForward';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport VoteSummary from '../shared/VoteSummary';\r\nimport SignVote from '../shared/SignVote';\r\nimport SectionHeader from '../shared/SectionHeader';\r\n//import OpenInNew from '@material-ui/icons/OpenInNew';\r\n//import { Link } from 'react-router-dom';\r\n\r\nlet id = 0;\r\nconst createVoterData = (voterID, commit, reveal, role, vote) => {\r\n\tid += 1;\r\n\treturn { id, voterID, commit, reveal, role, vote };\r\n};\r\n\r\nconst voterRows = [\r\n\tcreateVoterData(\r\n\t\t'Factom Inc',\r\n\t\ttrue,\r\n\t\tnull,\r\n\t\t<div>\r\n\t\t\tGuide\r\n\t\t\t<br />\r\n\t\t\tANO\r\n\t\t</div>,\r\n\t\tnull\r\n\t),\r\n\tcreateVoterData('LUCIAP', true, null, 'ANO', null),\r\n\tcreateVoterData(\r\n\t\t'60303AE22B998861BCE3B28F33EEC1BE758A213C86C93C076DBE9F558C11C752',\r\n\t\ttrue,\r\n\t\tnull,\r\n\t\t'',\r\n\t\tnull\r\n\t),\r\n\tcreateVoterData('The 42nd Factoid', '', null, 'Guide', false),\r\n\tcreateVoterData(\r\n\t\t'872963d936f10cfefffae3d478d98730e1c2c731c703af2ea58710dfc5c9f45c',\r\n\t\ttrue,\r\n\t\tnull,\r\n\t\t'',\r\n\t\tnull\r\n\t),\r\n];\r\n\r\nclass ViewVote extends React.Component {\r\n\tstate = {\r\n\t\ttabValue: 0,\r\n\t\tpoll: {\r\n\t\t\tpollJSON: {\r\n\t\t\t\tproposal: {\r\n\t\t\t\t\ttitle: 'This Is The Title',\r\n\t\t\t\t\ttext: '',\r\n\t\t\t\t\texternalRef: {\r\n\t\t\t\t\t\thref:\r\n\t\t\t\t\t\t\t'https://raw.githubusercontent.com/JacobEberhardt/ZoKrates/aa7e11/README.md',\r\n\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\t\t'F30A765AD6C5777E82EB2B64CFA53CDBB08D435546DD351880C13691867290B4',\r\n\t\t\t\t\t\t\talgo: 'SHA-256',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tvote: {\r\n\t\t\t\t\tphasesBlockHeights: {\r\n\t\t\t\t\t\tcommitStart: '158883',\r\n\t\t\t\t\t\tcommitEnd: '158884',\r\n\t\t\t\t\t\trevealStart: '158885',\r\n\t\t\t\t\t\trevealEnd: '158886',\r\n\t\t\t\t\t},\r\n\t\t\t\t\teligibleVotersChainId: '',\r\n\t\t\t\t\ttype: '0',\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\toptions: ['Yes', 'No', 'Abstain'],\r\n\t\t\t\t\t\tallowAbstention: '',\r\n\t\t\t\t\t\tcomputeResultsAgainst: '',\r\n\t\t\t\t\t\tminOptions: '',\r\n\t\t\t\t\t\tmaxOptions: '',\r\n\t\t\t\t\t\tacceptanceCriteria: {\r\n\t\t\t\t\t\t\tminSupport: {},\r\n\t\t\t\t\t\t\tminTurnout: {},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tformFields: {\r\n\t\t\t\tprotocolVersion: 'v0.1',\r\n\t\t\t\tpollAdminID:\r\n\t\t\t\t\t'888888655866a003faabd999c7b0a7c908af17d63fd2ac2951dc99e1ad2a14f4',\r\n\t\t\t\tpollChainID: QS.parse(this.props.location.search)['?id'],\r\n\t\t\t},\r\n\t\t},\r\n\t\texpand: false,\r\n\t};\r\n\r\n\ttoggleExpand = () => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\texpand: !prevState.expand,\r\n\t\t}));\r\n\t};\r\n\r\n\thandleTabChange = (event, value) => {\r\n\t\tthis.setState({ tabValue: value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Grid container spacing={24}>\r\n\t\t\t\t<Grid item xs={2} />\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t<Paper className={classes.pad}>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Typography align=\"center\" gutterBottom variant=\"h6\">\r\n\t\t\t\t\t\t\t\t\tPoll: {this.state.poll.pollJSON.proposal.title}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline', fontWeight: 500 }}\r\n\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tStatus:&nbsp;\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\t\t\t\t\tCommit Phase\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.tabValue}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleTabChange}\r\n\t\t\t\t\t\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"View Details\" />\r\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"View Voters\" />\r\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"Cast Vote\" />\r\n\t\t\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t\t\t\t{this.state.tabValue === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t\t\t<VoteSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.pad}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpoll={this.state.poll}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{this.state.tabValue === 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <Link\r\n\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'/manageVoters?voterChainID=df3ade9eec4b08d5379cc64270c30ea7315d8a8a1a69efe2b98a60ecdd69e604'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"small\" variant=\"outlined\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tManage Eligible Voters&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.tableWrapper}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className={classes.expandColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.expand ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ArrowBack\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Collapse\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ArrowForward\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.toggleExpand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Expand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.expand ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>Voter ID</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.chainIDColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoter ID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>Commit</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>Reveal</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>Vote</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>Role</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{voterRows.map((row) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={row.voterID}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.expand ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{row.voterID}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chainIDColumn}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.voterID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Boolean(row.commit) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow.voterID !== 127867674886783419 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Done color=\"primary\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Boolean(row.reveal) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow.voterID !== 127867674886783419 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Done color=\"primary\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.voterID === 127867674886783419 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Close color=\"secondary\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Boolean(row.vote) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow.voterID !== 127867674886783419 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>{row.vote}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>{row.vote}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.voterID === 127867674886783419 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Close color=\"secondary\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{row.role}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{this.state.tabValue === 2 && (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Question\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={2} className={classes.smallGridColumn}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>URL Link:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"https://raw.githubusercontent.com/JacobEberhardt/ZoKrates/aa7e11/README.md\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thttps://raw.githubusercontent.com/JacobEberhardt/ZoKrates/aa7e11/README.md\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Answer\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option selected disabled hidden>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tChoose an Answer\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Yes</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option>No</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Abstain</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Sign Transaction\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid xs={2} item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>Voter ID:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid xs={10} item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid xs={2} item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>Signature:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid xs={10} item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"password\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid xs={2} item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>EC Private Key:</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid xs={10} item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"password\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SignVote />\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSubmit Vote\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={2} />\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nViewVote.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: 15,\r\n\t},\r\n\ttableWrapper: {\r\n\t\t//width: '100%',\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\tsmallGridColumn: {\r\n\t\tflexBasis: '19%',\r\n\t},\r\n\texpandColumn: {\r\n\t\tmaxWidth: '3px',\r\n\t},\r\n\tchainIDColumn: {\r\n\t\tmaxWidth: '265px',\r\n\t\toverflow: 'hidden',\r\n\t\ttextOverflow: 'ellipsis',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(ViewVote);\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Field, Form, FieldArray } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport Person from '@material-ui/icons/Person';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport get from 'lodash/get';\r\nimport SectionHeader from '../shared/SectionHeader';\r\n\r\nconst selectedListPath = 'formFields.selectedList';\r\nconst workingVoterIDPath = 'formFields.workingVoterID';\r\nconst workingWeightPath = 'formFields.workingWeight';\r\nconst participantsPath = 'participantsJSON';\r\n\r\nclass SelectParticipants extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { eligibleVotersForm, classes, updateParticipants } = this.props;\r\n\t\t/* const standingParties = this.state.standingParties.map((voter) => (\r\n\t\t\t<ListItem key={voter.name} divider>\r\n\t\t\t\t<Person />\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tprimary={voter.name}\r\n\t\t\t\t\tsecondary={'Weight: ' + voter.weight}\r\n\t\t\t\t/>\r\n\t\t\t\t<Typography variant=\"caption\">{voter.role}</Typography>\r\n\t\t\t</ListItem>\r\n\t\t)); */\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={eligibleVotersForm}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tupdateParticipants(values);\r\n\t\t\t\t\tthis.props.handleNext();\r\n\r\n\t\t\t\t\t//setTimeout(() => {\r\n\t\t\t\t\t//\talert(JSON.stringify(values, null, 2));\r\n\t\t\t\t\t//\tactions.setSubmitting(false);\r\n\t\t\t\t\t//}, 1000);\r\n\t\t\t\t}}\r\n\t\t\t\trender={({ values, handleChange, setFieldValue, isSubmitting }) => (\r\n\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t{/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n\t\t\t\t\t\t\t<SectionHeader text=\"Select Voters\" />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t\t\t<FieldArray\r\n\t\t\t\t\t\t\t\t\tname={participantsPath}\r\n\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={selectedListPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={get(values, selectedListPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"standing\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Standing Parties\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"anos\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Authority Node Operators\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"guides\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Guides\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"custom\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Custom List\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{get(values, selectedListPath) === 'custom' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.borders}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Voter\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoter ID:&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field type=\"number\" name={workingVoterIDPath} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWeight:&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field type=\"number\" name={workingWeightPath} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoterID: get(values, workingVoterIDPath),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweight: get(values, workingWeightPath),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingVoterIDPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingWeightPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"Add\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!get(values, workingVoterIDPath) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!get(values, workingWeightPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{get(values, selectedListPath) === 'custom' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.padLoadVoters}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLoad Voters\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFile: <input disabled type=\"file\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoter Chain ID: <input disabled type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAuthority Nodes:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input disabled type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGuides: <input disabled type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button disabled>Load</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{get(values, selectedListPath) === 'custom' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\televation={10}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.listContainer}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEligible Voter List\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<List className={classes.list} dense>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{get(values, participantsPath).length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tget(values, participantsPath).map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(voter, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Person />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprimary={'Voter ID: ' + voter.voterID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsecondary={'Weight: ' + voter.weight}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.remove(index);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Clear\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Clear />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem disableGutters divider>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprimary={'No Voters have been added'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{get(values, selectedListPath) === 'standing' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* \t<Paper elevation={10} className={classes.listContainer}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\t\tStanding Party List\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\r\n\t\t\t\t\t\t\t\t\t<List className={classes.list} dense>\r\n\t\t\t\t\t\t\t\t\t\t{standingParties}\r\n\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t</Paper> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.stepperButtons}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button disabled onClick={this.props.handleBack}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSelectParticipants.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: '15px',\r\n\t},\r\n\tlist: {\r\n\t\toverflow: 'auto',\r\n\t\theight: 350,\r\n\t},\r\n\tborders: {\r\n\t\tborderRightStyle: 'solid',\r\n\t\tborderRightColor: 'lightgray',\r\n\t\tborderRightWidth: '1px',\r\n\t\tborderLeftStyle: 'solid',\r\n\t\tborderLeftColor: 'lightgray',\r\n\t\tborderLeftWidth: '1px',\r\n\t\tpadding: '10px',\r\n\t},\r\n\tpadLoadVoters: {\r\n\t\tpadding: '10px',\r\n\t},\r\n\tlistContainer: {\r\n\t\tmarginTop: '10px',\r\n\t\tpadding: '15px',\r\n\t},\r\n\tstepperButtons: {\r\n\t\tmarginLeft: '-15px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(SelectParticipants);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SignVote from '../shared/SignVote';\r\nimport VoteSummary from '../shared/VoteSummary';\r\nimport Button from '@material-ui/core/Button';\r\nimport SectionHeader from '../shared/SectionHeader';\r\n\r\nfunction PreviewVote(props) {\r\n\tconst { classes } = props;\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.pad}>\r\n\t\t\t<VoteSummary poll={props.poll} />\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<SectionHeader text=\"Sign Transaction\" />\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Grid xs={2} item>\r\n\t\t\t\t<Typography gutterBottom>Poll Admin ID:</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid xs={10} item>\r\n\t\t\t\t<input type=\"text\" />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid xs={2} item>\r\n\t\t\t\t<Typography gutterBottom>Signature:</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid xs={10} item>\r\n\t\t\t\t<input type=\"password\" />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid xs={2} item>\r\n\t\t\t\t<Typography gutterBottom>EC Private Key:</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid xs={10} item>\r\n\t\t\t\t<input type=\"password\" />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<SignVote />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} className={classes.stepperButtons}>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button onClick={props.handleBack}>Back</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={props.handleNext}>\r\n\t\t\t\t\tSubmit Poll\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nPreviewVote.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: 15,\r\n\t},\r\n\tsmallGridColumn: {\r\n\t\tflexBasis: '19%',\r\n\t},\r\n\toptionList: {\r\n\t\twidth: '350px',\r\n\t\toverflow: 'auto',\r\n\t},\r\n\tstepperButtons: {\r\n\t\tmarginLeft: '-15px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(PreviewVote);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport SectionHeader from '../shared/SectionHeader';\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: '15px',\r\n\t},\r\n});\r\n\r\nfunction FinalStep(props) {\r\n\tconst { classes } = props;\r\n\r\n\treturn (\r\n\t\t<Grid className={classes.pad} container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<SectionHeader text=\"Setup Complete!\" />\r\n\r\n\t\t\t\t<Typography gutterBottom>\r\n\t\t\t\t\tYou're poll is pending confirmation on the Factom blockchain.&nbsp;\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\t'/viewVote?id=e62aeaad853809e0a6901faa7698d305b5927fe9aeffff9fa233f3367629f098'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button variant=\"outlined\">\r\n\t\t\t\t\t\t\tView Poll\r\n\t\t\t\t\t\t\t<OpenInNew />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Typography style={{ display: 'inline', fontWeight: 500 }} gutterBottom>\r\n\t\t\t\t\tVoter Chain ID:&nbsp;\r\n\t\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\t\tdf3ade9eec4b08d5379cc64270c30ea7315d8a8a1a69efe2b98a60ecdd69e604&nbsp;\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t'https://explorer.factom.com/eblocks/0e5570917c25c6b35dbf67c802958d802e43fd9f48dd0c35a01feec1235de267'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<br />\r\n\t\t\t\t<Typography style={{ display: 'inline', fontWeight: 500 }} gutterBottom>\r\n\t\t\t\t\tPoll Chain ID:&nbsp;\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography style={{ display: 'inline' }}>\r\n\t\t\t\t\te5783ef44313a678d489b6917ef96d971156615ae71a671fdf638af403146ab7&nbsp;\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t'https://explorer.factom.com/eblocks/0e5570917c25c6b35dbf67c802958d802e43fd9f48dd0c35a01feec1235de267'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nFinalStep.propTypes = {\r\n\tclasses: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(FinalStep);\r\n","import React from 'react';\r\n\r\nexport default class CreateVoteController extends React.Component {\r\n\tstate = {\r\n\t\tpollForm: {\r\n\t\t\tpollJSON: {\r\n\t\t\t\tproposal: {\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\ttext: '',\r\n\t\t\t\t\texternalRef: {\r\n\t\t\t\t\t\thref: '',\r\n\t\t\t\t\t\thash: {\r\n\t\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\t\talgo: '',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tvote: {\r\n\t\t\t\t\tphasesBlockHeights: {\r\n\t\t\t\t\t\tcommitStart: '',\r\n\t\t\t\t\t\tcommitEnd: '',\r\n\t\t\t\t\t\trevealStart: '',\r\n\t\t\t\t\t\trevealEnd: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t\teligibleVotersChainId: '',\r\n\t\t\t\t\ttype: '',\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\toptions: [],\r\n\t\t\t\t\t\tallowAbstention: '',\r\n\t\t\t\t\t\tcomputeResultsAgainst: '',\r\n\t\t\t\t\t\tminOptions: '',\r\n\t\t\t\t\t\tmaxOptions: '',\r\n\t\t\t\t\t\twinnerCriteria: {},\r\n\t\t\t\t\t\tacceptanceCriteria: {},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tformFields: {\r\n\t\t\t\tvoteTypeText: '',\r\n\t\t\t\tquestionSource: 'text',\r\n\t\t\t\tworkingHref: '',\r\n\t\t\t\tworkingOption: '',\r\n\t\t\t\tcheckedTurnout: false,\r\n\t\t\t\tcheckedSupport: false,\r\n\t\t\t\tworkingWeightMinTurnout: '',\r\n\t\t\t\tworkingUnweightMinTurnout: '',\r\n\t\t\t\tworkingWeightMinSupport: '',\r\n\t\t\t\tworkingUnweightMinSupport: '',\r\n\t\t\t\tworkingMinSupportOption: '',\r\n\t\t\t},\r\n\t\t},\r\n\t\teligibleVotersForm: {\r\n\t\t\tparticipantsJSON: [],\r\n\t\t\tformFields: {\r\n\t\t\t\tselectedList: 'standing',\r\n\t\t\t\tworkingVoterID: '',\r\n\t\t\t\tworkingWeight: '',\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\tupdatePoll = (form) => {\r\n\t\tthis.setState({ pollForm: form });\r\n\t};\r\n\r\n\tupdateParticipants = (form) => {\r\n\t\tthis.setState({ eligibleVotersForm: form });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn this.props.children({\r\n\t\t\t...this.state,\r\n\t\t\tupdatePoll: this.updatePoll,\r\n\t\t\tupdateParticipants: this.updateParticipants,\r\n\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport _get from 'lodash/get';\r\nimport _omit from 'lodash/omit';\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n\tFormik,\r\n\tField,\r\n\tFastField,\r\n\tForm,\r\n\tFieldArray,\r\n\tErrorMessage,\r\n} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport LabelImportant from '@material-ui/icons/LabelImportant';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport Button from '@material-ui/core/Button';\r\nimport SectionHeader from '../shared/SectionHeader';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n//import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport {\r\n\tBINARY_CONFIG,\r\n\tSINGLE_OPTION_CONFIG,\r\n\tAPPROVAL_CONFIG,\r\n\tINSTANT_RUNOFF_CONFIG,\r\n\tALL_ELIGIBLE_VOTERS,\r\n\tPARTICIPANTS_ONLY,\r\n} from './VOTE_CONSTANTS';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst VOTE_TYPE_VALUES = [\r\n\t{ value: BINARY_CONFIG.name, text: BINARY_CONFIG.name },\r\n\t{ value: SINGLE_OPTION_CONFIG.name, text: SINGLE_OPTION_CONFIG.name },\r\n\t{ value: APPROVAL_CONFIG.name, text: APPROVAL_CONFIG.name },\r\n\t{ value: INSTANT_RUNOFF_CONFIG.name, text: INSTANT_RUNOFF_CONFIG.name },\r\n];\r\n\r\nconst COMPUTE_AGAINST_VALUES = [\r\n\t{ value: ALL_ELIGIBLE_VOTERS, text: ALL_ELIGIBLE_VOTERS },\r\n\t{ value: PARTICIPANTS_ONLY, text: PARTICIPANTS_ONLY },\r\n];\r\n\r\nconst ABSTENTION_VALUES = [\r\n\t{ value: true, text: 'True' },\r\n\t{ value: false, text: 'False' },\r\n];\r\n\r\nconst TITLE_MAX_LENGTH = 32;\r\n\r\n// poll config fields\r\nconst titlePath = 'pollJSON.proposal.title';\r\nconst commitStartPath = 'pollJSON.vote.phasesBlockHeights.commitStart';\r\nconst commitEndPath = 'pollJSON.vote.phasesBlockHeights.commitEnd';\r\nconst revealStartPath = 'pollJSON.vote.phasesBlockHeights.revealStart';\r\nconst revealEndPath = 'pollJSON.vote.phasesBlockHeights.revealEnd';\r\nconst proposalPath = 'pollJSON.proposal';\r\nconst externalRefPath = 'pollJSON.proposal.externalRef';\r\nconst textPath = 'pollJSON.proposal.text';\r\nconst voteTypePath = 'pollJSON.vote.type';\r\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\r\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\r\nconst configPath = 'pollJSON.vote.config';\r\nconst optionsPath = 'pollJSON.vote.config.options';\r\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\r\nconst computeResultsAgainstPath = 'pollJSON.vote.config.computeResultsAgainst';\r\nconst acceptanceCriteriaPath = 'pollJSON.vote.config.acceptanceCriteria';\r\nconst winnerCriteriaPath = 'pollJSON.vote.config.winnerCriteria';\r\n//const minSupportPath = 'pollJSON.vote.config.winnerCriteria.minSupport';\r\n\r\n// form specific fields\r\nconst voteTypeTextPath = 'formFields.voteTypeText';\r\nconst questionSourcePath = 'formFields.questionSource';\r\nconst workingOptionPath = 'formFields.workingOption';\r\nconst workingHrefPath = 'formFields.workingHref';\r\nconst checkedTurnoutPath = 'formFields.checkedTurnout';\r\nconst workingWeightMinTurnoutPath = 'formFields.workingWeightMinTurnout';\r\nconst workingUnweightMinTurnoutPath = 'formFields.workingUnweightMinTurnout';\r\nconst workingWeightMinSupportPath = 'formFields.workingWeightMinSupport';\r\nconst workingUnweightMinSupportPath = 'formFields.workingUnweightMinSupport';\r\nconst workingMinSupportOption = 'formFields.workingMinSupportOption';\r\n\r\nclass ConfigureVoteForm extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\thandleOptionKeyPress(event) {\r\n\t\tconsole.log('pressed');\r\n\t\tconsole.log(event.target.value);\r\n\t\tif (event.which === 13 /* Enter */ && event.target.value) {\r\n\t\t}\r\n\t}\r\n\r\n\thandleKeyPress(event) {\r\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tcriteriaStyle = (values, path) => {\r\n\t\treturn !_get(values, path) ? 'gray' : '';\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { pollForm, updatePoll, classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={pollForm}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\tpollJSON: Yup.object().shape({\r\n\t\t\t\t\t\tproposal: Yup.object().shape({\r\n\t\t\t\t\t\t\ttitle: Yup.string().required('Required'),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tvote: Yup.object().shape({\r\n\t\t\t\t\t\t\tphasesBlockHeights: Yup.object().shape({\r\n\t\t\t\t\t\t\t\t/* commitStart: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((currentValue, originalValue) => {\r\n\t\t\t\t\t\t\t\t\t\treturn originalValue === '' ? undefined : currentValue;\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.required('Required'),\r\n\t\t\t\t\t\t\t\tcommitEnd: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((currentValue, originalValue) => {\r\n\t\t\t\t\t\t\t\t\t\treturn originalValue === '' ? undefined : currentValue;\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.required('Required'),\r\n\t\t\t\t\t\t\t\trevealStart: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((currentValue, originalValue) => {\r\n\t\t\t\t\t\t\t\t\t\treturn originalValue === '' ? undefined : currentValue;\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.required('Required'),\r\n\t\t\t\t\t\t\t\trevealEnd: Yup.number()\r\n\t\t\t\t\t\t\t\t\t.transform((currentValue, originalValue) => {\r\n\t\t\t\t\t\t\t\t\t\treturn originalValue === '' ? undefined : currentValue;\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.required('Required'), */\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t}),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Handle text vs externalRef\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (_get(values, textPath)) {\r\n\t\t\t\t\t\t// delete href\r\n\t\t\t\t\t\tvalues = _omit(values, externalRefPath);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// delete text\r\n\t\t\t\t\t\tvalues = _omit(values, textPath);\r\n\r\n\t\t\t\t\t\t// add externalRef config\r\n\t\t\t\t\t\t_get(values, proposalPath).externalRef = {\r\n\t\t\t\t\t\t\thref: _get(values, workingHrefPath),\r\n\t\t\t\t\t\t\thash: { value: '', algo: '' },\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Handle Acceptance Citeria\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (_get(values, checkedTurnoutPath)) {\r\n\t\t\t\t\t\t// reset acceptance criteria\r\n\t\t\t\t\t\t_get(values, configPath).acceptanceCriteria = {};\r\n\r\n\t\t\t\t\t\t// set acceptance criteria\r\n\t\t\t\t\t\t_get(values, acceptanceCriteriaPath).minTurnout = {\r\n\t\t\t\t\t\t\tweighted: _get(values, workingWeightMinTurnoutPath),\r\n\t\t\t\t\t\t\tunweighted: _get(values, workingUnweightMinTurnoutPath),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// no acceptance criteria\r\n\t\t\t\t\t\tvalues = _omit(values, acceptanceCriteriaPath);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Handle Winner Citeria\r\n\t\t\t\t\t */\r\n\r\n\t\t\t\t\t// reset winnerCriteria\r\n\t\t\t\t\t_get(values, configPath).winnerCritieria = { minSupport: {} };\r\n\r\n\t\t\t\t\tif (_get(values, voteTypeTextPath) === BINARY_CONFIG.name) {\r\n\t\t\t\t\t\t// add criteria for specific option\r\n\t\t\t\t\t\t_get(values, winnerCriteriaPath).minSupport = {\r\n\t\t\t\t\t\t\t[_get(values, workingMinSupportOption)]: {\r\n\t\t\t\t\t\t\t\tweighted: _get(values, workingWeightMinSupportPath),\r\n\t\t\t\t\t\t\t\tunweighted: _get(values, workingUnweightMinSupportPath),\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// apply criteria to all options\r\n\t\t\t\t\t\t_get(values, winnerCriteriaPath).minSupport = { '*': {} };\r\n\t\t\t\t\t\t_get(values, winnerCriteriaPath).minSupport['*'] = {\r\n\t\t\t\t\t\t\tweighted: _get(values, workingWeightMinSupportPath),\r\n\t\t\t\t\t\t\tunweighted: _get(values, workingUnweightMinSupportPath),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// update Poll\r\n\t\t\t\t\tupdatePoll(values);\r\n\r\n\t\t\t\t\t// proceed to next page\r\n\t\t\t\t\tthis.props.handleNext();\r\n\t\t\t\t}}\r\n\t\t\t\trender={({\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tsetFieldValue,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\r\n\t\t\t\t\t\t<Grid container className={classes.pad}>\r\n\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\tdisableGutterBottom={true}\r\n\t\t\t\t\t\t\t\t\t\ttext=\"Configure Poll\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid container spacing={8} item xs={5}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={titlePath}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Title\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tmaxLength={TITLE_MAX_LENGTH}\r\n\t\t\t\t\t\t\t\t\t\t\tenableSpellCheck={true}\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, titlePath) && _get(touched, titlePath)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\tname={voteTypeTextPath}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Vote Type\"\r\n\t\t\t\t\t\t\t\t\t\t\toptions={VOTE_TYPE_VALUES}\r\n\t\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t//update question type\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t//update dependent fields\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = e.target.value;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t//setFieldValue(optionsPath, []);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingMinSupportOption, '');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (newValue === BINARY_CONFIG.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, BINARY_CONFIG.type);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tminOptionsPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.numOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxOptionsPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.numOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === SINGLE_OPTION_CONFIG.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteTypePath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSINGLE_OPTION_CONFIG.type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tminOptionsPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSINGLE_OPTION_CONFIG.numOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxOptionsPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSINGLE_OPTION_CONFIG.numOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === APPROVAL_CONFIG.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, APPROVAL_CONFIG.type);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(minOptionsPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(maxOptionsPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === INSTANT_RUNOFF_CONFIG.name) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteTypePath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tINSTANT_RUNOFF_CONFIG.type\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(minOptionsPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(maxOptionsPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\tname={computeResultsAgainstPath}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Compute Results Against\"\r\n\t\t\t\t\t\t\t\t\t\t\toptions={COMPUTE_AGAINST_VALUES}\r\n\t\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.value === ALL_ELIGIBLE_VOTERS) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(abstentionPath, false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(abstentionPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\tname={abstentionPath}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Allow Abstention\"\r\n\t\t\t\t\t\t\t\t\t\t\toptions={ABSTENTION_VALUES}\r\n\t\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(values, computeResultsAgainstPath) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\tALL_ELIGIBLE_VOTERS\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={1} />\r\n\t\t\t\t\t\t\t\t<Grid container item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={commitStartPath}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Commit Start Block\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, commitStartPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, commitStartPath)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={commitEndPath}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Commit End Block\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, commitEndPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, commitEndPath)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={revealStartPath}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Reveal Start Block\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, revealStartPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, revealStartPath)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={revealEndPath}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Reveal End Block\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, revealEndPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, revealEndPath)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<SectionHeader disableGutterBottom={true} text=\"Question\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\t\t\t\t\tname={questionSourcePath}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, questionSourcePath)}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.value === 'text') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingHrefPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(textPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Plain Text\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.raiseRadio}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"href\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"External Proposal\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{_get(values, questionSourcePath) === 'text' && (\r\n\t\t\t\t\t\t\t\t\t<Grid item container xs={9}>\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={textPath}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Question\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiline={true}\r\n\t\t\t\t\t\t\t\t\t\t\tenableSpellCheck={true}\r\n\t\t\t\t\t\t\t\t\t\t\terror={_get(errors, textPath) && _get(touched, textPath)}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{_get(values, questionSourcePath) === 'href' && (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={workingHrefPath}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"URL Link\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tenableSpellCheck={true}\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingHrefPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingHrefPath)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid container spacing={8} item xs={12}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<SectionHeader disableGutterBottom={true} text=\"Answers\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Paper elevation={2} className={classes.pad}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container spacing={24}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<List className={classes.optionList} dense>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FieldArray\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={optionsPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tOptions *&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingOptionPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value.trim()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingOptionPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingOptionPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingOptionPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingOptionPath, '');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"Add\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, workingOptionPath)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, optionsPath).length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath).map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.optionListItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LabelImportant\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={option} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.remove(index);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingMinSupportOption\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) === option\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingMinSupportOption,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Clear\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Clear />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem divider>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprimary={'No Options have been added'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/**\r\n\t\t\t\t\t\t\t\t\t\t\t\t * Minimum Options\r\n\t\t\t\t\t\t\t\t\t\t\t\t * Maximum Options\r\n\t\t\t\t\t\t\t\t\t\t\t\t */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{(_get(values, voteTypeTextPath) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAPPROVAL_CONFIG.name ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypeTextPath) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tINSTANT_RUNOFF_CONFIG.name) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={8} item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={minOptionsPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Options Allowed\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, minOptionsPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, minOptionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={maxOptionsPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Maximum Options Allowed\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, maxOptionsPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, maxOptionsPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item container xs={12}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Winner Criteria\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Minimum Support *</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={workingWeightMinSupportPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Weighted Ratio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingWeightMinSupportPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingWeightMinSupportPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={workingUnweightMinSupportPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Unweighted Ratio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingUnweightMinSupportPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingUnweightMinSupportPath)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, voteTypePath) !== '' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t// vote type is selected\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypeTextPath) ===\r\n\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.name ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// binary vote selected\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t!_isEmpty(_get(values, optionsPath)) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// options exist\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingMinSupportOption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Applies to option\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={_get(values, optionsPath).map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { value: value, text: value };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={215}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo Options Found\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tApplies to all options\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSelect a Vote Type\r\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<SectionHeader\r\n\t\t\t\t\t\t\t\t\t\tdisableGutterBottom={true}\r\n\t\t\t\t\t\t\t\t\t\ttext=\"Acceptance Criteria\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\tname={checkedTurnoutPath}\r\n\t\t\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkedTurnoutPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={field.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (field.value) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset turnout acceptance criteria\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tform.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingWeightMinTurnoutPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tform.setFieldValue(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingUnweightMinTurnoutPath,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Turnout\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={workingWeightMinTurnoutPath}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={_get(values, checkedTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, checkedTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\twidth={138}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Weighted Ratio\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingWeightMinTurnoutPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingWeightMinTurnoutPath)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<FormTextField\r\n\t\t\t\t\t\t\t\t\t\t\tname={workingUnweightMinTurnoutPath}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={_get(values, checkedTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, checkedTurnoutPath)}\r\n\t\t\t\t\t\t\t\t\t\t\twidth={138}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Unweighted Ratio\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingUnweightMinTurnoutPath) &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingUnweightMinTurnoutPath)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\terrorClass={classes.errorText}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: this.criteriaStyle(values, checkedTurnoutPath),\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\txs={4}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\tApplies to all eligible voters.\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className={classes.stepperButtons}>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t{isSubmitting && errors && window.scrollTo(0, 0)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst FormTextField = (props) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Field name={props.name}>\r\n\t\t\t\t{({ field }) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tstyle={{ width: props.width }}\r\n\t\t\t\t\t\trequired={props.required}\r\n\t\t\t\t\t\tdisabled={props.disabled}\r\n\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\ttype={props.type}\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tspellCheck: props.enableSpellCheck,\r\n\t\t\t\t\t\t\tmaxLength: props.maxLength,\r\n\t\t\t\t\t\t\tautoComplete: 'nope',\r\n\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\terror={props.error}\r\n\t\t\t\t\t\tlabel={props.label}\r\n\t\t\t\t\t\tfullWidth={props.fullWidth}\r\n\t\t\t\t\t\tmultiline={props.multiline}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Field>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname={props.name}\r\n\t\t\t\trender={(msg) => <span className={props.errorClass}>{msg}</span>}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst FormSelectField = (props) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Field name={props.name}>\r\n\t\t\t\t{({ field }) => (\r\n\t\t\t\t\t<FormControl required disabled={props.disabled}>\r\n\t\t\t\t\t\t<InputLabel htmlFor={props.name}>{props.label}</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tstyle={{ minWidth: props.width }}\r\n\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t\t\t\tname={props.name}\r\n\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\tid: props.name,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{props.options.map((value, index) => (\r\n\t\t\t\t\t\t\t\t<MenuItem key={index} value={value.value}>\r\n\t\t\t\t\t\t\t\t\t{value.text}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t{/* <FormHelperText /> */}\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t)}\r\n\t\t\t</Field>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname={props.name}\r\n\t\t\t\trender={(msg) => <span className={props.errorClass}>{msg}</span>}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nConfigureVoteForm.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: 15,\r\n\t},\r\n\r\n\traiseRadio: {\r\n\t\tposition: 'relative',\r\n\t\ttop: '-16px',\r\n\t},\r\n\toptionList: {\r\n\t\toverflow: 'auto',\r\n\t},\r\n\toptionListItem: {\r\n\t\tpadding: '0px',\r\n\t},\r\n\terrorText: { color: 'red', fontSize: '13px' },\r\n\r\n\tstepperButtons: {\r\n\t\tmarginLeft: '-15px',\r\n\t},\r\n});\r\nexport default withStyles(styles)(ConfigureVoteForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EligibleVotersForm from './EligibleVotersForm.js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PreviewVote from './PreviewVote.js';\r\nimport FinalStep from './FinalStep.js';\r\nimport CreateVoteController from './CreateVoteController';\r\nimport ConfigureForm from './ConfigureForm';\r\n\r\nclass CreateVoteStepper extends React.Component {\r\n\tstate = {\r\n\t\tactiveStep: 0,\r\n\t};\r\n\r\n\thandleNext = () => {\r\n\t\tconst { activeStep } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tactiveStep: activeStep + 1,\r\n\t\t});\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tconst { activeStep } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tactiveStep: activeStep - 1,\r\n\t\t});\r\n\t};\r\n\r\n\tgetStepContent(stepIndex, createVoteSnapshot) {\r\n\t\tswitch (stepIndex) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<EligibleVotersForm\r\n\t\t\t\t\t\thandleNext={this.handleNext}\r\n\t\t\t\t\t\thandleBack={this.handleBack}\r\n\t\t\t\t\t\teligibleVotersForm={createVoteSnapshot.eligibleVotersForm}\r\n\t\t\t\t\t\tupdateParticipants={createVoteSnapshot.updateParticipants}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ConfigureForm\r\n\t\t\t\t\t\thandleNext={this.handleNext}\r\n\t\t\t\t\t\thandleBack={this.handleBack}\r\n\t\t\t\t\t\tupdatePoll={createVoteSnapshot.updatePoll}\r\n\t\t\t\t\t\tpollForm={createVoteSnapshot.pollForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<PreviewVote\r\n\t\t\t\t\t\thandleNext={this.handleNext}\r\n\t\t\t\t\t\thandleBack={this.handleBack}\r\n\t\t\t\t\t\tpoll={createVoteSnapshot.pollForm}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Content D';\r\n\t\t}\r\n\t}\r\n\r\n\tgetSteps() {\r\n\t\treturn ['Select Voters', 'Configure Poll', 'Preview & Sign'];\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst steps = this.getSteps();\r\n\t\tconst { activeStep } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<CreateVoteController>\r\n\t\t\t\t{(createVoteSnapshot) => (\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item xs={2} />\r\n\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t<Paper className={classes.pad}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant=\"h4\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ opacity: '.6' }}\r\n\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCreate Poll\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Stepper activeStep={activeStep}>\r\n\t\t\t\t\t\t\t\t\t{steps.map((label) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Stepper>\r\n\t\t\t\t\t\t\t\t{this.state.activeStep === steps.length ? (\r\n\t\t\t\t\t\t\t\t\t<FinalStep />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.getStepContent(activeStep, createVoteSnapshot)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={2} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</CreateVoteController>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCreateVoteStepper.propTypes = {\r\n\tclasses: PropTypes.object,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tpad: {\r\n\t\tpadding: '15px',\r\n\t},\r\n});\r\n\r\nexport default withStyles(styles)(CreateVoteStepper);\r\n","import { HashRouter as Router, Route } from 'react-router-dom';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport React, { Component } from 'react';\r\nimport { withWalletContext } from './context/WalletContext';\r\nimport WalletManager from './walletManager/WalletManager';\r\nimport AddInitialWallet from './addWallet/AddInitialWallet';\r\nimport Vote from './vote/listing/VoteListing';\r\nimport ViewVote from './vote/view/ViewVote';\r\nimport CreateVoteStepper from './vote/create/CreateVoteStepper';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import Help from './help/Help';\r\n//import ManageVoterList from './vote/voterList/ManageVoterList.js';\r\n//import LandingPage from './landingPage/LandingPage';\r\n//import Header from './header/Header';\r\n\r\nclass AppRouter extends Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\twalletController: {\r\n\t\t\t\treadyToManageWallet,\r\n\t\t\t\tisWalletEmpty,\r\n\t\t\t\tsetReadyToManageWallet,\r\n\t\t\t},\r\n\t\t} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\trender={() =>\r\n\t\t\t\t\t\t\treadyToManageWallet && !isWalletEmpty() ? (\r\n\t\t\t\t\t\t\t\t<WalletManager />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<AddInitialWallet\r\n\t\t\t\t\t\t\t\t\tsetReadyToManageWallet={setReadyToManageWallet}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/*\r\n\t\t\t\t\t<Route exact path=\"/vote\" component={ComingSoon} />\r\n\t\t\t\t\t<Route exact path=\"/createVote\" component={ComingSoon} />\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Route exact path=\"/vote\" component={Vote} />\r\n\t\t\t\t\t<Route exact path=\"/viewVote\" component={ViewVote} />\r\n\t\t\t\t\t<Route exact path=\"/createVote\" component={CreateVoteStepper} />\r\n\t\t\t\t\t \r\n\t\t\t\t\t<Route exact path=\"/manageVoters\" component={ManageVoterList} /> \r\n\t\t\t\t\t<Route exact path=\"/help\" component={Help} />\r\n\t\t\t\t\t<Route exact path=\"/\" component={LandingPage} />\r\n\t\t\t\t\t<Route path=\"/wallet/manage/\" component={WalletManager} />\r\n\t\t\t\t\t*/}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst ComingSoon = () => {\r\n\treturn (\r\n\t\t<Typography variant=\"h5\" align=\"center\">\r\n\t\t\tComing soon...\r\n\t\t</Typography>\r\n\t);\r\n};\r\n\r\nconst enhancer = _flowRight(withWalletContext);\r\n\r\nexport default enhancer(AppRouter);\r\n","import React, { Component } from 'react';\r\nimport _flowRight from 'lodash/flowRight';\r\nimport Header from './header/Header';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withRootTheme from './withRootTheme';\r\nimport WalletController from './context/WalletController';\r\nimport SeedController from './context/SeedController';\r\nimport FactomCliController from './context/FactomCliController';\r\nimport NetworkController from './context/NetworkController';\r\nimport LedgerController from './context/LedgerController';\r\nimport Disclaimer from './Disclaimer';\r\nimport TestnetWarningBar from './TestnetWarningBar';\r\nimport AppRouter from './AppRouter';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<NetworkController>\r\n\t\t\t\t\t\t<FactomCliController>\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Disclaimer />\r\n\t\t\t\t\t\t\t\t<WalletController>\r\n\t\t\t\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t\t\t\t<SeedController>\r\n\t\t\t\t\t\t\t\t\t\t<LedgerController>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.body}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<AppRouter />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TestnetWarningBar />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</LedgerController>\r\n\t\t\t\t\t\t\t\t\t</SeedController>\r\n\t\t\t\t\t\t\t\t</WalletController>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t</FactomCliController>\r\n\t\t\t\t\t</NetworkController>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\nApp.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n\tbody: {\r\n\t\twidth: '1200px',\r\n\t\tmargin: '0 auto',\r\n\t},\r\n});\r\n\r\nconst enhancer = _flowRight(withRootTheme, withStyles(styles));\r\n\r\nexport default enhancer(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { unregister } from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nunregister();\r\n"],"sourceRoot":""}